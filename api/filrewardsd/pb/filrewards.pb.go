// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: api/filrewardsd/pb/filrewards.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	pb1 "github.com/textileio/textile/v2/api/analyticsd/pb"
	pb "github.com/textileio/textile/v2/api/sendfild/pb"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type RewardType int32

const (
	RewardType_REWARD_TYPE_UNSPECIFIED                  RewardType = 0
	RewardType_REWARD_TYPE_FIRST_KEY_ACCOUNT_CREATED    RewardType = 1
	RewardType_REWARD_TYPE_FIRST_KEY_USER_CREATED       RewardType = 2 // does this fit "register first user?"
	RewardType_REWARD_TYPE_FIRST_ORG_CREATED            RewardType = 3
	RewardType_REWARD_TYPE_INITIAL_BILLING_SETUP        RewardType = 4
	RewardType_REWARD_TYPE_FIRST_BUCKET_CREATED         RewardType = 5
	RewardType_REWARD_TYPE_FIRST_BUCKET_ARCHIVE_CREATED RewardType = 6
	RewardType_REWARD_TYPE_FIRST_MAILBOX_CREATED        RewardType = 7
	RewardType_REWARD_TYPE_FIRST_THREAD_DB_CREATED      RewardType = 8
)

// Enum value maps for RewardType.
var (
	RewardType_name = map[int32]string{
		0: "REWARD_TYPE_UNSPECIFIED",
		1: "REWARD_TYPE_FIRST_KEY_ACCOUNT_CREATED",
		2: "REWARD_TYPE_FIRST_KEY_USER_CREATED",
		3: "REWARD_TYPE_FIRST_ORG_CREATED",
		4: "REWARD_TYPE_INITIAL_BILLING_SETUP",
		5: "REWARD_TYPE_FIRST_BUCKET_CREATED",
		6: "REWARD_TYPE_FIRST_BUCKET_ARCHIVE_CREATED",
		7: "REWARD_TYPE_FIRST_MAILBOX_CREATED",
		8: "REWARD_TYPE_FIRST_THREAD_DB_CREATED",
	}
	RewardType_value = map[string]int32{
		"REWARD_TYPE_UNSPECIFIED":                  0,
		"REWARD_TYPE_FIRST_KEY_ACCOUNT_CREATED":    1,
		"REWARD_TYPE_FIRST_KEY_USER_CREATED":       2,
		"REWARD_TYPE_FIRST_ORG_CREATED":            3,
		"REWARD_TYPE_INITIAL_BILLING_SETUP":        4,
		"REWARD_TYPE_FIRST_BUCKET_CREATED":         5,
		"REWARD_TYPE_FIRST_BUCKET_ARCHIVE_CREATED": 6,
		"REWARD_TYPE_FIRST_MAILBOX_CREATED":        7,
		"REWARD_TYPE_FIRST_THREAD_DB_CREATED":      8,
	}
)

func (x RewardType) Enum() *RewardType {
	p := new(RewardType)
	*p = x
	return p
}

func (x RewardType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RewardType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_filrewardsd_pb_filrewards_proto_enumTypes[0].Descriptor()
}

func (RewardType) Type() protoreflect.EnumType {
	return &file_api_filrewardsd_pb_filrewards_proto_enumTypes[0]
}

func (x RewardType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RewardType.Descriptor instead.
func (RewardType) EnumDescriptor() ([]byte, []int) {
	return file_api_filrewardsd_pb_filrewards_proto_rawDescGZIP(), []int{0}
}

type Reward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgKey            string               `protobuf:"bytes,1,opt,name=org_key,json=orgKey,proto3" json:"org_key,omitempty"`
	DevKey            string               `protobuf:"bytes,2,opt,name=dev_key,json=devKey,proto3" json:"dev_key,omitempty"`
	Type              RewardType           `protobuf:"varint,3,opt,name=type,proto3,enum=api.filrewardsd.pb.RewardType" json:"type,omitempty"`
	Factor            int64                `protobuf:"varint,4,opt,name=factor,proto3" json:"factor,omitempty"`
	BaseNanoFilReward int64                `protobuf:"varint,5,opt,name=base_nano_fil_reward,json=baseNanoFilReward,proto3" json:"base_nano_fil_reward,omitempty"`
	CreatedAt         *timestamp.Timestamp `protobuf:"bytes,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *Reward) Reset() {
	*x = Reward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_filrewardsd_pb_filrewards_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Reward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Reward) ProtoMessage() {}

func (x *Reward) ProtoReflect() protoreflect.Message {
	mi := &file_api_filrewardsd_pb_filrewards_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Reward.ProtoReflect.Descriptor instead.
func (*Reward) Descriptor() ([]byte, []int) {
	return file_api_filrewardsd_pb_filrewards_proto_rawDescGZIP(), []int{0}
}

func (x *Reward) GetOrgKey() string {
	if x != nil {
		return x.OrgKey
	}
	return ""
}

func (x *Reward) GetDevKey() string {
	if x != nil {
		return x.DevKey
	}
	return ""
}

func (x *Reward) GetType() RewardType {
	if x != nil {
		return x.Type
	}
	return RewardType_REWARD_TYPE_UNSPECIFIED
}

func (x *Reward) GetFactor() int64 {
	if x != nil {
		return x.Factor
	}
	return 0
}

func (x *Reward) GetBaseNanoFilReward() int64 {
	if x != nil {
		return x.BaseNanoFilReward
	}
	return 0
}

func (x *Reward) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type Claim struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OrgKey         string               `protobuf:"bytes,2,opt,name=org_key,json=orgKey,proto3" json:"org_key,omitempty"`
	ClaimedBy      string               `protobuf:"bytes,3,opt,name=claimed_by,json=claimedBy,proto3" json:"claimed_by,omitempty"`
	AmountNanoFil  int64                `protobuf:"varint,4,opt,name=amount_nano_fil,json=amountNanoFil,proto3" json:"amount_nano_fil,omitempty"`
	State          pb.MessageState      `protobuf:"varint,5,opt,name=state,proto3,enum=api.sendfild.pb.MessageState" json:"state,omitempty"`
	TxnCid         string               `protobuf:"bytes,6,opt,name=txn_cid,json=txnCid,proto3" json:"txn_cid,omitempty"`
	FailureMessage string               `protobuf:"bytes,7,opt,name=failure_message,json=failureMessage,proto3" json:"failure_message,omitempty"`
	CreatedAt      *timestamp.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      *timestamp.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Claim) Reset() {
	*x = Claim{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_filrewardsd_pb_filrewards_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Claim) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Claim) ProtoMessage() {}

func (x *Claim) ProtoReflect() protoreflect.Message {
	mi := &file_api_filrewardsd_pb_filrewards_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Claim.ProtoReflect.Descriptor instead.
func (*Claim) Descriptor() ([]byte, []int) {
	return file_api_filrewardsd_pb_filrewards_proto_rawDescGZIP(), []int{1}
}

func (x *Claim) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Claim) GetOrgKey() string {
	if x != nil {
		return x.OrgKey
	}
	return ""
}

func (x *Claim) GetClaimedBy() string {
	if x != nil {
		return x.ClaimedBy
	}
	return ""
}

func (x *Claim) GetAmountNanoFil() int64 {
	if x != nil {
		return x.AmountNanoFil
	}
	return 0
}

func (x *Claim) GetState() pb.MessageState {
	if x != nil {
		return x.State
	}
	return pb.MessageState_MESSAGE_STATE_UNSPECIFIED
}

func (x *Claim) GetTxnCid() string {
	if x != nil {
		return x.TxnCid
	}
	return ""
}

func (x *Claim) GetFailureMessage() string {
	if x != nil {
		return x.FailureMessage
	}
	return ""
}

func (x *Claim) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Claim) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type ProcessAnalyticsEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgKey         string    `protobuf:"bytes,1,opt,name=org_key,json=orgKey,proto3" json:"org_key,omitempty"`
	DevKey         string    `protobuf:"bytes,2,opt,name=dev_key,json=devKey,proto3" json:"dev_key,omitempty"`
	AnalyticsEvent pb1.Event `protobuf:"varint,3,opt,name=analytics_event,json=analyticsEvent,proto3,enum=api.analyticsd.pb.Event" json:"analytics_event,omitempty"`
}

func (x *ProcessAnalyticsEventRequest) Reset() {
	*x = ProcessAnalyticsEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_filrewardsd_pb_filrewards_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessAnalyticsEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessAnalyticsEventRequest) ProtoMessage() {}

func (x *ProcessAnalyticsEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_filrewardsd_pb_filrewards_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessAnalyticsEventRequest.ProtoReflect.Descriptor instead.
func (*ProcessAnalyticsEventRequest) Descriptor() ([]byte, []int) {
	return file_api_filrewardsd_pb_filrewards_proto_rawDescGZIP(), []int{2}
}

func (x *ProcessAnalyticsEventRequest) GetOrgKey() string {
	if x != nil {
		return x.OrgKey
	}
	return ""
}

func (x *ProcessAnalyticsEventRequest) GetDevKey() string {
	if x != nil {
		return x.DevKey
	}
	return ""
}

func (x *ProcessAnalyticsEventRequest) GetAnalyticsEvent() pb1.Event {
	if x != nil {
		return x.AnalyticsEvent
	}
	return pb1.Event_EVENT_UNSPECIFIED
}

type ProcessAnalyticsEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reward *Reward `protobuf:"bytes,1,opt,name=reward,proto3" json:"reward,omitempty"`
}

func (x *ProcessAnalyticsEventResponse) Reset() {
	*x = ProcessAnalyticsEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_filrewardsd_pb_filrewards_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessAnalyticsEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessAnalyticsEventResponse) ProtoMessage() {}

func (x *ProcessAnalyticsEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_filrewardsd_pb_filrewards_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessAnalyticsEventResponse.ProtoReflect.Descriptor instead.
func (*ProcessAnalyticsEventResponse) Descriptor() ([]byte, []int) {
	return file_api_filrewardsd_pb_filrewards_proto_rawDescGZIP(), []int{3}
}

func (x *ProcessAnalyticsEventResponse) GetReward() *Reward {
	if x != nil {
		return x.Reward
	}
	return nil
}

type ListRewardsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgKeyFilter     string     `protobuf:"bytes,1,opt,name=org_key_filter,json=orgKeyFilter,proto3" json:"org_key_filter,omitempty"`
	DevKeyFilter     string     `protobuf:"bytes,2,opt,name=dev_key_filter,json=devKeyFilter,proto3" json:"dev_key_filter,omitempty"`
	RewardTypeFilter RewardType `protobuf:"varint,3,opt,name=reward_type_filter,json=rewardTypeFilter,proto3,enum=api.filrewardsd.pb.RewardType" json:"reward_type_filter,omitempty"`
	Ascending        bool       `protobuf:"varint,4,opt,name=ascending,proto3" json:"ascending,omitempty"`
	PageSize         int64      `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Page             int64      `protobuf:"varint,6,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListRewardsRequest) Reset() {
	*x = ListRewardsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_filrewardsd_pb_filrewards_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRewardsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRewardsRequest) ProtoMessage() {}

func (x *ListRewardsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_filrewardsd_pb_filrewards_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRewardsRequest.ProtoReflect.Descriptor instead.
func (*ListRewardsRequest) Descriptor() ([]byte, []int) {
	return file_api_filrewardsd_pb_filrewards_proto_rawDescGZIP(), []int{4}
}

func (x *ListRewardsRequest) GetOrgKeyFilter() string {
	if x != nil {
		return x.OrgKeyFilter
	}
	return ""
}

func (x *ListRewardsRequest) GetDevKeyFilter() string {
	if x != nil {
		return x.DevKeyFilter
	}
	return ""
}

func (x *ListRewardsRequest) GetRewardTypeFilter() RewardType {
	if x != nil {
		return x.RewardTypeFilter
	}
	return RewardType_REWARD_TYPE_UNSPECIFIED
}

func (x *ListRewardsRequest) GetAscending() bool {
	if x != nil {
		return x.Ascending
	}
	return false
}

func (x *ListRewardsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListRewardsRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

type ListRewardsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Rewards []*Reward `protobuf:"bytes,1,rep,name=rewards,proto3" json:"rewards,omitempty"`
}

func (x *ListRewardsResponse) Reset() {
	*x = ListRewardsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_filrewardsd_pb_filrewards_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRewardsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRewardsResponse) ProtoMessage() {}

func (x *ListRewardsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_filrewardsd_pb_filrewards_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRewardsResponse.ProtoReflect.Descriptor instead.
func (*ListRewardsResponse) Descriptor() ([]byte, []int) {
	return file_api_filrewardsd_pb_filrewards_proto_rawDescGZIP(), []int{5}
}

func (x *ListRewardsResponse) GetRewards() []*Reward {
	if x != nil {
		return x.Rewards
	}
	return nil
}

type ClaimRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgKey        string `protobuf:"bytes,1,opt,name=org_key,json=orgKey,proto3" json:"org_key,omitempty"`
	Address       string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	ClaimedBy     string `protobuf:"bytes,3,opt,name=claimed_by,json=claimedBy,proto3" json:"claimed_by,omitempty"`
	AmountNanoFil int64  `protobuf:"varint,4,opt,name=amount_nano_fil,json=amountNanoFil,proto3" json:"amount_nano_fil,omitempty"`
}

func (x *ClaimRequest) Reset() {
	*x = ClaimRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_filrewardsd_pb_filrewards_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClaimRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimRequest) ProtoMessage() {}

func (x *ClaimRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_filrewardsd_pb_filrewards_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimRequest.ProtoReflect.Descriptor instead.
func (*ClaimRequest) Descriptor() ([]byte, []int) {
	return file_api_filrewardsd_pb_filrewards_proto_rawDescGZIP(), []int{6}
}

func (x *ClaimRequest) GetOrgKey() string {
	if x != nil {
		return x.OrgKey
	}
	return ""
}

func (x *ClaimRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ClaimRequest) GetClaimedBy() string {
	if x != nil {
		return x.ClaimedBy
	}
	return ""
}

func (x *ClaimRequest) GetAmountNanoFil() int64 {
	if x != nil {
		return x.AmountNanoFil
	}
	return 0
}

type ClaimResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Claim *Claim `protobuf:"bytes,1,opt,name=claim,proto3" json:"claim,omitempty"`
}

func (x *ClaimResponse) Reset() {
	*x = ClaimResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_filrewardsd_pb_filrewards_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClaimResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimResponse) ProtoMessage() {}

func (x *ClaimResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_filrewardsd_pb_filrewards_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimResponse.ProtoReflect.Descriptor instead.
func (*ClaimResponse) Descriptor() ([]byte, []int) {
	return file_api_filrewardsd_pb_filrewards_proto_rawDescGZIP(), []int{7}
}

func (x *ClaimResponse) GetClaim() *Claim {
	if x != nil {
		return x.Claim
	}
	return nil
}

type ListClaimsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgKeyFilter    string `protobuf:"bytes,1,opt,name=org_key_filter,json=orgKeyFilter,proto3" json:"org_key_filter,omitempty"`
	ClaimedByFilter string `protobuf:"bytes,2,opt,name=claimed_by_filter,json=claimedByFilter,proto3" json:"claimed_by_filter,omitempty"`
	Ascending       bool   `protobuf:"varint,3,opt,name=ascending,proto3" json:"ascending,omitempty"`
	PageSize        int64  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Page            int64  `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListClaimsRequest) Reset() {
	*x = ListClaimsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_filrewardsd_pb_filrewards_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClaimsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClaimsRequest) ProtoMessage() {}

func (x *ListClaimsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_filrewardsd_pb_filrewards_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClaimsRequest.ProtoReflect.Descriptor instead.
func (*ListClaimsRequest) Descriptor() ([]byte, []int) {
	return file_api_filrewardsd_pb_filrewards_proto_rawDescGZIP(), []int{8}
}

func (x *ListClaimsRequest) GetOrgKeyFilter() string {
	if x != nil {
		return x.OrgKeyFilter
	}
	return ""
}

func (x *ListClaimsRequest) GetClaimedByFilter() string {
	if x != nil {
		return x.ClaimedByFilter
	}
	return ""
}

func (x *ListClaimsRequest) GetAscending() bool {
	if x != nil {
		return x.Ascending
	}
	return false
}

func (x *ListClaimsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListClaimsRequest) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

type ListClaimsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Claims []*Claim `protobuf:"bytes,1,rep,name=claims,proto3" json:"claims,omitempty"`
}

func (x *ListClaimsResponse) Reset() {
	*x = ListClaimsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_filrewardsd_pb_filrewards_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListClaimsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClaimsResponse) ProtoMessage() {}

func (x *ListClaimsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_filrewardsd_pb_filrewards_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClaimsResponse.ProtoReflect.Descriptor instead.
func (*ListClaimsResponse) Descriptor() ([]byte, []int) {
	return file_api_filrewardsd_pb_filrewards_proto_rawDescGZIP(), []int{9}
}

func (x *ListClaimsResponse) GetClaims() []*Claim {
	if x != nil {
		return x.Claims
	}
	return nil
}

type BalanceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgKey string `protobuf:"bytes,1,opt,name=org_key,json=orgKey,proto3" json:"org_key,omitempty"`
}

func (x *BalanceRequest) Reset() {
	*x = BalanceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_filrewardsd_pb_filrewards_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceRequest) ProtoMessage() {}

func (x *BalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_filrewardsd_pb_filrewards_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceRequest.ProtoReflect.Descriptor instead.
func (*BalanceRequest) Descriptor() ([]byte, []int) {
	return file_api_filrewardsd_pb_filrewards_proto_rawDescGZIP(), []int{10}
}

func (x *BalanceRequest) GetOrgKey() string {
	if x != nil {
		return x.OrgKey
	}
	return ""
}

type BalanceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RewardedNanoFil        int64 `protobuf:"varint,1,opt,name=rewarded_nano_fil,json=rewardedNanoFil,proto3" json:"rewarded_nano_fil,omitempty"`
	ClaimedPendingNanoFil  int64 `protobuf:"varint,2,opt,name=claimed_pending_nano_fil,json=claimedPendingNanoFil,proto3" json:"claimed_pending_nano_fil,omitempty"`
	ClaimedCompleteNanoFil int64 `protobuf:"varint,3,opt,name=claimed_complete_nano_fil,json=claimedCompleteNanoFil,proto3" json:"claimed_complete_nano_fil,omitempty"`
	AvailableNanoFil       int64 `protobuf:"varint,4,opt,name=available_nano_fil,json=availableNanoFil,proto3" json:"available_nano_fil,omitempty"`
}

func (x *BalanceResponse) Reset() {
	*x = BalanceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_filrewardsd_pb_filrewards_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BalanceResponse) ProtoMessage() {}

func (x *BalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_filrewardsd_pb_filrewards_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BalanceResponse.ProtoReflect.Descriptor instead.
func (*BalanceResponse) Descriptor() ([]byte, []int) {
	return file_api_filrewardsd_pb_filrewards_proto_rawDescGZIP(), []int{11}
}

func (x *BalanceResponse) GetRewardedNanoFil() int64 {
	if x != nil {
		return x.RewardedNanoFil
	}
	return 0
}

func (x *BalanceResponse) GetClaimedPendingNanoFil() int64 {
	if x != nil {
		return x.ClaimedPendingNanoFil
	}
	return 0
}

func (x *BalanceResponse) GetClaimedCompleteNanoFil() int64 {
	if x != nil {
		return x.ClaimedCompleteNanoFil
	}
	return 0
}

func (x *BalanceResponse) GetAvailableNanoFil() int64 {
	if x != nil {
		return x.AvailableNanoFil
	}
	return 0
}

var File_api_filrewardsd_pb_filrewards_proto protoreflect.FileDescriptor

var file_api_filrewardsd_pb_filrewards_proto_rawDesc = []byte{
	0x0a, 0x23, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x6c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x64, 0x2f, 0x70, 0x62, 0x2f, 0x66, 0x69, 0x6c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6c, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x64, 0x2e, 0x70, 0x62, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x64, 0x2f, 0x70, 0x62, 0x2f, 0x61, 0x6e,
	0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x61,
	0x70, 0x69, 0x2f, 0x73, 0x65, 0x6e, 0x64, 0x66, 0x69, 0x6c, 0x64, 0x2f, 0x70, 0x62, 0x2f, 0x73,
	0x65, 0x6e, 0x64, 0x66, 0x69, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf2, 0x01, 0x0a,
	0x06, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x5f, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x67, 0x4b, 0x65, 0x79,
	0x12, 0x17, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x4b, 0x65, 0x79, 0x12, 0x32, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69,
	0x6c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x66,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x2f, 0x0a, 0x14, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x6e, 0x61,
	0x6e, 0x6f, 0x5f, 0x66, 0x69, 0x6c, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x11, 0x62, 0x61, 0x73, 0x65, 0x4e, 0x61, 0x6e, 0x6f, 0x46, 0x69, 0x6c,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0xe4, 0x02, 0x0a, 0x05, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6f,
	0x72, 0x67, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72,
	0x67, 0x4b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x5f,
	0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x65,
	0x64, 0x42, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61,
	0x6e, 0x6f, 0x5f, 0x66, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6e, 0x6f, 0x46, 0x69, 0x6c, 0x12, 0x33, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x6e, 0x64, 0x66, 0x69, 0x6c, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x6e, 0x5f, 0x63, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x74, 0x78, 0x6e, 0x43, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x61, 0x69,
	0x6c, 0x75, 0x72, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x93, 0x01, 0x0a, 0x1c, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x72, 0x67,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x67, 0x4b,
	0x65, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x4b, 0x65, 0x79, 0x12, 0x41, 0x0a, 0x0f, 0x61,
	0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79,
	0x74, 0x69, 0x63, 0x73, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x0e,
	0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x53,
	0x0a, 0x1d, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69,
	0x63, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x32, 0x0a, 0x06, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x64, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x06, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x22, 0xfd, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x6f, 0x72,
	0x67, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x67, 0x4b, 0x65, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x12, 0x24, 0x0a, 0x0e, 0x64, 0x65, 0x76, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x76, 0x4b, 0x65, 0x79,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x4c, 0x0a, 0x12, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6c, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x73, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x10, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x22, 0x4b, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x66, 0x69, 0x6c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x64, 0x2e, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x07, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73,
	0x22, 0x88, 0x01, 0x0a, 0x0c, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x6f, 0x72, 0x67, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x5f,
	0x62, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x65,
	0x64, 0x42, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61,
	0x6e, 0x6f, 0x5f, 0x66, 0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6e, 0x6f, 0x46, 0x69, 0x6c, 0x22, 0x40, 0x0a, 0x0d, 0x43,
	0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x05,
	0x63, 0x6c, 0x61, 0x69, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x66, 0x69, 0x6c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x64, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x05, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x22, 0xb4, 0x01,
	0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x6f, 0x72, 0x67, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x67,
	0x4b, 0x65, 0x79, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x63, 0x6c, 0x61,
	0x69, 0x6d, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x42, 0x79, 0x46,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x73, 0x63, 0x65, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x22, 0x47, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x69,
	0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x63, 0x6c,
	0x61, 0x69, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x66, 0x69, 0x6c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x64, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x06, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x22, 0x29, 0x0a,
	0x0e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x17, 0x0a, 0x07, 0x6f, 0x72, 0x67, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6f, 0x72, 0x67, 0x4b, 0x65, 0x79, 0x22, 0xdf, 0x01, 0x0a, 0x0f, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x11,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x65, 0x64, 0x5f, 0x6e, 0x61, 0x6e, 0x6f, 0x5f, 0x66, 0x69,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x65,
	0x64, 0x4e, 0x61, 0x6e, 0x6f, 0x46, 0x69, 0x6c, 0x12, 0x37, 0x0a, 0x18, 0x63, 0x6c, 0x61, 0x69,
	0x6d, 0x65, 0x64, 0x5f, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x61, 0x6e, 0x6f,
	0x5f, 0x66, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x63, 0x6c, 0x61, 0x69,
	0x6d, 0x65, 0x64, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6e, 0x6f, 0x46, 0x69,
	0x6c, 0x12, 0x39, 0x0a, 0x19, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6e, 0x6f, 0x5f, 0x66, 0x69, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x16, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x65, 0x64, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x61, 0x6e, 0x6f, 0x46, 0x69, 0x6c, 0x12, 0x2c, 0x0a, 0x12,
	0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6e, 0x6f, 0x5f, 0x66,
	0x69, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6e, 0x6f, 0x46, 0x69, 0x6c, 0x2a, 0xea, 0x02, 0x0a, 0x0a, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x45, 0x57,
	0x41, 0x52, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x29, 0x0a, 0x25, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x49, 0x52, 0x53, 0x54, 0x5f, 0x4b, 0x45, 0x59, 0x5f,
	0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10,
	0x01, 0x12, 0x26, 0x0a, 0x22, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x46, 0x49, 0x52, 0x53, 0x54, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f,
	0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x21, 0x0a, 0x1d, 0x52, 0x45, 0x57,
	0x41, 0x52, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x49, 0x52, 0x53, 0x54, 0x5f, 0x4f,
	0x52, 0x47, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x25, 0x0a, 0x21,
	0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x49, 0x54,
	0x49, 0x41, 0x4c, 0x5f, 0x42, 0x49, 0x4c, 0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x45, 0x54, 0x55,
	0x50, 0x10, 0x04, 0x12, 0x24, 0x0a, 0x20, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x46, 0x49, 0x52, 0x53, 0x54, 0x5f, 0x42, 0x55, 0x43, 0x4b, 0x45, 0x54, 0x5f,
	0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x05, 0x12, 0x2c, 0x0a, 0x28, 0x52, 0x45, 0x57,
	0x41, 0x52, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x49, 0x52, 0x53, 0x54, 0x5f, 0x42,
	0x55, 0x43, 0x4b, 0x45, 0x54, 0x5f, 0x41, 0x52, 0x43, 0x48, 0x49, 0x56, 0x45, 0x5f, 0x43, 0x52,
	0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x06, 0x12, 0x25, 0x0a, 0x21, 0x52, 0x45, 0x57, 0x41, 0x52,
	0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x49, 0x52, 0x53, 0x54, 0x5f, 0x4d, 0x41, 0x49,
	0x4c, 0x42, 0x4f, 0x58, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x07, 0x12, 0x27,
	0x0a, 0x23, 0x52, 0x45, 0x57, 0x41, 0x52, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x49,
	0x52, 0x53, 0x54, 0x5f, 0x54, 0x48, 0x52, 0x45, 0x41, 0x44, 0x5f, 0x44, 0x42, 0x5f, 0x43, 0x52,
	0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x08, 0x32, 0xfa, 0x03, 0x0a, 0x11, 0x46, 0x69, 0x6c, 0x52,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7e, 0x0a,
	0x15, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63,
	0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6c,
	0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x31, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66,
	0x69, 0x6c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x60, 0x0a,
	0x0b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x12, 0x26, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x66, 0x69, 0x6c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x64, 0x2e, 0x70,
	0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6c, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x4e, 0x0a, 0x05, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66,
	0x69, 0x6c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x66, 0x69, 0x6c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x64, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x6c, 0x61, 0x69, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x5d, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x12, 0x25, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x64, 0x2e,
	0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6c, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x73, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54,
	0x0a, 0x07, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x66, 0x69, 0x6c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x66, 0x69, 0x6c, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x64, 0x2e,
	0x70, 0x62, 0x2e, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x69, 0x6c, 0x65, 0x69, 0x6f, 0x2f, 0x74, 0x65, 0x78,
	0x74, 0x69, 0x6c, 0x65, 0x2f, 0x76, 0x32, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x6c, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x64, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_api_filrewardsd_pb_filrewards_proto_rawDescOnce sync.Once
	file_api_filrewardsd_pb_filrewards_proto_rawDescData = file_api_filrewardsd_pb_filrewards_proto_rawDesc
)

func file_api_filrewardsd_pb_filrewards_proto_rawDescGZIP() []byte {
	file_api_filrewardsd_pb_filrewards_proto_rawDescOnce.Do(func() {
		file_api_filrewardsd_pb_filrewards_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_filrewardsd_pb_filrewards_proto_rawDescData)
	})
	return file_api_filrewardsd_pb_filrewards_proto_rawDescData
}

var file_api_filrewardsd_pb_filrewards_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_filrewardsd_pb_filrewards_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_api_filrewardsd_pb_filrewards_proto_goTypes = []interface{}{
	(RewardType)(0),                       // 0: api.filrewardsd.pb.RewardType
	(*Reward)(nil),                        // 1: api.filrewardsd.pb.Reward
	(*Claim)(nil),                         // 2: api.filrewardsd.pb.Claim
	(*ProcessAnalyticsEventRequest)(nil),  // 3: api.filrewardsd.pb.ProcessAnalyticsEventRequest
	(*ProcessAnalyticsEventResponse)(nil), // 4: api.filrewardsd.pb.ProcessAnalyticsEventResponse
	(*ListRewardsRequest)(nil),            // 5: api.filrewardsd.pb.ListRewardsRequest
	(*ListRewardsResponse)(nil),           // 6: api.filrewardsd.pb.ListRewardsResponse
	(*ClaimRequest)(nil),                  // 7: api.filrewardsd.pb.ClaimRequest
	(*ClaimResponse)(nil),                 // 8: api.filrewardsd.pb.ClaimResponse
	(*ListClaimsRequest)(nil),             // 9: api.filrewardsd.pb.ListClaimsRequest
	(*ListClaimsResponse)(nil),            // 10: api.filrewardsd.pb.ListClaimsResponse
	(*BalanceRequest)(nil),                // 11: api.filrewardsd.pb.BalanceRequest
	(*BalanceResponse)(nil),               // 12: api.filrewardsd.pb.BalanceResponse
	(*timestamp.Timestamp)(nil),           // 13: google.protobuf.Timestamp
	(pb.MessageState)(0),                  // 14: api.sendfild.pb.MessageState
	(pb1.Event)(0),                        // 15: api.analyticsd.pb.Event
}
var file_api_filrewardsd_pb_filrewards_proto_depIdxs = []int32{
	0,  // 0: api.filrewardsd.pb.Reward.type:type_name -> api.filrewardsd.pb.RewardType
	13, // 1: api.filrewardsd.pb.Reward.created_at:type_name -> google.protobuf.Timestamp
	14, // 2: api.filrewardsd.pb.Claim.state:type_name -> api.sendfild.pb.MessageState
	13, // 3: api.filrewardsd.pb.Claim.created_at:type_name -> google.protobuf.Timestamp
	13, // 4: api.filrewardsd.pb.Claim.updated_at:type_name -> google.protobuf.Timestamp
	15, // 5: api.filrewardsd.pb.ProcessAnalyticsEventRequest.analytics_event:type_name -> api.analyticsd.pb.Event
	1,  // 6: api.filrewardsd.pb.ProcessAnalyticsEventResponse.reward:type_name -> api.filrewardsd.pb.Reward
	0,  // 7: api.filrewardsd.pb.ListRewardsRequest.reward_type_filter:type_name -> api.filrewardsd.pb.RewardType
	1,  // 8: api.filrewardsd.pb.ListRewardsResponse.rewards:type_name -> api.filrewardsd.pb.Reward
	2,  // 9: api.filrewardsd.pb.ClaimResponse.claim:type_name -> api.filrewardsd.pb.Claim
	2,  // 10: api.filrewardsd.pb.ListClaimsResponse.claims:type_name -> api.filrewardsd.pb.Claim
	3,  // 11: api.filrewardsd.pb.FilRewardsService.ProcessAnalyticsEvent:input_type -> api.filrewardsd.pb.ProcessAnalyticsEventRequest
	5,  // 12: api.filrewardsd.pb.FilRewardsService.ListRewards:input_type -> api.filrewardsd.pb.ListRewardsRequest
	7,  // 13: api.filrewardsd.pb.FilRewardsService.Claim:input_type -> api.filrewardsd.pb.ClaimRequest
	9,  // 14: api.filrewardsd.pb.FilRewardsService.ListClaims:input_type -> api.filrewardsd.pb.ListClaimsRequest
	11, // 15: api.filrewardsd.pb.FilRewardsService.Balance:input_type -> api.filrewardsd.pb.BalanceRequest
	4,  // 16: api.filrewardsd.pb.FilRewardsService.ProcessAnalyticsEvent:output_type -> api.filrewardsd.pb.ProcessAnalyticsEventResponse
	6,  // 17: api.filrewardsd.pb.FilRewardsService.ListRewards:output_type -> api.filrewardsd.pb.ListRewardsResponse
	8,  // 18: api.filrewardsd.pb.FilRewardsService.Claim:output_type -> api.filrewardsd.pb.ClaimResponse
	10, // 19: api.filrewardsd.pb.FilRewardsService.ListClaims:output_type -> api.filrewardsd.pb.ListClaimsResponse
	12, // 20: api.filrewardsd.pb.FilRewardsService.Balance:output_type -> api.filrewardsd.pb.BalanceResponse
	16, // [16:21] is the sub-list for method output_type
	11, // [11:16] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_api_filrewardsd_pb_filrewards_proto_init() }
func file_api_filrewardsd_pb_filrewards_proto_init() {
	if File_api_filrewardsd_pb_filrewards_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_filrewardsd_pb_filrewards_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Reward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_filrewardsd_pb_filrewards_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Claim); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_filrewardsd_pb_filrewards_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessAnalyticsEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_filrewardsd_pb_filrewards_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessAnalyticsEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_filrewardsd_pb_filrewards_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRewardsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_filrewardsd_pb_filrewards_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRewardsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_filrewardsd_pb_filrewards_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClaimRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_filrewardsd_pb_filrewards_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClaimResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_filrewardsd_pb_filrewards_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClaimsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_filrewardsd_pb_filrewards_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListClaimsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_filrewardsd_pb_filrewards_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_filrewardsd_pb_filrewards_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BalanceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_filrewardsd_pb_filrewards_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_filrewardsd_pb_filrewards_proto_goTypes,
		DependencyIndexes: file_api_filrewardsd_pb_filrewards_proto_depIdxs,
		EnumInfos:         file_api_filrewardsd_pb_filrewards_proto_enumTypes,
		MessageInfos:      file_api_filrewardsd_pb_filrewards_proto_msgTypes,
	}.Build()
	File_api_filrewardsd_pb_filrewards_proto = out.File
	file_api_filrewardsd_pb_filrewards_proto_rawDesc = nil
	file_api_filrewardsd_pb_filrewards_proto_goTypes = nil
	file_api_filrewardsd_pb_filrewards_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FilRewardsServiceClient is the client API for FilRewardsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FilRewardsServiceClient interface {
	ProcessAnalyticsEvent(ctx context.Context, in *ProcessAnalyticsEventRequest, opts ...grpc.CallOption) (*ProcessAnalyticsEventResponse, error)
	ListRewards(ctx context.Context, in *ListRewardsRequest, opts ...grpc.CallOption) (*ListRewardsResponse, error)
	Claim(ctx context.Context, in *ClaimRequest, opts ...grpc.CallOption) (*ClaimResponse, error)
	ListClaims(ctx context.Context, in *ListClaimsRequest, opts ...grpc.CallOption) (*ListClaimsResponse, error)
	Balance(ctx context.Context, in *BalanceRequest, opts ...grpc.CallOption) (*BalanceResponse, error)
}

type filRewardsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewFilRewardsServiceClient(cc grpc.ClientConnInterface) FilRewardsServiceClient {
	return &filRewardsServiceClient{cc}
}

func (c *filRewardsServiceClient) ProcessAnalyticsEvent(ctx context.Context, in *ProcessAnalyticsEventRequest, opts ...grpc.CallOption) (*ProcessAnalyticsEventResponse, error) {
	out := new(ProcessAnalyticsEventResponse)
	err := c.cc.Invoke(ctx, "/api.filrewardsd.pb.FilRewardsService/ProcessAnalyticsEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *filRewardsServiceClient) ListRewards(ctx context.Context, in *ListRewardsRequest, opts ...grpc.CallOption) (*ListRewardsResponse, error) {
	out := new(ListRewardsResponse)
	err := c.cc.Invoke(ctx, "/api.filrewardsd.pb.FilRewardsService/ListRewards", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *filRewardsServiceClient) Claim(ctx context.Context, in *ClaimRequest, opts ...grpc.CallOption) (*ClaimResponse, error) {
	out := new(ClaimResponse)
	err := c.cc.Invoke(ctx, "/api.filrewardsd.pb.FilRewardsService/Claim", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *filRewardsServiceClient) ListClaims(ctx context.Context, in *ListClaimsRequest, opts ...grpc.CallOption) (*ListClaimsResponse, error) {
	out := new(ListClaimsResponse)
	err := c.cc.Invoke(ctx, "/api.filrewardsd.pb.FilRewardsService/ListClaims", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *filRewardsServiceClient) Balance(ctx context.Context, in *BalanceRequest, opts ...grpc.CallOption) (*BalanceResponse, error) {
	out := new(BalanceResponse)
	err := c.cc.Invoke(ctx, "/api.filrewardsd.pb.FilRewardsService/Balance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FilRewardsServiceServer is the server API for FilRewardsService service.
type FilRewardsServiceServer interface {
	ProcessAnalyticsEvent(context.Context, *ProcessAnalyticsEventRequest) (*ProcessAnalyticsEventResponse, error)
	ListRewards(context.Context, *ListRewardsRequest) (*ListRewardsResponse, error)
	Claim(context.Context, *ClaimRequest) (*ClaimResponse, error)
	ListClaims(context.Context, *ListClaimsRequest) (*ListClaimsResponse, error)
	Balance(context.Context, *BalanceRequest) (*BalanceResponse, error)
}

// UnimplementedFilRewardsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedFilRewardsServiceServer struct {
}

func (*UnimplementedFilRewardsServiceServer) ProcessAnalyticsEvent(context.Context, *ProcessAnalyticsEventRequest) (*ProcessAnalyticsEventResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ProcessAnalyticsEvent not implemented")
}
func (*UnimplementedFilRewardsServiceServer) ListRewards(context.Context, *ListRewardsRequest) (*ListRewardsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListRewards not implemented")
}
func (*UnimplementedFilRewardsServiceServer) Claim(context.Context, *ClaimRequest) (*ClaimResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Claim not implemented")
}
func (*UnimplementedFilRewardsServiceServer) ListClaims(context.Context, *ListClaimsRequest) (*ListClaimsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListClaims not implemented")
}
func (*UnimplementedFilRewardsServiceServer) Balance(context.Context, *BalanceRequest) (*BalanceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Balance not implemented")
}

func RegisterFilRewardsServiceServer(s *grpc.Server, srv FilRewardsServiceServer) {
	s.RegisterService(&_FilRewardsService_serviceDesc, srv)
}

func _FilRewardsService_ProcessAnalyticsEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProcessAnalyticsEventRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FilRewardsServiceServer).ProcessAnalyticsEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.filrewardsd.pb.FilRewardsService/ProcessAnalyticsEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FilRewardsServiceServer).ProcessAnalyticsEvent(ctx, req.(*ProcessAnalyticsEventRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FilRewardsService_ListRewards_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRewardsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FilRewardsServiceServer).ListRewards(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.filrewardsd.pb.FilRewardsService/ListRewards",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FilRewardsServiceServer).ListRewards(ctx, req.(*ListRewardsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FilRewardsService_Claim_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClaimRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FilRewardsServiceServer).Claim(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.filrewardsd.pb.FilRewardsService/Claim",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FilRewardsServiceServer).Claim(ctx, req.(*ClaimRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FilRewardsService_ListClaims_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListClaimsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FilRewardsServiceServer).ListClaims(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.filrewardsd.pb.FilRewardsService/ListClaims",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FilRewardsServiceServer).ListClaims(ctx, req.(*ListClaimsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _FilRewardsService_Balance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BalanceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FilRewardsServiceServer).Balance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.filrewardsd.pb.FilRewardsService/Balance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FilRewardsServiceServer).Balance(ctx, req.(*BalanceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FilRewardsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.filrewardsd.pb.FilRewardsService",
	HandlerType: (*FilRewardsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ProcessAnalyticsEvent",
			Handler:    _FilRewardsService_ProcessAnalyticsEvent_Handler,
		},
		{
			MethodName: "ListRewards",
			Handler:    _FilRewardsService_ListRewards_Handler,
		},
		{
			MethodName: "Claim",
			Handler:    _FilRewardsService_Claim_Handler,
		},
		{
			MethodName: "ListClaims",
			Handler:    _FilRewardsService_ListClaims_Handler,
		},
		{
			MethodName: "Balance",
			Handler:    _FilRewardsService_Balance_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/filrewardsd/pb/filrewards.proto",
}
