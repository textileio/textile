syntax = "proto3";
package api.billingd.pb;
option go_package = "github.com/textileio/textile/v2/api/billingd/pb";

message Period {
    int64 start = 1;
    int64 end = 2;
}

message Usage {
    int64 units = 1;
    int64 total = 2;
    int64 free = 3;
}

message CheckHealthRequest {}

message CheckHealthResponse {}

message CreateCustomerRequest {
    string key = 1;
    string parent_key = 2;
    string email = 3;
}

message CreateCustomerResponse {}

message GetCustomerRequest {
    string key = 1;
}

message GetCustomerResponse {
    string stripe_id = 1;
    string parent_key = 2;
    string email = 3;
    string status = 4;
    int64 balance = 5;
    bool billable = 6;
    bool delinquent = 7;
    int64 created_at = 8;

    Period period = 9;
    Usage stored_data = 10;
    Usage network_egress = 11;
    Usage instance_writes = 12;
    Usage instance_reads = 13;
}

message GetCustomerSessionRequest {
    string key = 1;
}

message GetCustomerSessionResponse {
    string url = 1;
}

message UpdateCustomerRequest {
    string key = 1;
    int64 balance = 2;
    bool billable = 3;
    bool delinquent = 4;
}

message UpdateCustomerResponse {}

message UpdateCustomerSubscriptionRequest {
    string key = 1;
    string status = 2;
    Period period = 3;
}

message UpdateCustomerSubscriptionResponse {}

message RecreateCustomerSubscriptionRequest {
    string key = 1;
}

message RecreateCustomerSubscriptionResponse {}

message DeleteCustomerRequest {
    string key = 1;
}

message DeleteCustomerResponse {}

message IncStoredDataRequest {
    string key = 1;
    int64 inc_size = 2;
}

message IncStoredDataResponse {
    Period period = 1;
    Usage stored_data = 2;
}

message IncNetworkEgressRequest {
    string key = 1;
    int64 inc_size = 2;
}

message IncNetworkEgressResponse {
    Period period = 1;
    Usage network_egress = 2;
}

message IncInstanceReadsRequest {
    string key = 1;
    int64 inc_count = 2;
}

message IncInstanceReadsResponse {
    Period period = 1;
    Usage instance_reads = 2;
}

message IncInstanceWritesRequest {
    string key = 1;
    int64 inc_count = 2;
}

message IncInstanceWritesResponse {
    Period period = 1;
    Usage instance_writes = 2;
}

service APIService {
    rpc CheckHealth(CheckHealthRequest) returns (CheckHealthResponse) {}
    rpc CreateCustomer(CreateCustomerRequest) returns (CreateCustomerResponse) {}
    rpc GetCustomer(GetCustomerRequest) returns (GetCustomerResponse) {}
    rpc GetCustomerSession(GetCustomerSessionRequest) returns (GetCustomerSessionResponse) {}
    rpc UpdateCustomer(UpdateCustomerRequest) returns (UpdateCustomerResponse) {}
    rpc UpdateCustomerSubscription(UpdateCustomerSubscriptionRequest) returns (UpdateCustomerSubscriptionResponse) {}
    rpc RecreateCustomerSubscription(RecreateCustomerSubscriptionRequest) returns (RecreateCustomerSubscriptionResponse) {}
    rpc DeleteCustomer(DeleteCustomerRequest) returns (DeleteCustomerResponse) {}
    rpc IncStoredData(IncStoredDataRequest) returns (IncStoredDataResponse) {}
    rpc IncNetworkEgress(IncNetworkEgressRequest) returns (IncNetworkEgressResponse) {}
    rpc IncInstanceReads(IncInstanceReadsRequest) returns (IncInstanceReadsResponse) {}
    rpc IncInstanceWrites(IncInstanceWritesRequest) returns (IncInstanceWritesResponse) {}
}
