// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: api/mindexd/pb/mindexd.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// Domain
type MinerIndexInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinerAddr string        `protobuf:"bytes,1,opt,name=miner_addr,json=minerAddr,proto3" json:"miner_addr,omitempty"`
	Filecoin  *FilecoinInfo `protobuf:"bytes,3,opt,name=filecoin,proto3" json:"filecoin,omitempty"`
	Textile   *TextileInfo  `protobuf:"bytes,4,opt,name=textile,proto3" json:"textile,omitempty"`
	UpdatedAt int64         `protobuf:"varint,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *MinerIndexInfo) Reset() {
	*x = MinerIndexInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinerIndexInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinerIndexInfo) ProtoMessage() {}

func (x *MinerIndexInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinerIndexInfo.ProtoReflect.Descriptor instead.
func (*MinerIndexInfo) Descriptor() ([]byte, []int) {
	return file_api_mindexd_pb_mindexd_proto_rawDescGZIP(), []int{0}
}

func (x *MinerIndexInfo) GetMinerAddr() string {
	if x != nil {
		return x.MinerAddr
	}
	return ""
}

func (x *MinerIndexInfo) GetFilecoin() *FilecoinInfo {
	if x != nil {
		return x.Filecoin
	}
	return nil
}

func (x *MinerIndexInfo) GetTextile() *TextileInfo {
	if x != nil {
		return x.Textile
	}
	return nil
}

func (x *MinerIndexInfo) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type FilecoinInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelativePower    float64 `protobuf:"fixed64,1,opt,name=relative_power,json=relativePower,proto3" json:"relative_power,omitempty"`
	AskPrice         int64   `protobuf:"varint,2,opt,name=ask_price,json=askPrice,proto3" json:"ask_price,omitempty"`
	AskVerifiedPrice int64   `protobuf:"varint,3,opt,name=ask_verified_price,json=askVerifiedPrice,proto3" json:"ask_verified_price,omitempty"`
	MinPieceSize     int64   `protobuf:"varint,4,opt,name=min_piece_size,json=minPieceSize,proto3" json:"min_piece_size,omitempty"`
	MaxPieceSize     int64   `protobuf:"varint,5,opt,name=max_piece_size,json=maxPieceSize,proto3" json:"max_piece_size,omitempty"`
	SectorSize       int64   `protobuf:"varint,6,opt,name=sector_size,json=sectorSize,proto3" json:"sector_size,omitempty"`
	UpdatedAt        int64   `protobuf:"varint,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *FilecoinInfo) Reset() {
	*x = FilecoinInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilecoinInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilecoinInfo) ProtoMessage() {}

func (x *FilecoinInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilecoinInfo.ProtoReflect.Descriptor instead.
func (*FilecoinInfo) Descriptor() ([]byte, []int) {
	return file_api_mindexd_pb_mindexd_proto_rawDescGZIP(), []int{1}
}

func (x *FilecoinInfo) GetRelativePower() float64 {
	if x != nil {
		return x.RelativePower
	}
	return 0
}

func (x *FilecoinInfo) GetAskPrice() int64 {
	if x != nil {
		return x.AskPrice
	}
	return 0
}

func (x *FilecoinInfo) GetAskVerifiedPrice() int64 {
	if x != nil {
		return x.AskVerifiedPrice
	}
	return 0
}

func (x *FilecoinInfo) GetMinPieceSize() int64 {
	if x != nil {
		return x.MinPieceSize
	}
	return 0
}

func (x *FilecoinInfo) GetMaxPieceSize() int64 {
	if x != nil {
		return x.MaxPieceSize
	}
	return 0
}

func (x *FilecoinInfo) GetSectorSize() int64 {
	if x != nil {
		return x.SectorSize
	}
	return 0
}

func (x *FilecoinInfo) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type TextileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Regions   map[string]*TextileRegionInfo `protobuf:"bytes,1,rep,name=regions,proto3" json:"regions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	UpdatedAt int64                         `protobuf:"varint,2,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *TextileInfo) Reset() {
	*x = TextileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextileInfo) ProtoMessage() {}

func (x *TextileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextileInfo.ProtoReflect.Descriptor instead.
func (*TextileInfo) Descriptor() ([]byte, []int) {
	return file_api_mindexd_pb_mindexd_proto_rawDescGZIP(), []int{2}
}

func (x *TextileInfo) GetRegions() map[string]*TextileRegionInfo {
	if x != nil {
		return x.Regions
	}
	return nil
}

func (x *TextileInfo) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type TextileRegionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deals      *TextileDealsInfo      `protobuf:"bytes,1,opt,name=deals,proto3" json:"deals,omitempty"`
	Retrievals *TextileRetrievalsInfo `protobuf:"bytes,2,opt,name=retrievals,proto3" json:"retrievals,omitempty"`
}

func (x *TextileRegionInfo) Reset() {
	*x = TextileRegionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextileRegionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextileRegionInfo) ProtoMessage() {}

func (x *TextileRegionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextileRegionInfo.ProtoReflect.Descriptor instead.
func (*TextileRegionInfo) Descriptor() ([]byte, []int) {
	return file_api_mindexd_pb_mindexd_proto_rawDescGZIP(), []int{3}
}

func (x *TextileRegionInfo) GetDeals() *TextileDealsInfo {
	if x != nil {
		return x.Deals
	}
	return nil
}

func (x *TextileRegionInfo) GetRetrievals() *TextileRetrievalsInfo {
	if x != nil {
		return x.Retrievals
	}
	return nil
}

type TextileDealsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total         int64                 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Last          int64                 `protobuf:"varint,2,opt,name=last,proto3" json:"last,omitempty"`
	Failures      int64                 `protobuf:"varint,3,opt,name=failures,proto3" json:"failures,omitempty"`
	LastFailure   int64                 `protobuf:"varint,4,opt,name=last_failure,json=lastFailure,proto3" json:"last_failure,omitempty"`
	TailTransfers []*TransferMiBPerSec  `protobuf:"bytes,5,rep,name=tail_transfers,json=tailTransfers,proto3" json:"tail_transfers,omitempty"`
	TailSealed    []*SealedDurationMins `protobuf:"bytes,6,rep,name=tail_sealed,json=tailSealed,proto3" json:"tail_sealed,omitempty"`
}

func (x *TextileDealsInfo) Reset() {
	*x = TextileDealsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextileDealsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextileDealsInfo) ProtoMessage() {}

func (x *TextileDealsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextileDealsInfo.ProtoReflect.Descriptor instead.
func (*TextileDealsInfo) Descriptor() ([]byte, []int) {
	return file_api_mindexd_pb_mindexd_proto_rawDescGZIP(), []int{4}
}

func (x *TextileDealsInfo) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *TextileDealsInfo) GetLast() int64 {
	if x != nil {
		return x.Last
	}
	return 0
}

func (x *TextileDealsInfo) GetFailures() int64 {
	if x != nil {
		return x.Failures
	}
	return 0
}

func (x *TextileDealsInfo) GetLastFailure() int64 {
	if x != nil {
		return x.LastFailure
	}
	return 0
}

func (x *TextileDealsInfo) GetTailTransfers() []*TransferMiBPerSec {
	if x != nil {
		return x.TailTransfers
	}
	return nil
}

func (x *TextileDealsInfo) GetTailSealed() []*SealedDurationMins {
	if x != nil {
		return x.TailSealed
	}
	return nil
}

type TextileRetrievalsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total         int64                `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Last          int64                `protobuf:"varint,2,opt,name=last,proto3" json:"last,omitempty"`
	Failures      int64                `protobuf:"varint,3,opt,name=failures,proto3" json:"failures,omitempty"`
	LastFailure   int64                `protobuf:"varint,4,opt,name=last_failure,json=lastFailure,proto3" json:"last_failure,omitempty"`
	TailTransfers []*TransferMiBPerSec `protobuf:"bytes,5,rep,name=tail_transfers,json=tailTransfers,proto3" json:"tail_transfers,omitempty"`
}

func (x *TextileRetrievalsInfo) Reset() {
	*x = TextileRetrievalsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextileRetrievalsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextileRetrievalsInfo) ProtoMessage() {}

func (x *TextileRetrievalsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextileRetrievalsInfo.ProtoReflect.Descriptor instead.
func (*TextileRetrievalsInfo) Descriptor() ([]byte, []int) {
	return file_api_mindexd_pb_mindexd_proto_rawDescGZIP(), []int{5}
}

func (x *TextileRetrievalsInfo) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *TextileRetrievalsInfo) GetLast() int64 {
	if x != nil {
		return x.Last
	}
	return 0
}

func (x *TextileRetrievalsInfo) GetFailures() int64 {
	if x != nil {
		return x.Failures
	}
	return 0
}

func (x *TextileRetrievalsInfo) GetLastFailure() int64 {
	if x != nil {
		return x.LastFailure
	}
	return 0
}

func (x *TextileRetrievalsInfo) GetTailTransfers() []*TransferMiBPerSec {
	if x != nil {
		return x.TailTransfers
	}
	return nil
}

type TransferMiBPerSec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransferedAt int64   `protobuf:"varint,1,opt,name=transfered_at,json=transferedAt,proto3" json:"transfered_at,omitempty"`
	MibPerSec    float64 `protobuf:"fixed64,2,opt,name=mib_per_sec,json=mibPerSec,proto3" json:"mib_per_sec,omitempty"`
}

func (x *TransferMiBPerSec) Reset() {
	*x = TransferMiBPerSec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferMiBPerSec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferMiBPerSec) ProtoMessage() {}

func (x *TransferMiBPerSec) ProtoReflect() protoreflect.Message {
	mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferMiBPerSec.ProtoReflect.Descriptor instead.
func (*TransferMiBPerSec) Descriptor() ([]byte, []int) {
	return file_api_mindexd_pb_mindexd_proto_rawDescGZIP(), []int{6}
}

func (x *TransferMiBPerSec) GetTransferedAt() int64 {
	if x != nil {
		return x.TransferedAt
	}
	return 0
}

func (x *TransferMiBPerSec) GetMibPerSec() float64 {
	if x != nil {
		return x.MibPerSec
	}
	return 0
}

type SealedDurationMins struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SealedAt        int64 `protobuf:"varint,1,opt,name=sealed_at,json=sealedAt,proto3" json:"sealed_at,omitempty"`
	DurationSeconds int64 `protobuf:"varint,2,opt,name=duration_seconds,json=durationSeconds,proto3" json:"duration_seconds,omitempty"`
}

func (x *SealedDurationMins) Reset() {
	*x = SealedDurationMins{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SealedDurationMins) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SealedDurationMins) ProtoMessage() {}

func (x *SealedDurationMins) ProtoReflect() protoreflect.Message {
	mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SealedDurationMins.ProtoReflect.Descriptor instead.
func (*SealedDurationMins) Descriptor() ([]byte, []int) {
	return file_api_mindexd_pb_mindexd_proto_rawDescGZIP(), []int{7}
}

func (x *SealedDurationMins) GetSealedAt() int64 {
	if x != nil {
		return x.SealedAt
	}
	return 0
}

func (x *SealedDurationMins) GetDurationSeconds() int64 {
	if x != nil {
		return x.DurationSeconds
	}
	return 0
}

type GetMinersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinerAddress string `protobuf:"bytes,1,opt,name=miner_address,json=minerAddress,proto3" json:"miner_address,omitempty"`
}

func (x *GetMinersResponse) Reset() {
	*x = GetMinersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMinersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMinersResponse) ProtoMessage() {}

func (x *GetMinersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMinersResponse.ProtoReflect.Descriptor instead.
func (*GetMinersResponse) Descriptor() ([]byte, []int) {
	return file_api_mindexd_pb_mindexd_proto_rawDescGZIP(), []int{8}
}

func (x *GetMinersResponse) GetMinerAddress() string {
	if x != nil {
		return x.MinerAddress
	}
	return ""
}

// rpc GetIndexDashboard
type GetIndexDashboardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetIndexDashboardRequest) Reset() {
	*x = GetIndexDashboardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIndexDashboardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIndexDashboardRequest) ProtoMessage() {}

func (x *GetIndexDashboardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIndexDashboardRequest.ProtoReflect.Descriptor instead.
func (*GetIndexDashboardRequest) Descriptor() ([]byte, []int) {
	return file_api_mindexd_pb_mindexd_proto_rawDescGZIP(), []int{9}
}

type GetIndexDashboardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Miners []*MinerIndexInfo `protobuf:"bytes,1,rep,name=miners,proto3" json:"miners,omitempty"`
}

func (x *GetIndexDashboardResponse) Reset() {
	*x = GetIndexDashboardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIndexDashboardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIndexDashboardResponse) ProtoMessage() {}

func (x *GetIndexDashboardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIndexDashboardResponse.ProtoReflect.Descriptor instead.
func (*GetIndexDashboardResponse) Descriptor() ([]byte, []int) {
	return file_api_mindexd_pb_mindexd_proto_rawDescGZIP(), []int{10}
}

func (x *GetIndexDashboardResponse) GetMiners() []*MinerIndexInfo {
	if x != nil {
		return x.Miners
	}
	return nil
}

// rpc GetMinerInfo
type GetMinerInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinerAddress string `protobuf:"bytes,1,opt,name=miner_address,json=minerAddress,proto3" json:"miner_address,omitempty"`
}

func (x *GetMinerInfoRequest) Reset() {
	*x = GetMinerInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMinerInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMinerInfoRequest) ProtoMessage() {}

func (x *GetMinerInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMinerInfoRequest.ProtoReflect.Descriptor instead.
func (*GetMinerInfoRequest) Descriptor() ([]byte, []int) {
	return file_api_mindexd_pb_mindexd_proto_rawDescGZIP(), []int{11}
}

func (x *GetMinerInfoRequest) GetMinerAddress() string {
	if x != nil {
		return x.MinerAddress
	}
	return ""
}

type GetMinerInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *MinerIndexInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *GetMinerInfoResponse) Reset() {
	*x = GetMinerInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMinerInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMinerInfoResponse) ProtoMessage() {}

func (x *GetMinerInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMinerInfoResponse.ProtoReflect.Descriptor instead.
func (*GetMinerInfoResponse) Descriptor() ([]byte, []int) {
	return file_api_mindexd_pb_mindexd_proto_rawDescGZIP(), []int{12}
}

func (x *GetMinerInfoResponse) GetInfo() *MinerIndexInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// rpc CalculateDealPrice
type CalculateDealPriceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinerAddress  string `protobuf:"bytes,1,opt,name=miner_address,json=minerAddress,proto3" json:"miner_address,omitempty"`
	DataSizeBytes int64  `protobuf:"varint,2,opt,name=data_size_bytes,json=dataSizeBytes,proto3" json:"data_size_bytes,omitempty"`
	DurationDays  int64  `protobuf:"varint,3,opt,name=duration_days,json=durationDays,proto3" json:"duration_days,omitempty"`
}

func (x *CalculateDealPriceRequest) Reset() {
	*x = CalculateDealPriceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculateDealPriceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateDealPriceRequest) ProtoMessage() {}

func (x *CalculateDealPriceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateDealPriceRequest.ProtoReflect.Descriptor instead.
func (*CalculateDealPriceRequest) Descriptor() ([]byte, []int) {
	return file_api_mindexd_pb_mindexd_proto_rawDescGZIP(), []int{13}
}

func (x *CalculateDealPriceRequest) GetMinerAddress() string {
	if x != nil {
		return x.MinerAddress
	}
	return ""
}

func (x *CalculateDealPriceRequest) GetDataSizeBytes() int64 {
	if x != nil {
		return x.DataSizeBytes
	}
	return 0
}

func (x *CalculateDealPriceRequest) GetDurationDays() int64 {
	if x != nil {
		return x.DurationDays
	}
	return 0
}

type CalculateDealPriceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalCost         int64 `protobuf:"varint,1,opt,name=total_cost,json=totalCost,proto3" json:"total_cost,omitempty"`
	VerifiedTotalCost int64 `protobuf:"varint,2,opt,name=verified_total_cost,json=verifiedTotalCost,proto3" json:"verified_total_cost,omitempty"`
	PaddedSize        int64 `protobuf:"varint,3,opt,name=padded_size,json=paddedSize,proto3" json:"padded_size,omitempty"`
	DurationEpochs    int64 `protobuf:"varint,4,opt,name=duration_epochs,json=durationEpochs,proto3" json:"duration_epochs,omitempty"`
}

func (x *CalculateDealPriceResponse) Reset() {
	*x = CalculateDealPriceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculateDealPriceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateDealPriceResponse) ProtoMessage() {}

func (x *CalculateDealPriceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateDealPriceResponse.ProtoReflect.Descriptor instead.
func (*CalculateDealPriceResponse) Descriptor() ([]byte, []int) {
	return file_api_mindexd_pb_mindexd_proto_rawDescGZIP(), []int{14}
}

func (x *CalculateDealPriceResponse) GetTotalCost() int64 {
	if x != nil {
		return x.TotalCost
	}
	return 0
}

func (x *CalculateDealPriceResponse) GetVerifiedTotalCost() int64 {
	if x != nil {
		return x.VerifiedTotalCost
	}
	return 0
}

func (x *CalculateDealPriceResponse) GetPaddedSize() int64 {
	if x != nil {
		return x.PaddedSize
	}
	return 0
}

func (x *CalculateDealPriceResponse) GetDurationEpochs() int64 {
	if x != nil {
		return x.DurationEpochs
	}
	return 0
}

var File_api_mindexd_pb_mindexd_proto protoreflect.FileDescriptor

var file_api_mindexd_pb_mindexd_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x64, 0x2f, 0x70, 0x62,
	0x2f, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e,
	0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x64, 0x2e, 0x70, 0x62, 0x22, 0xbf,
	0x01, 0x0a, 0x0e, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x12, 0x38, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x64,
	0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x12, 0x35, 0x0a, 0x07, 0x74, 0x65,
	0x78, 0x74, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x65, 0x78,
	0x74, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x74, 0x65, 0x78, 0x74, 0x69, 0x6c,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0x8c, 0x02, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x6f,
	0x77, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x72, 0x65, 0x6c, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x73, 0x6b, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x73, 0x6b,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x73, 0x6b, 0x5f, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x10, 0x61, 0x73, 0x6b, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x69, 0x65, 0x63, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6d, 0x69, 0x6e,
	0x50, 0x69, 0x65, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x61, 0x78,
	0x5f, 0x70, 0x69, 0x65, 0x63, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x50, 0x69, 0x65, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0xcf, 0x01, 0x0a, 0x0b, 0x54, 0x65, 0x78, 0x74, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x42, 0x0a, 0x07, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x64, 0x2e, 0x70,
	0x62, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x1a, 0x5d, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x37, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x64, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x92, 0x01, 0x0a, 0x11, 0x54, 0x65, 0x78, 0x74, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x36, 0x0a, 0x05, 0x64, 0x65, 0x61, 0x6c, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x69, 0x6c, 0x65, 0x44,
	0x65, 0x61, 0x6c, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x64, 0x65, 0x61, 0x6c, 0x73, 0x12,
	0x45, 0x0a, 0x0a, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x64, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x61, 0x6c, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x61, 0x6c, 0x73, 0x22, 0x8a, 0x02, 0x0a, 0x10, 0x54, 0x65, 0x78, 0x74, 0x69,
	0x6c, 0x65, 0x44, 0x65, 0x61, 0x6c, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x6c, 0x61, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65,
	0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x46, 0x61, 0x69,
	0x6c, 0x75, 0x72, 0x65, 0x12, 0x48, 0x0a, 0x0e, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4d, 0x69, 0x42, 0x50, 0x65, 0x72, 0x53, 0x65, 0x63, 0x52,
	0x0d, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x12, 0x43,
	0x0a, 0x0b, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x73, 0x65, 0x61, 0x6c, 0x65, 0x64, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x64, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x61, 0x6c, 0x65, 0x64, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x73, 0x52, 0x0a, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x61,
	0x6c, 0x65, 0x64, 0x22, 0xca, 0x01, 0x0a, 0x15, 0x54, 0x65, 0x78, 0x74, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x69, 0x6c, 0x75,
	0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x61, 0x69, 0x6c, 0x75,
	0x72, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x66, 0x61, 0x69, 0x6c,
	0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x46,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x48, 0x0a, 0x0e, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x64, 0x2e, 0x70, 0x62, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4d, 0x69, 0x42, 0x50, 0x65, 0x72, 0x53, 0x65,
	0x63, 0x52, 0x0d, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73,
	0x22, 0x58, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4d, 0x69, 0x42, 0x50,
	0x65, 0x72, 0x53, 0x65, 0x63, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x6d, 0x69,
	0x62, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x09, 0x6d, 0x69, 0x62, 0x50, 0x65, 0x72, 0x53, 0x65, 0x63, 0x22, 0x5c, 0x0a, 0x12, 0x53, 0x65,
	0x61, 0x6c, 0x65, 0x64, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x6c, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x61, 0x6c, 0x65, 0x64, 0x41, 0x74, 0x12, 0x29, 0x0a,
	0x10, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0x38, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d,
	0x69, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x22, 0x1a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x44, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x53,
	0x0a, 0x19, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x6d,
	0x69, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x69, 0x6e,
	0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6d, 0x69, 0x6e,
	0x65, 0x72, 0x73, 0x22, 0x3a, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x69,
	0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22,
	0x4a, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x8d, 0x01, 0x0a, 0x19,
	0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x65, 0x61, 0x6c, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x69, 0x6e,
	0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x26,
	0x0a, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x62, 0x79, 0x74, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x53, 0x69, 0x7a,
	0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x79, 0x73, 0x22, 0xb5, 0x01, 0x0a, 0x1a,
	0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x65, 0x61, 0x6c, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x13, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x73, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x64,
	0x64, 0x65, 0x64, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x70, 0x61, 0x64, 0x64, 0x65, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x70, 0x6f,
	0x63, 0x68, 0x73, 0x32, 0xc4, 0x02, 0x0a, 0x0a, 0x41, 0x50, 0x49, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x6a, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x44, 0x61,
	0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x44, 0x61, 0x73, 0x68, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x64, 0x2e,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x44, 0x61, 0x73, 0x68, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x64, 0x2e, 0x70, 0x62, 0x2e,
	0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x64, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x12, 0x43,
	0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x65, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x29, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x64, 0x2e,
	0x70, 0x62, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x65, 0x61, 0x6c,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x65, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x69, 0x6c, 0x65,
	0x69, 0x6f, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x69, 0x6c, 0x65, 0x2f, 0x76, 0x32, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x64, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_mindexd_pb_mindexd_proto_rawDescOnce sync.Once
	file_api_mindexd_pb_mindexd_proto_rawDescData = file_api_mindexd_pb_mindexd_proto_rawDesc
)

func file_api_mindexd_pb_mindexd_proto_rawDescGZIP() []byte {
	file_api_mindexd_pb_mindexd_proto_rawDescOnce.Do(func() {
		file_api_mindexd_pb_mindexd_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_mindexd_pb_mindexd_proto_rawDescData)
	})
	return file_api_mindexd_pb_mindexd_proto_rawDescData
}

var file_api_mindexd_pb_mindexd_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_api_mindexd_pb_mindexd_proto_goTypes = []interface{}{
	(*MinerIndexInfo)(nil),             // 0: api.mindexd.pb.MinerIndexInfo
	(*FilecoinInfo)(nil),               // 1: api.mindexd.pb.FilecoinInfo
	(*TextileInfo)(nil),                // 2: api.mindexd.pb.TextileInfo
	(*TextileRegionInfo)(nil),          // 3: api.mindexd.pb.TextileRegionInfo
	(*TextileDealsInfo)(nil),           // 4: api.mindexd.pb.TextileDealsInfo
	(*TextileRetrievalsInfo)(nil),      // 5: api.mindexd.pb.TextileRetrievalsInfo
	(*TransferMiBPerSec)(nil),          // 6: api.mindexd.pb.TransferMiBPerSec
	(*SealedDurationMins)(nil),         // 7: api.mindexd.pb.SealedDurationMins
	(*GetMinersResponse)(nil),          // 8: api.mindexd.pb.GetMinersResponse
	(*GetIndexDashboardRequest)(nil),   // 9: api.mindexd.pb.GetIndexDashboardRequest
	(*GetIndexDashboardResponse)(nil),  // 10: api.mindexd.pb.GetIndexDashboardResponse
	(*GetMinerInfoRequest)(nil),        // 11: api.mindexd.pb.GetMinerInfoRequest
	(*GetMinerInfoResponse)(nil),       // 12: api.mindexd.pb.GetMinerInfoResponse
	(*CalculateDealPriceRequest)(nil),  // 13: api.mindexd.pb.CalculateDealPriceRequest
	(*CalculateDealPriceResponse)(nil), // 14: api.mindexd.pb.CalculateDealPriceResponse
	nil,                                // 15: api.mindexd.pb.TextileInfo.RegionsEntry
}
var file_api_mindexd_pb_mindexd_proto_depIdxs = []int32{
	1,  // 0: api.mindexd.pb.MinerIndexInfo.filecoin:type_name -> api.mindexd.pb.FilecoinInfo
	2,  // 1: api.mindexd.pb.MinerIndexInfo.textile:type_name -> api.mindexd.pb.TextileInfo
	15, // 2: api.mindexd.pb.TextileInfo.regions:type_name -> api.mindexd.pb.TextileInfo.RegionsEntry
	4,  // 3: api.mindexd.pb.TextileRegionInfo.deals:type_name -> api.mindexd.pb.TextileDealsInfo
	5,  // 4: api.mindexd.pb.TextileRegionInfo.retrievals:type_name -> api.mindexd.pb.TextileRetrievalsInfo
	6,  // 5: api.mindexd.pb.TextileDealsInfo.tail_transfers:type_name -> api.mindexd.pb.TransferMiBPerSec
	7,  // 6: api.mindexd.pb.TextileDealsInfo.tail_sealed:type_name -> api.mindexd.pb.SealedDurationMins
	6,  // 7: api.mindexd.pb.TextileRetrievalsInfo.tail_transfers:type_name -> api.mindexd.pb.TransferMiBPerSec
	0,  // 8: api.mindexd.pb.GetIndexDashboardResponse.miners:type_name -> api.mindexd.pb.MinerIndexInfo
	0,  // 9: api.mindexd.pb.GetMinerInfoResponse.info:type_name -> api.mindexd.pb.MinerIndexInfo
	3,  // 10: api.mindexd.pb.TextileInfo.RegionsEntry.value:type_name -> api.mindexd.pb.TextileRegionInfo
	9,  // 11: api.mindexd.pb.APIService.GetIndexDashboard:input_type -> api.mindexd.pb.GetIndexDashboardRequest
	11, // 12: api.mindexd.pb.APIService.GetMinerInfo:input_type -> api.mindexd.pb.GetMinerInfoRequest
	13, // 13: api.mindexd.pb.APIService.CalculateDealPrice:input_type -> api.mindexd.pb.CalculateDealPriceRequest
	10, // 14: api.mindexd.pb.APIService.GetIndexDashboard:output_type -> api.mindexd.pb.GetIndexDashboardResponse
	12, // 15: api.mindexd.pb.APIService.GetMinerInfo:output_type -> api.mindexd.pb.GetMinerInfoResponse
	14, // 16: api.mindexd.pb.APIService.CalculateDealPrice:output_type -> api.mindexd.pb.CalculateDealPriceResponse
	14, // [14:17] is the sub-list for method output_type
	11, // [11:14] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_api_mindexd_pb_mindexd_proto_init() }
func file_api_mindexd_pb_mindexd_proto_init() {
	if File_api_mindexd_pb_mindexd_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_mindexd_pb_mindexd_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinerIndexInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mindexd_pb_mindexd_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilecoinInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mindexd_pb_mindexd_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mindexd_pb_mindexd_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextileRegionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mindexd_pb_mindexd_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextileDealsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mindexd_pb_mindexd_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextileRetrievalsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mindexd_pb_mindexd_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferMiBPerSec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mindexd_pb_mindexd_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SealedDurationMins); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mindexd_pb_mindexd_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMinersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mindexd_pb_mindexd_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIndexDashboardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mindexd_pb_mindexd_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIndexDashboardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mindexd_pb_mindexd_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMinerInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mindexd_pb_mindexd_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMinerInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mindexd_pb_mindexd_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculateDealPriceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mindexd_pb_mindexd_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculateDealPriceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_mindexd_pb_mindexd_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_mindexd_pb_mindexd_proto_goTypes,
		DependencyIndexes: file_api_mindexd_pb_mindexd_proto_depIdxs,
		MessageInfos:      file_api_mindexd_pb_mindexd_proto_msgTypes,
	}.Build()
	File_api_mindexd_pb_mindexd_proto = out.File
	file_api_mindexd_pb_mindexd_proto_rawDesc = nil
	file_api_mindexd_pb_mindexd_proto_goTypes = nil
	file_api_mindexd_pb_mindexd_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// APIServiceClient is the client API for APIService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type APIServiceClient interface {
	GetIndexDashboard(ctx context.Context, in *GetIndexDashboardRequest, opts ...grpc.CallOption) (*GetIndexDashboardResponse, error)
	GetMinerInfo(ctx context.Context, in *GetMinerInfoRequest, opts ...grpc.CallOption) (*GetMinerInfoResponse, error)
	CalculateDealPrice(ctx context.Context, in *CalculateDealPriceRequest, opts ...grpc.CallOption) (*CalculateDealPriceResponse, error)
}

type aPIServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAPIServiceClient(cc grpc.ClientConnInterface) APIServiceClient {
	return &aPIServiceClient{cc}
}

func (c *aPIServiceClient) GetIndexDashboard(ctx context.Context, in *GetIndexDashboardRequest, opts ...grpc.CallOption) (*GetIndexDashboardResponse, error) {
	out := new(GetIndexDashboardResponse)
	err := c.cc.Invoke(ctx, "/api.mindexd.pb.APIService/GetIndexDashboard", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIServiceClient) GetMinerInfo(ctx context.Context, in *GetMinerInfoRequest, opts ...grpc.CallOption) (*GetMinerInfoResponse, error) {
	out := new(GetMinerInfoResponse)
	err := c.cc.Invoke(ctx, "/api.mindexd.pb.APIService/GetMinerInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIServiceClient) CalculateDealPrice(ctx context.Context, in *CalculateDealPriceRequest, opts ...grpc.CallOption) (*CalculateDealPriceResponse, error) {
	out := new(CalculateDealPriceResponse)
	err := c.cc.Invoke(ctx, "/api.mindexd.pb.APIService/CalculateDealPrice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// APIServiceServer is the server API for APIService service.
type APIServiceServer interface {
	GetIndexDashboard(context.Context, *GetIndexDashboardRequest) (*GetIndexDashboardResponse, error)
	GetMinerInfo(context.Context, *GetMinerInfoRequest) (*GetMinerInfoResponse, error)
	CalculateDealPrice(context.Context, *CalculateDealPriceRequest) (*CalculateDealPriceResponse, error)
}

// UnimplementedAPIServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAPIServiceServer struct {
}

func (*UnimplementedAPIServiceServer) GetIndexDashboard(context.Context, *GetIndexDashboardRequest) (*GetIndexDashboardResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetIndexDashboard not implemented")
}
func (*UnimplementedAPIServiceServer) GetMinerInfo(context.Context, *GetMinerInfoRequest) (*GetMinerInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMinerInfo not implemented")
}
func (*UnimplementedAPIServiceServer) CalculateDealPrice(context.Context, *CalculateDealPriceRequest) (*CalculateDealPriceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CalculateDealPrice not implemented")
}

func RegisterAPIServiceServer(s *grpc.Server, srv APIServiceServer) {
	s.RegisterService(&_APIService_serviceDesc, srv)
}

func _APIService_GetIndexDashboard_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetIndexDashboardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServiceServer).GetIndexDashboard(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.mindexd.pb.APIService/GetIndexDashboard",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServiceServer).GetIndexDashboard(ctx, req.(*GetIndexDashboardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIService_GetMinerInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMinerInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServiceServer).GetMinerInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.mindexd.pb.APIService/GetMinerInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServiceServer).GetMinerInfo(ctx, req.(*GetMinerInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIService_CalculateDealPrice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CalculateDealPriceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServiceServer).CalculateDealPrice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.mindexd.pb.APIService/CalculateDealPrice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServiceServer).CalculateDealPrice(ctx, req.(*CalculateDealPriceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _APIService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.mindexd.pb.APIService",
	HandlerType: (*APIServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetIndexDashboard",
			Handler:    _APIService_GetIndexDashboard_Handler,
		},
		{
			MethodName: "GetMinerInfo",
			Handler:    _APIService_GetMinerInfo_Handler,
		},
		{
			MethodName: "CalculateDealPrice",
			Handler:    _APIService_CalculateDealPrice_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/mindexd/pb/mindexd.proto",
}
