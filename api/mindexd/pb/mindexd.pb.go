// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: api/mindexd/pb/mindexd.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type QueryIndexRequestSortField int32

const (
	QueryIndexRequestSortField_TEXTILE_DEALS_TOTAL_SUCCESSFUL      QueryIndexRequestSortField = 0
	QueryIndexRequestSortField_TEXTILE_DEALS_LAST_SUCCESSFUL       QueryIndexRequestSortField = 1
	QueryIndexRequestSortField_TEXTILE_RETRIEVALS_TOTAL_SUCCESSFUL QueryIndexRequestSortField = 2
	QueryIndexRequestSortField_TEXTILE_RETRIEVALS_LAST_SUCCESSFUL  QueryIndexRequestSortField = 3
	QueryIndexRequestSortField_ASK_PRICE                           QueryIndexRequestSortField = 4
	QueryIndexRequestSortField_VERIFIED_ASK_PRICE                  QueryIndexRequestSortField = 5
	QueryIndexRequestSortField_ACTIVE_SECTORS                      QueryIndexRequestSortField = 6
)

// Enum value maps for QueryIndexRequestSortField.
var (
	QueryIndexRequestSortField_name = map[int32]string{
		0: "TEXTILE_DEALS_TOTAL_SUCCESSFUL",
		1: "TEXTILE_DEALS_LAST_SUCCESSFUL",
		2: "TEXTILE_RETRIEVALS_TOTAL_SUCCESSFUL",
		3: "TEXTILE_RETRIEVALS_LAST_SUCCESSFUL",
		4: "ASK_PRICE",
		5: "VERIFIED_ASK_PRICE",
		6: "ACTIVE_SECTORS",
	}
	QueryIndexRequestSortField_value = map[string]int32{
		"TEXTILE_DEALS_TOTAL_SUCCESSFUL":      0,
		"TEXTILE_DEALS_LAST_SUCCESSFUL":       1,
		"TEXTILE_RETRIEVALS_TOTAL_SUCCESSFUL": 2,
		"TEXTILE_RETRIEVALS_LAST_SUCCESSFUL":  3,
		"ASK_PRICE":                           4,
		"VERIFIED_ASK_PRICE":                  5,
		"ACTIVE_SECTORS":                      6,
	}
)

func (x QueryIndexRequestSortField) Enum() *QueryIndexRequestSortField {
	p := new(QueryIndexRequestSortField)
	*p = x
	return p
}

func (x QueryIndexRequestSortField) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (QueryIndexRequestSortField) Descriptor() protoreflect.EnumDescriptor {
	return file_api_mindexd_pb_mindexd_proto_enumTypes[0].Descriptor()
}

func (QueryIndexRequestSortField) Type() protoreflect.EnumType {
	return &file_api_mindexd_pb_mindexd_proto_enumTypes[0]
}

func (x QueryIndexRequestSortField) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use QueryIndexRequestSortField.Descriptor instead.
func (QueryIndexRequestSortField) EnumDescriptor() ([]byte, []int) {
	return file_api_mindexd_pb_mindexd_proto_rawDescGZIP(), []int{0}
}

// Domain
type MinerIndexInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinerAddr string               `protobuf:"bytes,1,opt,name=miner_addr,json=minerAddr,proto3" json:"miner_addr,omitempty"`
	Metadata  *MetadataInfo        `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Filecoin  *FilecoinInfo        `protobuf:"bytes,3,opt,name=filecoin,proto3" json:"filecoin,omitempty"`
	Textile   *TextileInfo         `protobuf:"bytes,4,opt,name=textile,proto3" json:"textile,omitempty"`
	UpdatedAt *timestamp.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *MinerIndexInfo) Reset() {
	*x = MinerIndexInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MinerIndexInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MinerIndexInfo) ProtoMessage() {}

func (x *MinerIndexInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MinerIndexInfo.ProtoReflect.Descriptor instead.
func (*MinerIndexInfo) Descriptor() ([]byte, []int) {
	return file_api_mindexd_pb_mindexd_proto_rawDescGZIP(), []int{0}
}

func (x *MinerIndexInfo) GetMinerAddr() string {
	if x != nil {
		return x.MinerAddr
	}
	return ""
}

func (x *MinerIndexInfo) GetMetadata() *MetadataInfo {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *MinerIndexInfo) GetFilecoin() *FilecoinInfo {
	if x != nil {
		return x.Filecoin
	}
	return nil
}

func (x *MinerIndexInfo) GetTextile() *TextileInfo {
	if x != nil {
		return x.Textile
	}
	return nil
}

func (x *MinerIndexInfo) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type MetadataInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location string `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *MetadataInfo) Reset() {
	*x = MetadataInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataInfo) ProtoMessage() {}

func (x *MetadataInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataInfo.ProtoReflect.Descriptor instead.
func (*MetadataInfo) Descriptor() ([]byte, []int) {
	return file_api_mindexd_pb_mindexd_proto_rawDescGZIP(), []int{1}
}

func (x *MetadataInfo) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type FilecoinInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RelativePower    float64              `protobuf:"fixed64,1,opt,name=relative_power,json=relativePower,proto3" json:"relative_power,omitempty"`
	AskPrice         string               `protobuf:"bytes,2,opt,name=ask_price,json=askPrice,proto3" json:"ask_price,omitempty"`
	AskVerifiedPrice string               `protobuf:"bytes,3,opt,name=ask_verified_price,json=askVerifiedPrice,proto3" json:"ask_verified_price,omitempty"`
	MinPieceSize     int64                `protobuf:"varint,4,opt,name=min_piece_size,json=minPieceSize,proto3" json:"min_piece_size,omitempty"`
	MaxPieceSize     int64                `protobuf:"varint,5,opt,name=max_piece_size,json=maxPieceSize,proto3" json:"max_piece_size,omitempty"`
	SectorSize       int64                `protobuf:"varint,6,opt,name=sector_size,json=sectorSize,proto3" json:"sector_size,omitempty"`
	ActiveSectors    int64                `protobuf:"varint,7,opt,name=active_sectors,json=activeSectors,proto3" json:"active_sectors,omitempty"`
	FaultySectors    int64                `protobuf:"varint,8,opt,name=faulty_sectors,json=faultySectors,proto3" json:"faulty_sectors,omitempty"`
	UpdatedAt        *timestamp.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *FilecoinInfo) Reset() {
	*x = FilecoinInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilecoinInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilecoinInfo) ProtoMessage() {}

func (x *FilecoinInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilecoinInfo.ProtoReflect.Descriptor instead.
func (*FilecoinInfo) Descriptor() ([]byte, []int) {
	return file_api_mindexd_pb_mindexd_proto_rawDescGZIP(), []int{2}
}

func (x *FilecoinInfo) GetRelativePower() float64 {
	if x != nil {
		return x.RelativePower
	}
	return 0
}

func (x *FilecoinInfo) GetAskPrice() string {
	if x != nil {
		return x.AskPrice
	}
	return ""
}

func (x *FilecoinInfo) GetAskVerifiedPrice() string {
	if x != nil {
		return x.AskVerifiedPrice
	}
	return ""
}

func (x *FilecoinInfo) GetMinPieceSize() int64 {
	if x != nil {
		return x.MinPieceSize
	}
	return 0
}

func (x *FilecoinInfo) GetMaxPieceSize() int64 {
	if x != nil {
		return x.MaxPieceSize
	}
	return 0
}

func (x *FilecoinInfo) GetSectorSize() int64 {
	if x != nil {
		return x.SectorSize
	}
	return 0
}

func (x *FilecoinInfo) GetActiveSectors() int64 {
	if x != nil {
		return x.ActiveSectors
	}
	return 0
}

func (x *FilecoinInfo) GetFaultySectors() int64 {
	if x != nil {
		return x.FaultySectors
	}
	return 0
}

func (x *FilecoinInfo) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type TextileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Regions           map[string]*TextileRegionInfo `protobuf:"bytes,1,rep,name=regions,proto3" json:"regions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	DealsSummary      *DealsSummary                 `protobuf:"bytes,2,opt,name=deals_summary,json=dealsSummary,proto3" json:"deals_summary,omitempty"`
	RetrievalsSummary *RetrievalsSummary            `protobuf:"bytes,3,opt,name=retrievals_summary,json=retrievalsSummary,proto3" json:"retrievals_summary,omitempty"`
	UpdatedAt         *timestamp.Timestamp          `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *TextileInfo) Reset() {
	*x = TextileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextileInfo) ProtoMessage() {}

func (x *TextileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextileInfo.ProtoReflect.Descriptor instead.
func (*TextileInfo) Descriptor() ([]byte, []int) {
	return file_api_mindexd_pb_mindexd_proto_rawDescGZIP(), []int{3}
}

func (x *TextileInfo) GetRegions() map[string]*TextileRegionInfo {
	if x != nil {
		return x.Regions
	}
	return nil
}

func (x *TextileInfo) GetDealsSummary() *DealsSummary {
	if x != nil {
		return x.DealsSummary
	}
	return nil
}

func (x *TextileInfo) GetRetrievalsSummary() *RetrievalsSummary {
	if x != nil {
		return x.RetrievalsSummary
	}
	return nil
}

func (x *TextileInfo) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type TextileRegionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Deals      *TextileDealsInfo      `protobuf:"bytes,1,opt,name=deals,proto3" json:"deals,omitempty"`
	Retrievals *TextileRetrievalsInfo `protobuf:"bytes,2,opt,name=retrievals,proto3" json:"retrievals,omitempty"`
}

func (x *TextileRegionInfo) Reset() {
	*x = TextileRegionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextileRegionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextileRegionInfo) ProtoMessage() {}

func (x *TextileRegionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextileRegionInfo.ProtoReflect.Descriptor instead.
func (*TextileRegionInfo) Descriptor() ([]byte, []int) {
	return file_api_mindexd_pb_mindexd_proto_rawDescGZIP(), []int{4}
}

func (x *TextileRegionInfo) GetDeals() *TextileDealsInfo {
	if x != nil {
		return x.Deals
	}
	return nil
}

func (x *TextileRegionInfo) GetRetrievals() *TextileRetrievalsInfo {
	if x != nil {
		return x.Retrievals
	}
	return nil
}

type DealsSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total       int64                `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Last        *timestamp.Timestamp `protobuf:"bytes,2,opt,name=last,proto3" json:"last,omitempty"`
	Failures    int64                `protobuf:"varint,3,opt,name=failures,proto3" json:"failures,omitempty"`
	LastFailure *timestamp.Timestamp `protobuf:"bytes,4,opt,name=last_failure,json=lastFailure,proto3" json:"last_failure,omitempty"`
}

func (x *DealsSummary) Reset() {
	*x = DealsSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DealsSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DealsSummary) ProtoMessage() {}

func (x *DealsSummary) ProtoReflect() protoreflect.Message {
	mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DealsSummary.ProtoReflect.Descriptor instead.
func (*DealsSummary) Descriptor() ([]byte, []int) {
	return file_api_mindexd_pb_mindexd_proto_rawDescGZIP(), []int{5}
}

func (x *DealsSummary) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DealsSummary) GetLast() *timestamp.Timestamp {
	if x != nil {
		return x.Last
	}
	return nil
}

func (x *DealsSummary) GetFailures() int64 {
	if x != nil {
		return x.Failures
	}
	return 0
}

func (x *DealsSummary) GetLastFailure() *timestamp.Timestamp {
	if x != nil {
		return x.LastFailure
	}
	return nil
}

type RetrievalsSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total       int64                `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Last        *timestamp.Timestamp `protobuf:"bytes,2,opt,name=last,proto3" json:"last,omitempty"`
	Failures    int64                `protobuf:"varint,3,opt,name=failures,proto3" json:"failures,omitempty"`
	LastFailure *timestamp.Timestamp `protobuf:"bytes,4,opt,name=last_failure,json=lastFailure,proto3" json:"last_failure,omitempty"`
}

func (x *RetrievalsSummary) Reset() {
	*x = RetrievalsSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrievalsSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrievalsSummary) ProtoMessage() {}

func (x *RetrievalsSummary) ProtoReflect() protoreflect.Message {
	mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrievalsSummary.ProtoReflect.Descriptor instead.
func (*RetrievalsSummary) Descriptor() ([]byte, []int) {
	return file_api_mindexd_pb_mindexd_proto_rawDescGZIP(), []int{6}
}

func (x *RetrievalsSummary) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *RetrievalsSummary) GetLast() *timestamp.Timestamp {
	if x != nil {
		return x.Last
	}
	return nil
}

func (x *RetrievalsSummary) GetFailures() int64 {
	if x != nil {
		return x.Failures
	}
	return 0
}

func (x *RetrievalsSummary) GetLastFailure() *timestamp.Timestamp {
	if x != nil {
		return x.LastFailure
	}
	return nil
}

type TextileDealsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total         int64                 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Last          *timestamp.Timestamp  `protobuf:"bytes,2,opt,name=last,proto3" json:"last,omitempty"`
	Failures      int64                 `protobuf:"varint,3,opt,name=failures,proto3" json:"failures,omitempty"`
	LastFailure   *timestamp.Timestamp  `protobuf:"bytes,4,opt,name=last_failure,json=lastFailure,proto3" json:"last_failure,omitempty"`
	TailTransfers []*TransferMiBPerSec  `protobuf:"bytes,5,rep,name=tail_transfers,json=tailTransfers,proto3" json:"tail_transfers,omitempty"`
	TailSealed    []*SealedDurationMins `protobuf:"bytes,6,rep,name=tail_sealed,json=tailSealed,proto3" json:"tail_sealed,omitempty"`
}

func (x *TextileDealsInfo) Reset() {
	*x = TextileDealsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextileDealsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextileDealsInfo) ProtoMessage() {}

func (x *TextileDealsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextileDealsInfo.ProtoReflect.Descriptor instead.
func (*TextileDealsInfo) Descriptor() ([]byte, []int) {
	return file_api_mindexd_pb_mindexd_proto_rawDescGZIP(), []int{7}
}

func (x *TextileDealsInfo) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *TextileDealsInfo) GetLast() *timestamp.Timestamp {
	if x != nil {
		return x.Last
	}
	return nil
}

func (x *TextileDealsInfo) GetFailures() int64 {
	if x != nil {
		return x.Failures
	}
	return 0
}

func (x *TextileDealsInfo) GetLastFailure() *timestamp.Timestamp {
	if x != nil {
		return x.LastFailure
	}
	return nil
}

func (x *TextileDealsInfo) GetTailTransfers() []*TransferMiBPerSec {
	if x != nil {
		return x.TailTransfers
	}
	return nil
}

func (x *TextileDealsInfo) GetTailSealed() []*SealedDurationMins {
	if x != nil {
		return x.TailSealed
	}
	return nil
}

type TextileRetrievalsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total         int64                `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Last          *timestamp.Timestamp `protobuf:"bytes,2,opt,name=last,proto3" json:"last,omitempty"`
	Failures      int64                `protobuf:"varint,3,opt,name=failures,proto3" json:"failures,omitempty"`
	LastFailure   *timestamp.Timestamp `protobuf:"bytes,4,opt,name=last_failure,json=lastFailure,proto3" json:"last_failure,omitempty"`
	TailTransfers []*TransferMiBPerSec `protobuf:"bytes,5,rep,name=tail_transfers,json=tailTransfers,proto3" json:"tail_transfers,omitempty"`
}

func (x *TextileRetrievalsInfo) Reset() {
	*x = TextileRetrievalsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextileRetrievalsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextileRetrievalsInfo) ProtoMessage() {}

func (x *TextileRetrievalsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextileRetrievalsInfo.ProtoReflect.Descriptor instead.
func (*TextileRetrievalsInfo) Descriptor() ([]byte, []int) {
	return file_api_mindexd_pb_mindexd_proto_rawDescGZIP(), []int{8}
}

func (x *TextileRetrievalsInfo) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *TextileRetrievalsInfo) GetLast() *timestamp.Timestamp {
	if x != nil {
		return x.Last
	}
	return nil
}

func (x *TextileRetrievalsInfo) GetFailures() int64 {
	if x != nil {
		return x.Failures
	}
	return 0
}

func (x *TextileRetrievalsInfo) GetLastFailure() *timestamp.Timestamp {
	if x != nil {
		return x.LastFailure
	}
	return nil
}

func (x *TextileRetrievalsInfo) GetTailTransfers() []*TransferMiBPerSec {
	if x != nil {
		return x.TailTransfers
	}
	return nil
}

type TransferMiBPerSec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransferedAt *timestamp.Timestamp `protobuf:"bytes,1,opt,name=transfered_at,json=transferedAt,proto3" json:"transfered_at,omitempty"`
	MibPerSec    float64              `protobuf:"fixed64,2,opt,name=mib_per_sec,json=mibPerSec,proto3" json:"mib_per_sec,omitempty"`
}

func (x *TransferMiBPerSec) Reset() {
	*x = TransferMiBPerSec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferMiBPerSec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferMiBPerSec) ProtoMessage() {}

func (x *TransferMiBPerSec) ProtoReflect() protoreflect.Message {
	mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferMiBPerSec.ProtoReflect.Descriptor instead.
func (*TransferMiBPerSec) Descriptor() ([]byte, []int) {
	return file_api_mindexd_pb_mindexd_proto_rawDescGZIP(), []int{9}
}

func (x *TransferMiBPerSec) GetTransferedAt() *timestamp.Timestamp {
	if x != nil {
		return x.TransferedAt
	}
	return nil
}

func (x *TransferMiBPerSec) GetMibPerSec() float64 {
	if x != nil {
		return x.MibPerSec
	}
	return 0
}

type SealedDurationMins struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SealedAt        *timestamp.Timestamp `protobuf:"bytes,1,opt,name=sealed_at,json=sealedAt,proto3" json:"sealed_at,omitempty"`
	DurationSeconds int64                `protobuf:"varint,2,opt,name=duration_seconds,json=durationSeconds,proto3" json:"duration_seconds,omitempty"`
}

func (x *SealedDurationMins) Reset() {
	*x = SealedDurationMins{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SealedDurationMins) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SealedDurationMins) ProtoMessage() {}

func (x *SealedDurationMins) ProtoReflect() protoreflect.Message {
	mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SealedDurationMins.ProtoReflect.Descriptor instead.
func (*SealedDurationMins) Descriptor() ([]byte, []int) {
	return file_api_mindexd_pb_mindexd_proto_rawDescGZIP(), []int{10}
}

func (x *SealedDurationMins) GetSealedAt() *timestamp.Timestamp {
	if x != nil {
		return x.SealedAt
	}
	return nil
}

func (x *SealedDurationMins) GetDurationSeconds() int64 {
	if x != nil {
		return x.DurationSeconds
	}
	return 0
}

type GetMinersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinerAddress string `protobuf:"bytes,1,opt,name=miner_address,json=minerAddress,proto3" json:"miner_address,omitempty"`
}

func (x *GetMinersResponse) Reset() {
	*x = GetMinersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMinersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMinersResponse) ProtoMessage() {}

func (x *GetMinersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMinersResponse.ProtoReflect.Descriptor instead.
func (*GetMinersResponse) Descriptor() ([]byte, []int) {
	return file_api_mindexd_pb_mindexd_proto_rawDescGZIP(), []int{11}
}

func (x *GetMinersResponse) GetMinerAddress() string {
	if x != nil {
		return x.MinerAddress
	}
	return ""
}

// rpc QueryIndexDashboard
type QueryIndexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filters *QueryIndexRequestFilters `protobuf:"bytes,1,opt,name=filters,proto3" json:"filters,omitempty"`
	Sort    *QueryIndexRequestSort    `protobuf:"bytes,2,opt,name=sort,proto3" json:"sort,omitempty"`
	Limit   int32                     `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset  int64                     `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`
}

func (x *QueryIndexRequest) Reset() {
	*x = QueryIndexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryIndexRequest) ProtoMessage() {}

func (x *QueryIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryIndexRequest.ProtoReflect.Descriptor instead.
func (*QueryIndexRequest) Descriptor() ([]byte, []int) {
	return file_api_mindexd_pb_mindexd_proto_rawDescGZIP(), []int{12}
}

func (x *QueryIndexRequest) GetFilters() *QueryIndexRequestFilters {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *QueryIndexRequest) GetSort() *QueryIndexRequestSort {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *QueryIndexRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *QueryIndexRequest) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type QueryIndexRequestFilters struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinerLocation string `protobuf:"bytes,1,opt,name=miner_location,json=minerLocation,proto3" json:"miner_location,omitempty"`
}

func (x *QueryIndexRequestFilters) Reset() {
	*x = QueryIndexRequestFilters{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryIndexRequestFilters) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryIndexRequestFilters) ProtoMessage() {}

func (x *QueryIndexRequestFilters) ProtoReflect() protoreflect.Message {
	mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryIndexRequestFilters.ProtoReflect.Descriptor instead.
func (*QueryIndexRequestFilters) Descriptor() ([]byte, []int) {
	return file_api_mindexd_pb_mindexd_proto_rawDescGZIP(), []int{13}
}

func (x *QueryIndexRequestFilters) GetMinerLocation() string {
	if x != nil {
		return x.MinerLocation
	}
	return ""
}

type QueryIndexRequestSort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ascending     bool                       `protobuf:"varint,1,opt,name=ascending,proto3" json:"ascending,omitempty"`
	TextileRegion string                     `protobuf:"bytes,2,opt,name=textile_region,json=textileRegion,proto3" json:"textile_region,omitempty"`
	Field         QueryIndexRequestSortField `protobuf:"varint,3,opt,name=field,proto3,enum=api.mindexd.pb.QueryIndexRequestSortField" json:"field,omitempty"`
}

func (x *QueryIndexRequestSort) Reset() {
	*x = QueryIndexRequestSort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryIndexRequestSort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryIndexRequestSort) ProtoMessage() {}

func (x *QueryIndexRequestSort) ProtoReflect() protoreflect.Message {
	mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryIndexRequestSort.ProtoReflect.Descriptor instead.
func (*QueryIndexRequestSort) Descriptor() ([]byte, []int) {
	return file_api_mindexd_pb_mindexd_proto_rawDescGZIP(), []int{14}
}

func (x *QueryIndexRequestSort) GetAscending() bool {
	if x != nil {
		return x.Ascending
	}
	return false
}

func (x *QueryIndexRequestSort) GetTextileRegion() string {
	if x != nil {
		return x.TextileRegion
	}
	return ""
}

func (x *QueryIndexRequestSort) GetField() QueryIndexRequestSortField {
	if x != nil {
		return x.Field
	}
	return QueryIndexRequestSortField_TEXTILE_DEALS_TOTAL_SUCCESSFUL
}

type QueryIndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Miners []*QueryIndexResponseMiner `protobuf:"bytes,1,rep,name=miners,proto3" json:"miners,omitempty"`
}

func (x *QueryIndexResponse) Reset() {
	*x = QueryIndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryIndexResponse) ProtoMessage() {}

func (x *QueryIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryIndexResponse.ProtoReflect.Descriptor instead.
func (*QueryIndexResponse) Descriptor() ([]byte, []int) {
	return file_api_mindexd_pb_mindexd_proto_rawDescGZIP(), []int{15}
}

func (x *QueryIndexResponse) GetMiners() []*QueryIndexResponseMiner {
	if x != nil {
		return x.Miners
	}
	return nil
}

type QueryIndexResponseMiner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Miner *MinerIndexInfo `protobuf:"bytes,1,opt,name=miner,proto3" json:"miner,omitempty"`
}

func (x *QueryIndexResponseMiner) Reset() {
	*x = QueryIndexResponseMiner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryIndexResponseMiner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryIndexResponseMiner) ProtoMessage() {}

func (x *QueryIndexResponseMiner) ProtoReflect() protoreflect.Message {
	mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryIndexResponseMiner.ProtoReflect.Descriptor instead.
func (*QueryIndexResponseMiner) Descriptor() ([]byte, []int) {
	return file_api_mindexd_pb_mindexd_proto_rawDescGZIP(), []int{16}
}

func (x *QueryIndexResponseMiner) GetMiner() *MinerIndexInfo {
	if x != nil {
		return x.Miner
	}
	return nil
}

// rpc GetMinerInfo
type GetMinerInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinerAddress string `protobuf:"bytes,1,opt,name=miner_address,json=minerAddress,proto3" json:"miner_address,omitempty"`
}

func (x *GetMinerInfoRequest) Reset() {
	*x = GetMinerInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMinerInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMinerInfoRequest) ProtoMessage() {}

func (x *GetMinerInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMinerInfoRequest.ProtoReflect.Descriptor instead.
func (*GetMinerInfoRequest) Descriptor() ([]byte, []int) {
	return file_api_mindexd_pb_mindexd_proto_rawDescGZIP(), []int{17}
}

func (x *GetMinerInfoRequest) GetMinerAddress() string {
	if x != nil {
		return x.MinerAddress
	}
	return ""
}

type GetMinerInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info *MinerIndexInfo `protobuf:"bytes,1,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *GetMinerInfoResponse) Reset() {
	*x = GetMinerInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMinerInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMinerInfoResponse) ProtoMessage() {}

func (x *GetMinerInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMinerInfoResponse.ProtoReflect.Descriptor instead.
func (*GetMinerInfoResponse) Descriptor() ([]byte, []int) {
	return file_api_mindexd_pb_mindexd_proto_rawDescGZIP(), []int{18}
}

func (x *GetMinerInfoResponse) GetInfo() *MinerIndexInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

// rpc CalculateDealPrice
type CalculateDealPriceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinerAddresses []string `protobuf:"bytes,1,rep,name=miner_addresses,json=minerAddresses,proto3" json:"miner_addresses,omitempty"`
	DataSizeBytes  int64    `protobuf:"varint,2,opt,name=data_size_bytes,json=dataSizeBytes,proto3" json:"data_size_bytes,omitempty"`
	DurationDays   int64    `protobuf:"varint,3,opt,name=duration_days,json=durationDays,proto3" json:"duration_days,omitempty"`
}

func (x *CalculateDealPriceRequest) Reset() {
	*x = CalculateDealPriceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculateDealPriceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateDealPriceRequest) ProtoMessage() {}

func (x *CalculateDealPriceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateDealPriceRequest.ProtoReflect.Descriptor instead.
func (*CalculateDealPriceRequest) Descriptor() ([]byte, []int) {
	return file_api_mindexd_pb_mindexd_proto_rawDescGZIP(), []int{19}
}

func (x *CalculateDealPriceRequest) GetMinerAddresses() []string {
	if x != nil {
		return x.MinerAddresses
	}
	return nil
}

func (x *CalculateDealPriceRequest) GetDataSizeBytes() int64 {
	if x != nil {
		return x.DataSizeBytes
	}
	return 0
}

func (x *CalculateDealPriceRequest) GetDurationDays() int64 {
	if x != nil {
		return x.DurationDays
	}
	return 0
}

type CalculateDealPriceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results        []*CalculateDealPriceMiner `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	PaddedSize     int64                      `protobuf:"varint,2,opt,name=padded_size,json=paddedSize,proto3" json:"padded_size,omitempty"`
	DurationEpochs int64                      `protobuf:"varint,3,opt,name=duration_epochs,json=durationEpochs,proto3" json:"duration_epochs,omitempty"`
}

func (x *CalculateDealPriceResponse) Reset() {
	*x = CalculateDealPriceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculateDealPriceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateDealPriceResponse) ProtoMessage() {}

func (x *CalculateDealPriceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateDealPriceResponse.ProtoReflect.Descriptor instead.
func (*CalculateDealPriceResponse) Descriptor() ([]byte, []int) {
	return file_api_mindexd_pb_mindexd_proto_rawDescGZIP(), []int{20}
}

func (x *CalculateDealPriceResponse) GetResults() []*CalculateDealPriceMiner {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *CalculateDealPriceResponse) GetPaddedSize() int64 {
	if x != nil {
		return x.PaddedSize
	}
	return 0
}

func (x *CalculateDealPriceResponse) GetDurationEpochs() int64 {
	if x != nil {
		return x.DurationEpochs
	}
	return 0
}

type CalculateDealPriceMiner struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Miner             string `protobuf:"bytes,1,opt,name=miner,proto3" json:"miner,omitempty"`
	TotalCost         string `protobuf:"bytes,2,opt,name=total_cost,json=totalCost,proto3" json:"total_cost,omitempty"`
	VerifiedTotalCost string `protobuf:"bytes,3,opt,name=verified_total_cost,json=verifiedTotalCost,proto3" json:"verified_total_cost,omitempty"`
	Price             string `protobuf:"bytes,4,opt,name=price,proto3" json:"price,omitempty"`
	VerifiedPrice     string `protobuf:"bytes,5,opt,name=verified_price,json=verifiedPrice,proto3" json:"verified_price,omitempty"`
}

func (x *CalculateDealPriceMiner) Reset() {
	*x = CalculateDealPriceMiner{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculateDealPriceMiner) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateDealPriceMiner) ProtoMessage() {}

func (x *CalculateDealPriceMiner) ProtoReflect() protoreflect.Message {
	mi := &file_api_mindexd_pb_mindexd_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateDealPriceMiner.ProtoReflect.Descriptor instead.
func (*CalculateDealPriceMiner) Descriptor() ([]byte, []int) {
	return file_api_mindexd_pb_mindexd_proto_rawDescGZIP(), []int{21}
}

func (x *CalculateDealPriceMiner) GetMiner() string {
	if x != nil {
		return x.Miner
	}
	return ""
}

func (x *CalculateDealPriceMiner) GetTotalCost() string {
	if x != nil {
		return x.TotalCost
	}
	return ""
}

func (x *CalculateDealPriceMiner) GetVerifiedTotalCost() string {
	if x != nil {
		return x.VerifiedTotalCost
	}
	return ""
}

func (x *CalculateDealPriceMiner) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *CalculateDealPriceMiner) GetVerifiedPrice() string {
	if x != nil {
		return x.VerifiedPrice
	}
	return ""
}

var File_api_mindexd_pb_mindexd_proto protoreflect.FileDescriptor

var file_api_mindexd_pb_mindexd_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x64, 0x2f, 0x70, 0x62,
	0x2f, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e,
	0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x64, 0x2e, 0x70, 0x62, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x2b, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x64, 0x2f, 0x70, 0x62, 0x2f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x3d, 0x61, 0x70,
	0x69, 0x2f, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x64, 0x2f, 0x70, 0x62, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76,
	0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x95, 0x02, 0x0a, 0x0e,
	0x4d, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d,
	0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x38, 0x0a,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x64, 0x2e, 0x70, 0x62,
	0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x38, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x63,
	0x6f, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x63,
	0x6f, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x63, 0x6f, 0x69,
	0x6e, 0x12, 0x35, 0x0a, 0x07, 0x74, 0x65, 0x78, 0x74, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x64,
	0x2e, 0x70, 0x62, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x07, 0x74, 0x65, 0x78, 0x74, 0x69, 0x6c, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0x2a, 0x0a, 0x0c, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0xf6, 0x02, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x65, 0x63, 0x6f, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x70, 0x6f, 0x77,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
	0x76, 0x65, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x73, 0x6b, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x73, 0x6b, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x61, 0x73, 0x6b, 0x5f, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x61, 0x73, 0x6b, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x69, 0x65, 0x63, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x50,
	0x69, 0x65, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x61, 0x78, 0x5f,
	0x70, 0x69, 0x65, 0x63, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x6d, 0x61, 0x78, 0x50, 0x69, 0x65, 0x63, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x79,
	0x5f, 0x73, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x79, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x39, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x80, 0x03, 0x0a, 0x0b, 0x54, 0x65, 0x78,
	0x74, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x42, 0x0a, 0x07, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x69,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x07, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x41, 0x0a, 0x0d,
	0x64, 0x65, 0x61, 0x6c, 0x73, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x64, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x61, 0x6c, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x52, 0x0c, 0x64, 0x65, 0x61, 0x6c, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12,
	0x50, 0x0a, 0x12, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x73, 0x5f, 0x73, 0x75,
	0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x74,
	0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x11,
	0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x1a, 0x5d, 0x0a, 0x0c,
	0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x37,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x54,
	0x65, 0x78, 0x74, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x92, 0x01, 0x0a, 0x11,
	0x54, 0x65, 0x78, 0x74, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x36, 0x0a, 0x05, 0x64, 0x65, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x64, 0x2e, 0x70,
	0x62, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x61, 0x6c, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x05, 0x64, 0x65, 0x61, 0x6c, 0x73, 0x12, 0x45, 0x0a, 0x0a, 0x72, 0x65, 0x74,
	0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x54,
	0x65, 0x78, 0x74, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x73,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c, 0x73,
	0x22, 0xaf, 0x01, 0x0a, 0x0c, 0x44, 0x65, 0x61, 0x6c, 0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2e, 0x0a, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x69, 0x6c, 0x75,
	0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x61, 0x69, 0x6c, 0x75,
	0x72, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x66, 0x61, 0x69, 0x6c,
	0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x75,
	0x72, 0x65, 0x22, 0xb4, 0x01, 0x0a, 0x11, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c,
	0x73, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2e,
	0x0a, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x0c, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x6c, 0x61,
	0x73, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x22, 0xc2, 0x02, 0x0a, 0x10, 0x54, 0x65,
	0x78, 0x74, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x61, 0x6c, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2e, 0x0a, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04,
	0x6c, 0x61, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x73,
	0x12, 0x3d, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0b, 0x6c, 0x61, 0x73, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12,
	0x48, 0x0a, 0x0e, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x4d, 0x69, 0x42, 0x50, 0x65, 0x72, 0x53, 0x65, 0x63, 0x52, 0x0d, 0x74, 0x61, 0x69, 0x6c,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x12, 0x43, 0x0a, 0x0b, 0x74, 0x61, 0x69,
	0x6c, 0x5f, 0x73, 0x65, 0x61, 0x6c, 0x65, 0x64, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x64, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x65, 0x61, 0x6c, 0x65, 0x64, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69,
	0x6e, 0x73, 0x52, 0x0a, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x61, 0x6c, 0x65, 0x64, 0x22, 0x82,
	0x02, 0x0a, 0x15, 0x54, 0x65, 0x78, 0x74, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x76, 0x61, 0x6c, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2e,
	0x0a, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x73, 0x12, 0x3d, 0x0a, 0x0c, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x6c, 0x61,
	0x73, 0x74, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x48, 0x0a, 0x0e, 0x74, 0x61, 0x69,
	0x6c, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x64, 0x2e,
	0x70, 0x62, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4d, 0x69, 0x42, 0x50, 0x65,
	0x72, 0x53, 0x65, 0x63, 0x52, 0x0d, 0x74, 0x61, 0x69, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x73, 0x22, 0x74, 0x0a, 0x11, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x4d,
	0x69, 0x42, 0x50, 0x65, 0x72, 0x53, 0x65, 0x63, 0x12, 0x3f, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x6d, 0x69, 0x62,
	0x5f, 0x70, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09,
	0x6d, 0x69, 0x62, 0x50, 0x65, 0x72, 0x53, 0x65, 0x63, 0x22, 0x78, 0x0a, 0x12, 0x53, 0x65, 0x61,
	0x6c, 0x65, 0x64, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x69, 0x6e, 0x73, 0x12,
	0x37, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x6c, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08,
	0x73, 0x65, 0x61, 0x6c, 0x65, 0x64, 0x41, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x73, 0x22, 0x38, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x69, 0x6e, 0x65,
	0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xc0, 0x01,
	0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x52, 0x07,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x39, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73,
	0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74,
	0x22, 0x41, 0x0a, 0x18, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x25, 0x0a, 0x0e,
	0x6d, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x9e, 0x01, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x61, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x61, 0x73, 0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x25, 0x0a, 0x0e, 0x74,
	0x65, 0x78, 0x74, 0x69, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x65, 0x78, 0x74, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x05, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x64, 0x2e,
	0x70, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x05, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x22, 0x55, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x06, 0x6d, 0x69,
	0x6e, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x69,
	0x6e, 0x65, 0x72, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x22, 0x4f, 0x0a, 0x17, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x05, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x22, 0x72, 0x0a, 0x13,
	0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x5b, 0x0a, 0x0d, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x36, 0x92, 0x41, 0x33, 0x32,
	0x31, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x20, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x20, 0x66,
	0x72, 0x6f, 0x6d, 0x20, 0x77, 0x68, 0x69, 0x63, 0x68, 0x20, 0x74, 0x6f, 0x20, 0x67, 0x65, 0x74,
	0x20, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x20, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x22, 0x4a, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x9d, 0x02, 0x0a,
	0x19, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x65, 0x61, 0x6c, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5d, 0x0a, 0x0f, 0x6d, 0x69,
	0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x42, 0x34, 0x92, 0x41, 0x31, 0x32, 0x2f, 0x4c, 0x69, 0x73, 0x74, 0x20, 0x6f,
	0x66, 0x20, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x20, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x20, 0x74, 0x6f, 0x20, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x20, 0x64,
	0x65, 0x61, 0x6c, 0x20, 0x63, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x0e, 0x6d, 0x69, 0x6e, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x54, 0x0a, 0x0f, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x2c, 0x92, 0x41, 0x29, 0x32, 0x27, 0x44, 0x61, 0x74, 0x61, 0x20, 0x73, 0x69,
	0x7a, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x62, 0x79, 0x74, 0x65, 0x73, 0x20, 0x6f, 0x66, 0x20, 0x74,
	0x68, 0x65, 0x20, 0x64, 0x61, 0x74, 0x61, 0x20, 0x74, 0x6f, 0x20, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x53, 0x69, 0x7a, 0x65, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12,
	0x4b, 0x0a, 0x0d, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x79, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x26, 0x92, 0x41, 0x23, 0x32, 0x1c, 0x44, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x69, 0x6e, 0x20, 0x64, 0x61, 0x79, 0x73, 0x20, 0x6f, 0x66,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x64, 0x65, 0x61, 0x6c, 0x3a, 0x03, 0x31, 0x38, 0x30, 0x52, 0x0c,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x79, 0x73, 0x22, 0xa9, 0x01, 0x0a,
	0x1a, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x65, 0x61, 0x6c, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x07, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x65, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x4d, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x61, 0x64, 0x64, 0x65, 0x64, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x61, 0x64, 0x64, 0x65, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x27, 0x0a, 0x0f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x70, 0x6f, 0x63,
	0x68, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x73, 0x22, 0xf6, 0x03, 0x0a, 0x17, 0x43, 0x61, 0x6c,
	0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x65, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4d,
	0x69, 0x6e, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x05, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x28, 0x92, 0x41, 0x25, 0x32, 0x23, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x20,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20,
	0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x52, 0x05, 0x6d,
	0x69, 0x6e, 0x65, 0x72, 0x12, 0x6d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x4e, 0x92, 0x41, 0x4b, 0x32, 0x49, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x20, 0x63, 0x6f, 0x73, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x64, 0x65, 0x61, 0x6c, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x75, 0x6e,
	0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x20, 0x70, 0x72, 0x69, 0x63, 0x65, 0x20, 0x66,
	0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x64, 0x20,
	0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43,
	0x6f, 0x73, 0x74, 0x12, 0x79, 0x0a, 0x13, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x49, 0x92, 0x41, 0x46, 0x32, 0x44, 0x54, 0x68, 0x65, 0x20, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x2d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x20, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x20, 0x63, 0x6f, 0x73, 0x74, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x65, 0x20, 0x64, 0x65, 0x61,
	0x6c, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65, 0x20, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64,
	0x65, 0x64, 0x20, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x73, 0x74, 0x12, 0x50,
	0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x3a, 0x92,
	0x41, 0x37, 0x32, 0x35, 0x54, 0x68, 0x65, 0x20, 0x70, 0x72, 0x69, 0x63, 0x65, 0x20, 0x69, 0x6e,
	0x20, 0x61, 0x74, 0x74, 0x6f, 0x46, 0x49, 0x4c, 0x2f, 0x47, 0x69, 0x42, 0x2f, 0x65, 0x70, 0x6f,
	0x63, 0x68, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x75, 0x6e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65,
	0x64, 0x20, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x5f, 0x0a, 0x0e, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x38, 0x92, 0x41, 0x35, 0x32, 0x33, 0x54,
	0x68, 0x65, 0x20, 0x70, 0x72, 0x69, 0x63, 0x65, 0x20, 0x69, 0x6e, 0x20, 0x61, 0x74, 0x74, 0x6f,
	0x46, 0x49, 0x4c, 0x2f, 0x47, 0x69, 0x42, 0x2f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x20, 0x66, 0x6f,
	0x72, 0x20, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x20, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x0d, 0x76, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x2a, 0xef, 0x01, 0x0a, 0x1a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x53, 0x6f, 0x72, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64,
	0x12, 0x22, 0x0a, 0x1e, 0x54, 0x45, 0x58, 0x54, 0x49, 0x4c, 0x45, 0x5f, 0x44, 0x45, 0x41, 0x4c,
	0x53, 0x5f, 0x54, 0x4f, 0x54, 0x41, 0x4c, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x46,
	0x55, 0x4c, 0x10, 0x00, 0x12, 0x21, 0x0a, 0x1d, 0x54, 0x45, 0x58, 0x54, 0x49, 0x4c, 0x45, 0x5f,
	0x44, 0x45, 0x41, 0x4c, 0x53, 0x5f, 0x4c, 0x41, 0x53, 0x54, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45,
	0x53, 0x53, 0x46, 0x55, 0x4c, 0x10, 0x01, 0x12, 0x27, 0x0a, 0x23, 0x54, 0x45, 0x58, 0x54, 0x49,
	0x4c, 0x45, 0x5f, 0x52, 0x45, 0x54, 0x52, 0x49, 0x45, 0x56, 0x41, 0x4c, 0x53, 0x5f, 0x54, 0x4f,
	0x54, 0x41, 0x4c, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x46, 0x55, 0x4c, 0x10, 0x02,
	0x12, 0x26, 0x0a, 0x22, 0x54, 0x45, 0x58, 0x54, 0x49, 0x4c, 0x45, 0x5f, 0x52, 0x45, 0x54, 0x52,
	0x49, 0x45, 0x56, 0x41, 0x4c, 0x53, 0x5f, 0x4c, 0x41, 0x53, 0x54, 0x5f, 0x53, 0x55, 0x43, 0x43,
	0x45, 0x53, 0x53, 0x46, 0x55, 0x4c, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x53, 0x4b, 0x5f,
	0x50, 0x52, 0x49, 0x43, 0x45, 0x10, 0x04, 0x12, 0x16, 0x0a, 0x12, 0x56, 0x45, 0x52, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x5f, 0x41, 0x53, 0x4b, 0x5f, 0x50, 0x52, 0x49, 0x43, 0x45, 0x10, 0x05, 0x12,
	0x12, 0x0a, 0x0e, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x53, 0x45, 0x43, 0x54, 0x4f, 0x52,
	0x53, 0x10, 0x06, 0x32, 0x8f, 0x03, 0x0a, 0x0a, 0x41, 0x50, 0x49, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x6c, 0x0a, 0x0a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x64, 0x2e, 0x70,
	0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x64, 0x2e, 0x70, 0x62, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12,
	0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x12, 0x82, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x64, 0x2e,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x21, 0x12, 0x1f, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2f,
	0x6d, 0x69, 0x6e, 0x65, 0x72, 0x2f, 0x7b, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x7d, 0x12, 0x8d, 0x01, 0x0a, 0x12, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c,
	0x61, 0x74, 0x65, 0x44, 0x65, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x29, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6d, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x65, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6d, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61,
	0x74, 0x65, 0x44, 0x65, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x63, 0x61, 0x6c, 0x63,
	0x75, 0x6c, 0x61, 0x74, 0x65, 0x42, 0xf7, 0x01, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x69, 0x6c, 0x65, 0x69, 0x6f, 0x2f, 0x74,
	0x65, 0x78, 0x74, 0x69, 0x6c, 0x65, 0x2f, 0x76, 0x32, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x6d, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x64, 0x2f, 0x70, 0x62, 0x92, 0x41, 0xc3, 0x01, 0x12, 0x98, 0x01, 0x0a,
	0x13, 0x54, 0x65, 0x78, 0x74, 0x69, 0x6c, 0x65, 0x20, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x20, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x22, 0x31, 0x0a, 0x07, 0x54, 0x65, 0x78, 0x74, 0x69, 0x6c, 0x65, 0x12,
	0x12, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x69, 0x6c, 0x65,
	0x2e, 0x69, 0x6f, 0x1a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x40, 0x74, 0x65, 0x78,
	0x74, 0x69, 0x6c, 0x65, 0x2e, 0x69, 0x6f, 0x2a, 0x49, 0x0a, 0x03, 0x4d, 0x49, 0x54, 0x12, 0x42,
	0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x72, 0x61, 0x77, 0x2e, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x75, 0x73, 0x65, 0x72, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x69, 0x6c, 0x65, 0x69, 0x6f, 0x2f, 0x74, 0x65, 0x78, 0x74,
	0x69, 0x6c, 0x65, 0x2f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x4c, 0x49, 0x43, 0x45, 0x4e,
	0x53, 0x45, 0x32, 0x03, 0x31, 0x2e, 0x30, 0x2a, 0x02, 0x02, 0x01, 0x32, 0x10, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_mindexd_pb_mindexd_proto_rawDescOnce sync.Once
	file_api_mindexd_pb_mindexd_proto_rawDescData = file_api_mindexd_pb_mindexd_proto_rawDesc
)

func file_api_mindexd_pb_mindexd_proto_rawDescGZIP() []byte {
	file_api_mindexd_pb_mindexd_proto_rawDescOnce.Do(func() {
		file_api_mindexd_pb_mindexd_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_mindexd_pb_mindexd_proto_rawDescData)
	})
	return file_api_mindexd_pb_mindexd_proto_rawDescData
}

var file_api_mindexd_pb_mindexd_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_mindexd_pb_mindexd_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_api_mindexd_pb_mindexd_proto_goTypes = []interface{}{
	(QueryIndexRequestSortField)(0),    // 0: api.mindexd.pb.QueryIndexRequestSortField
	(*MinerIndexInfo)(nil),             // 1: api.mindexd.pb.MinerIndexInfo
	(*MetadataInfo)(nil),               // 2: api.mindexd.pb.MetadataInfo
	(*FilecoinInfo)(nil),               // 3: api.mindexd.pb.FilecoinInfo
	(*TextileInfo)(nil),                // 4: api.mindexd.pb.TextileInfo
	(*TextileRegionInfo)(nil),          // 5: api.mindexd.pb.TextileRegionInfo
	(*DealsSummary)(nil),               // 6: api.mindexd.pb.DealsSummary
	(*RetrievalsSummary)(nil),          // 7: api.mindexd.pb.RetrievalsSummary
	(*TextileDealsInfo)(nil),           // 8: api.mindexd.pb.TextileDealsInfo
	(*TextileRetrievalsInfo)(nil),      // 9: api.mindexd.pb.TextileRetrievalsInfo
	(*TransferMiBPerSec)(nil),          // 10: api.mindexd.pb.TransferMiBPerSec
	(*SealedDurationMins)(nil),         // 11: api.mindexd.pb.SealedDurationMins
	(*GetMinersResponse)(nil),          // 12: api.mindexd.pb.GetMinersResponse
	(*QueryIndexRequest)(nil),          // 13: api.mindexd.pb.QueryIndexRequest
	(*QueryIndexRequestFilters)(nil),   // 14: api.mindexd.pb.QueryIndexRequestFilters
	(*QueryIndexRequestSort)(nil),      // 15: api.mindexd.pb.QueryIndexRequestSort
	(*QueryIndexResponse)(nil),         // 16: api.mindexd.pb.QueryIndexResponse
	(*QueryIndexResponseMiner)(nil),    // 17: api.mindexd.pb.QueryIndexResponseMiner
	(*GetMinerInfoRequest)(nil),        // 18: api.mindexd.pb.GetMinerInfoRequest
	(*GetMinerInfoResponse)(nil),       // 19: api.mindexd.pb.GetMinerInfoResponse
	(*CalculateDealPriceRequest)(nil),  // 20: api.mindexd.pb.CalculateDealPriceRequest
	(*CalculateDealPriceResponse)(nil), // 21: api.mindexd.pb.CalculateDealPriceResponse
	(*CalculateDealPriceMiner)(nil),    // 22: api.mindexd.pb.CalculateDealPriceMiner
	nil,                                // 23: api.mindexd.pb.TextileInfo.RegionsEntry
	(*timestamp.Timestamp)(nil),        // 24: google.protobuf.Timestamp
}
var file_api_mindexd_pb_mindexd_proto_depIdxs = []int32{
	2,  // 0: api.mindexd.pb.MinerIndexInfo.metadata:type_name -> api.mindexd.pb.MetadataInfo
	3,  // 1: api.mindexd.pb.MinerIndexInfo.filecoin:type_name -> api.mindexd.pb.FilecoinInfo
	4,  // 2: api.mindexd.pb.MinerIndexInfo.textile:type_name -> api.mindexd.pb.TextileInfo
	24, // 3: api.mindexd.pb.MinerIndexInfo.updated_at:type_name -> google.protobuf.Timestamp
	24, // 4: api.mindexd.pb.FilecoinInfo.updated_at:type_name -> google.protobuf.Timestamp
	23, // 5: api.mindexd.pb.TextileInfo.regions:type_name -> api.mindexd.pb.TextileInfo.RegionsEntry
	6,  // 6: api.mindexd.pb.TextileInfo.deals_summary:type_name -> api.mindexd.pb.DealsSummary
	7,  // 7: api.mindexd.pb.TextileInfo.retrievals_summary:type_name -> api.mindexd.pb.RetrievalsSummary
	24, // 8: api.mindexd.pb.TextileInfo.updated_at:type_name -> google.protobuf.Timestamp
	8,  // 9: api.mindexd.pb.TextileRegionInfo.deals:type_name -> api.mindexd.pb.TextileDealsInfo
	9,  // 10: api.mindexd.pb.TextileRegionInfo.retrievals:type_name -> api.mindexd.pb.TextileRetrievalsInfo
	24, // 11: api.mindexd.pb.DealsSummary.last:type_name -> google.protobuf.Timestamp
	24, // 12: api.mindexd.pb.DealsSummary.last_failure:type_name -> google.protobuf.Timestamp
	24, // 13: api.mindexd.pb.RetrievalsSummary.last:type_name -> google.protobuf.Timestamp
	24, // 14: api.mindexd.pb.RetrievalsSummary.last_failure:type_name -> google.protobuf.Timestamp
	24, // 15: api.mindexd.pb.TextileDealsInfo.last:type_name -> google.protobuf.Timestamp
	24, // 16: api.mindexd.pb.TextileDealsInfo.last_failure:type_name -> google.protobuf.Timestamp
	10, // 17: api.mindexd.pb.TextileDealsInfo.tail_transfers:type_name -> api.mindexd.pb.TransferMiBPerSec
	11, // 18: api.mindexd.pb.TextileDealsInfo.tail_sealed:type_name -> api.mindexd.pb.SealedDurationMins
	24, // 19: api.mindexd.pb.TextileRetrievalsInfo.last:type_name -> google.protobuf.Timestamp
	24, // 20: api.mindexd.pb.TextileRetrievalsInfo.last_failure:type_name -> google.protobuf.Timestamp
	10, // 21: api.mindexd.pb.TextileRetrievalsInfo.tail_transfers:type_name -> api.mindexd.pb.TransferMiBPerSec
	24, // 22: api.mindexd.pb.TransferMiBPerSec.transfered_at:type_name -> google.protobuf.Timestamp
	24, // 23: api.mindexd.pb.SealedDurationMins.sealed_at:type_name -> google.protobuf.Timestamp
	14, // 24: api.mindexd.pb.QueryIndexRequest.filters:type_name -> api.mindexd.pb.QueryIndexRequestFilters
	15, // 25: api.mindexd.pb.QueryIndexRequest.sort:type_name -> api.mindexd.pb.QueryIndexRequestSort
	0,  // 26: api.mindexd.pb.QueryIndexRequestSort.field:type_name -> api.mindexd.pb.QueryIndexRequestSortField
	17, // 27: api.mindexd.pb.QueryIndexResponse.miners:type_name -> api.mindexd.pb.QueryIndexResponseMiner
	1,  // 28: api.mindexd.pb.QueryIndexResponseMiner.miner:type_name -> api.mindexd.pb.MinerIndexInfo
	1,  // 29: api.mindexd.pb.GetMinerInfoResponse.info:type_name -> api.mindexd.pb.MinerIndexInfo
	22, // 30: api.mindexd.pb.CalculateDealPriceResponse.results:type_name -> api.mindexd.pb.CalculateDealPriceMiner
	5,  // 31: api.mindexd.pb.TextileInfo.RegionsEntry.value:type_name -> api.mindexd.pb.TextileRegionInfo
	13, // 32: api.mindexd.pb.APIService.QueryIndex:input_type -> api.mindexd.pb.QueryIndexRequest
	18, // 33: api.mindexd.pb.APIService.GetMinerInfo:input_type -> api.mindexd.pb.GetMinerInfoRequest
	20, // 34: api.mindexd.pb.APIService.CalculateDealPrice:input_type -> api.mindexd.pb.CalculateDealPriceRequest
	16, // 35: api.mindexd.pb.APIService.QueryIndex:output_type -> api.mindexd.pb.QueryIndexResponse
	19, // 36: api.mindexd.pb.APIService.GetMinerInfo:output_type -> api.mindexd.pb.GetMinerInfoResponse
	21, // 37: api.mindexd.pb.APIService.CalculateDealPrice:output_type -> api.mindexd.pb.CalculateDealPriceResponse
	35, // [35:38] is the sub-list for method output_type
	32, // [32:35] is the sub-list for method input_type
	32, // [32:32] is the sub-list for extension type_name
	32, // [32:32] is the sub-list for extension extendee
	0,  // [0:32] is the sub-list for field type_name
}

func init() { file_api_mindexd_pb_mindexd_proto_init() }
func file_api_mindexd_pb_mindexd_proto_init() {
	if File_api_mindexd_pb_mindexd_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_mindexd_pb_mindexd_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MinerIndexInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mindexd_pb_mindexd_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mindexd_pb_mindexd_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilecoinInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mindexd_pb_mindexd_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mindexd_pb_mindexd_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextileRegionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mindexd_pb_mindexd_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DealsSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mindexd_pb_mindexd_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrievalsSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mindexd_pb_mindexd_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextileDealsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mindexd_pb_mindexd_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextileRetrievalsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mindexd_pb_mindexd_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferMiBPerSec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mindexd_pb_mindexd_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SealedDurationMins); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mindexd_pb_mindexd_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMinersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mindexd_pb_mindexd_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryIndexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mindexd_pb_mindexd_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryIndexRequestFilters); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mindexd_pb_mindexd_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryIndexRequestSort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mindexd_pb_mindexd_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryIndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mindexd_pb_mindexd_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryIndexResponseMiner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mindexd_pb_mindexd_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMinerInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mindexd_pb_mindexd_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMinerInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mindexd_pb_mindexd_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculateDealPriceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mindexd_pb_mindexd_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculateDealPriceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_mindexd_pb_mindexd_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculateDealPriceMiner); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_mindexd_pb_mindexd_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_mindexd_pb_mindexd_proto_goTypes,
		DependencyIndexes: file_api_mindexd_pb_mindexd_proto_depIdxs,
		EnumInfos:         file_api_mindexd_pb_mindexd_proto_enumTypes,
		MessageInfos:      file_api_mindexd_pb_mindexd_proto_msgTypes,
	}.Build()
	File_api_mindexd_pb_mindexd_proto = out.File
	file_api_mindexd_pb_mindexd_proto_rawDesc = nil
	file_api_mindexd_pb_mindexd_proto_goTypes = nil
	file_api_mindexd_pb_mindexd_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// APIServiceClient is the client API for APIService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type APIServiceClient interface {
	QueryIndex(ctx context.Context, in *QueryIndexRequest, opts ...grpc.CallOption) (*QueryIndexResponse, error)
	GetMinerInfo(ctx context.Context, in *GetMinerInfoRequest, opts ...grpc.CallOption) (*GetMinerInfoResponse, error)
	CalculateDealPrice(ctx context.Context, in *CalculateDealPriceRequest, opts ...grpc.CallOption) (*CalculateDealPriceResponse, error)
}

type aPIServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAPIServiceClient(cc grpc.ClientConnInterface) APIServiceClient {
	return &aPIServiceClient{cc}
}

func (c *aPIServiceClient) QueryIndex(ctx context.Context, in *QueryIndexRequest, opts ...grpc.CallOption) (*QueryIndexResponse, error) {
	out := new(QueryIndexResponse)
	err := c.cc.Invoke(ctx, "/api.mindexd.pb.APIService/QueryIndex", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIServiceClient) GetMinerInfo(ctx context.Context, in *GetMinerInfoRequest, opts ...grpc.CallOption) (*GetMinerInfoResponse, error) {
	out := new(GetMinerInfoResponse)
	err := c.cc.Invoke(ctx, "/api.mindexd.pb.APIService/GetMinerInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIServiceClient) CalculateDealPrice(ctx context.Context, in *CalculateDealPriceRequest, opts ...grpc.CallOption) (*CalculateDealPriceResponse, error) {
	out := new(CalculateDealPriceResponse)
	err := c.cc.Invoke(ctx, "/api.mindexd.pb.APIService/CalculateDealPrice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// APIServiceServer is the server API for APIService service.
type APIServiceServer interface {
	QueryIndex(context.Context, *QueryIndexRequest) (*QueryIndexResponse, error)
	GetMinerInfo(context.Context, *GetMinerInfoRequest) (*GetMinerInfoResponse, error)
	CalculateDealPrice(context.Context, *CalculateDealPriceRequest) (*CalculateDealPriceResponse, error)
}

// UnimplementedAPIServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAPIServiceServer struct {
}

func (*UnimplementedAPIServiceServer) QueryIndex(context.Context, *QueryIndexRequest) (*QueryIndexResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryIndex not implemented")
}
func (*UnimplementedAPIServiceServer) GetMinerInfo(context.Context, *GetMinerInfoRequest) (*GetMinerInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMinerInfo not implemented")
}
func (*UnimplementedAPIServiceServer) CalculateDealPrice(context.Context, *CalculateDealPriceRequest) (*CalculateDealPriceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CalculateDealPrice not implemented")
}

func RegisterAPIServiceServer(s *grpc.Server, srv APIServiceServer) {
	s.RegisterService(&_APIService_serviceDesc, srv)
}

func _APIService_QueryIndex_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryIndexRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServiceServer).QueryIndex(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.mindexd.pb.APIService/QueryIndex",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServiceServer).QueryIndex(ctx, req.(*QueryIndexRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIService_GetMinerInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMinerInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServiceServer).GetMinerInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.mindexd.pb.APIService/GetMinerInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServiceServer).GetMinerInfo(ctx, req.(*GetMinerInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIService_CalculateDealPrice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CalculateDealPriceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServiceServer).CalculateDealPrice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.mindexd.pb.APIService/CalculateDealPrice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServiceServer).CalculateDealPrice(ctx, req.(*CalculateDealPriceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _APIService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.mindexd.pb.APIService",
	HandlerType: (*APIServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "QueryIndex",
			Handler:    _APIService_QueryIndex_Handler,
		},
		{
			MethodName: "GetMinerInfo",
			Handler:    _APIService_GetMinerInfo_Handler,
		},
		{
			MethodName: "CalculateDealPrice",
			Handler:    _APIService_CalculateDealPrice_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/mindexd/pb/mindexd.proto",
}
