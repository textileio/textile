// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: api/sendfild/pb/sendfil.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type MessageState int32

const (
	MessageState_MESSAGE_STATE_UNSPECIFIED MessageState = 0
	MessageState_MESSAGE_STATE_PENDING     MessageState = 1
	MessageState_MESSAGE_STATE_ACTIVE      MessageState = 2
	MessageState_MESSAGE_STATE_FAILED      MessageState = 3
)

// Enum value maps for MessageState.
var (
	MessageState_name = map[int32]string{
		0: "MESSAGE_STATE_UNSPECIFIED",
		1: "MESSAGE_STATE_PENDING",
		2: "MESSAGE_STATE_ACTIVE",
		3: "MESSAGE_STATE_FAILED",
	}
	MessageState_value = map[string]int32{
		"MESSAGE_STATE_UNSPECIFIED": 0,
		"MESSAGE_STATE_PENDING":     1,
		"MESSAGE_STATE_ACTIVE":      2,
		"MESSAGE_STATE_FAILED":      3,
	}
)

func (x MessageState) Enum() *MessageState {
	p := new(MessageState)
	*p = x
	return p
}

func (x MessageState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageState) Descriptor() protoreflect.EnumDescriptor {
	return file_api_sendfild_pb_sendfil_proto_enumTypes[0].Descriptor()
}

func (MessageState) Type() protoreflect.EnumType {
	return &file_api_sendfild_pb_sendfil_proto_enumTypes[0]
}

func (x MessageState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageState.Descriptor instead.
func (MessageState) EnumDescriptor() ([]byte, []int) {
	return file_api_sendfild_pb_sendfil_proto_rawDescGZIP(), []int{0}
}

type WaitingFilter int32

const (
	WaitingFilter_WAITING_FILTER_UNSPECIFIED WaitingFilter = 0
	WaitingFilter_WAITING_FILTER_WAITING     WaitingFilter = 1
	WaitingFilter_WAITING_FILTER_NOT_WAITING WaitingFilter = 2
)

// Enum value maps for WaitingFilter.
var (
	WaitingFilter_name = map[int32]string{
		0: "WAITING_FILTER_UNSPECIFIED",
		1: "WAITING_FILTER_WAITING",
		2: "WAITING_FILTER_NOT_WAITING",
	}
	WaitingFilter_value = map[string]int32{
		"WAITING_FILTER_UNSPECIFIED": 0,
		"WAITING_FILTER_WAITING":     1,
		"WAITING_FILTER_NOT_WAITING": 2,
	}
)

func (x WaitingFilter) Enum() *WaitingFilter {
	p := new(WaitingFilter)
	*p = x
	return p
}

func (x WaitingFilter) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WaitingFilter) Descriptor() protoreflect.EnumDescriptor {
	return file_api_sendfild_pb_sendfil_proto_enumTypes[1].Descriptor()
}

func (WaitingFilter) Type() protoreflect.EnumType {
	return &file_api_sendfild_pb_sendfil_proto_enumTypes[1]
}

func (x WaitingFilter) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WaitingFilter.Descriptor instead.
func (WaitingFilter) EnumDescriptor() ([]byte, []int) {
	return file_api_sendfild_pb_sendfil_proto_rawDescGZIP(), []int{1}
}

type Txn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	From          string               `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To            string               `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	AmountNanoFil int64                `protobuf:"varint,4,opt,name=amount_nano_fil,json=amountNanoFil,proto3" json:"amount_nano_fil,omitempty"`
	MessageCid    string               `protobuf:"bytes,5,opt,name=message_cid,json=messageCid,proto3" json:"message_cid,omitempty"`
	MessageState  MessageState         `protobuf:"varint,6,opt,name=message_state,json=messageState,proto3,enum=api.sendfild.pb.MessageState" json:"message_state,omitempty"`
	Waiting       bool                 `protobuf:"varint,7,opt,name=waiting,proto3" json:"waiting,omitempty"`
	FailureMsg    string               `protobuf:"bytes,8,opt,name=failure_msg,json=failureMsg,proto3" json:"failure_msg,omitempty"`
	CreatedAt     *timestamp.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamp.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Txn) Reset() {
	*x = Txn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sendfild_pb_sendfil_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Txn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Txn) ProtoMessage() {}

func (x *Txn) ProtoReflect() protoreflect.Message {
	mi := &file_api_sendfild_pb_sendfil_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Txn.ProtoReflect.Descriptor instead.
func (*Txn) Descriptor() ([]byte, []int) {
	return file_api_sendfild_pb_sendfil_proto_rawDescGZIP(), []int{0}
}

func (x *Txn) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Txn) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Txn) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *Txn) GetAmountNanoFil() int64 {
	if x != nil {
		return x.AmountNanoFil
	}
	return 0
}

func (x *Txn) GetMessageCid() string {
	if x != nil {
		return x.MessageCid
	}
	return ""
}

func (x *Txn) GetMessageState() MessageState {
	if x != nil {
		return x.MessageState
	}
	return MessageState_MESSAGE_STATE_UNSPECIFIED
}

func (x *Txn) GetWaiting() bool {
	if x != nil {
		return x.Waiting
	}
	return false
}

func (x *Txn) GetFailureMsg() string {
	if x != nil {
		return x.FailureMsg
	}
	return ""
}

func (x *Txn) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Txn) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type SendFilRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From          string `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	To            string `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	AmountNanoFil int64  `protobuf:"varint,3,opt,name=amount_nano_fil,json=amountNanoFil,proto3" json:"amount_nano_fil,omitempty"`
	Wait          bool   `protobuf:"varint,4,opt,name=wait,proto3" json:"wait,omitempty"`
}

func (x *SendFilRequest) Reset() {
	*x = SendFilRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sendfild_pb_sendfil_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendFilRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendFilRequest) ProtoMessage() {}

func (x *SendFilRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sendfild_pb_sendfil_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendFilRequest.ProtoReflect.Descriptor instead.
func (*SendFilRequest) Descriptor() ([]byte, []int) {
	return file_api_sendfild_pb_sendfil_proto_rawDescGZIP(), []int{1}
}

func (x *SendFilRequest) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *SendFilRequest) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *SendFilRequest) GetAmountNanoFil() int64 {
	if x != nil {
		return x.AmountNanoFil
	}
	return 0
}

func (x *SendFilRequest) GetWait() bool {
	if x != nil {
		return x.Wait
	}
	return false
}

type SendFilResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txn *Txn `protobuf:"bytes,1,opt,name=txn,proto3" json:"txn,omitempty"`
}

func (x *SendFilResponse) Reset() {
	*x = SendFilResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sendfild_pb_sendfil_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendFilResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendFilResponse) ProtoMessage() {}

func (x *SendFilResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sendfild_pb_sendfil_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendFilResponse.ProtoReflect.Descriptor instead.
func (*SendFilResponse) Descriptor() ([]byte, []int) {
	return file_api_sendfild_pb_sendfil_proto_rawDescGZIP(), []int{2}
}

func (x *SendFilResponse) GetTxn() *Txn {
	if x != nil {
		return x.Txn
	}
	return nil
}

type TxnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MessageCid string `protobuf:"bytes,1,opt,name=message_cid,json=messageCid,proto3" json:"message_cid,omitempty"`
	Wait       bool   `protobuf:"varint,2,opt,name=wait,proto3" json:"wait,omitempty"`
}

func (x *TxnRequest) Reset() {
	*x = TxnRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sendfild_pb_sendfil_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxnRequest) ProtoMessage() {}

func (x *TxnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sendfild_pb_sendfil_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxnRequest.ProtoReflect.Descriptor instead.
func (*TxnRequest) Descriptor() ([]byte, []int) {
	return file_api_sendfild_pb_sendfil_proto_rawDescGZIP(), []int{3}
}

func (x *TxnRequest) GetMessageCid() string {
	if x != nil {
		return x.MessageCid
	}
	return ""
}

func (x *TxnRequest) GetWait() bool {
	if x != nil {
		return x.Wait
	}
	return false
}

type TxnResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txn *Txn `protobuf:"bytes,1,opt,name=txn,proto3" json:"txn,omitempty"`
}

func (x *TxnResponse) Reset() {
	*x = TxnResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sendfild_pb_sendfil_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxnResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxnResponse) ProtoMessage() {}

func (x *TxnResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sendfild_pb_sendfil_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxnResponse.ProtoReflect.Descriptor instead.
func (*TxnResponse) Descriptor() ([]byte, []int) {
	return file_api_sendfild_pb_sendfil_proto_rawDescGZIP(), []int{4}
}

func (x *TxnResponse) GetTxn() *Txn {
	if x != nil {
		return x.Txn
	}
	return nil
}

type ListTxnsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromFilter              string               `protobuf:"bytes,1,opt,name=from_filter,json=fromFilter,proto3" json:"from_filter,omitempty"`
	ToFilter                string               `protobuf:"bytes,2,opt,name=to_filter,json=toFilter,proto3" json:"to_filter,omitempty"`
	InvolvingFilter         string               `protobuf:"bytes,3,opt,name=involving_filter,json=involvingFilter,proto3" json:"involving_filter,omitempty"`
	AmountNanoFilLtFilter   int64                `protobuf:"varint,4,opt,name=amount_nano_fil_lt_filter,json=amountNanoFilLtFilter,proto3" json:"amount_nano_fil_lt_filter,omitempty"`
	AmountNanoFilGtFilter   int64                `protobuf:"varint,5,opt,name=amount_nano_fil_gt_filter,json=amountNanoFilGtFilter,proto3" json:"amount_nano_fil_gt_filter,omitempty"`
	AmountNanoFilLteqFilter int64                `protobuf:"varint,6,opt,name=amount_nano_fil_lteq_filter,json=amountNanoFilLteqFilter,proto3" json:"amount_nano_fil_lteq_filter,omitempty"`
	AmountNanoFilGteqFilter int64                `protobuf:"varint,7,opt,name=amount_nano_fil_gteq_filter,json=amountNanoFilGteqFilter,proto3" json:"amount_nano_fil_gteq_filter,omitempty"`
	AmountNanoFilEqFilter   int64                `protobuf:"varint,8,opt,name=amount_nano_fil_eq_filter,json=amountNanoFilEqFilter,proto3" json:"amount_nano_fil_eq_filter,omitempty"`
	MessageStateFilter      MessageState         `protobuf:"varint,9,opt,name=message_state_filter,json=messageStateFilter,proto3,enum=api.sendfild.pb.MessageState" json:"message_state_filter,omitempty"`
	WaitingFilter           WaitingFilter        `protobuf:"varint,10,opt,name=waiting_filter,json=waitingFilter,proto3,enum=api.sendfild.pb.WaitingFilter" json:"waiting_filter,omitempty"`
	CreatedBefore           *timestamp.Timestamp `protobuf:"bytes,11,opt,name=created_before,json=createdBefore,proto3" json:"created_before,omitempty"`
	CreatedAfter            *timestamp.Timestamp `protobuf:"bytes,12,opt,name=created_after,json=createdAfter,proto3" json:"created_after,omitempty"`
	UpdatedBefore           *timestamp.Timestamp `protobuf:"bytes,13,opt,name=updated_before,json=updatedBefore,proto3" json:"updated_before,omitempty"`
	UpdatedAfter            *timestamp.Timestamp `protobuf:"bytes,14,opt,name=updated_after,json=updatedAfter,proto3" json:"updated_after,omitempty"`
	Ascending               bool                 `protobuf:"varint,15,opt,name=ascending,proto3" json:"ascending,omitempty"`
	MoreToken               int64                `protobuf:"varint,16,opt,name=more_token,json=moreToken,proto3" json:"more_token,omitempty"`
	Limit                   int64                `protobuf:"varint,17,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ListTxnsRequest) Reset() {
	*x = ListTxnsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sendfild_pb_sendfil_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTxnsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTxnsRequest) ProtoMessage() {}

func (x *ListTxnsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sendfild_pb_sendfil_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTxnsRequest.ProtoReflect.Descriptor instead.
func (*ListTxnsRequest) Descriptor() ([]byte, []int) {
	return file_api_sendfild_pb_sendfil_proto_rawDescGZIP(), []int{5}
}

func (x *ListTxnsRequest) GetFromFilter() string {
	if x != nil {
		return x.FromFilter
	}
	return ""
}

func (x *ListTxnsRequest) GetToFilter() string {
	if x != nil {
		return x.ToFilter
	}
	return ""
}

func (x *ListTxnsRequest) GetInvolvingFilter() string {
	if x != nil {
		return x.InvolvingFilter
	}
	return ""
}

func (x *ListTxnsRequest) GetAmountNanoFilLtFilter() int64 {
	if x != nil {
		return x.AmountNanoFilLtFilter
	}
	return 0
}

func (x *ListTxnsRequest) GetAmountNanoFilGtFilter() int64 {
	if x != nil {
		return x.AmountNanoFilGtFilter
	}
	return 0
}

func (x *ListTxnsRequest) GetAmountNanoFilLteqFilter() int64 {
	if x != nil {
		return x.AmountNanoFilLteqFilter
	}
	return 0
}

func (x *ListTxnsRequest) GetAmountNanoFilGteqFilter() int64 {
	if x != nil {
		return x.AmountNanoFilGteqFilter
	}
	return 0
}

func (x *ListTxnsRequest) GetAmountNanoFilEqFilter() int64 {
	if x != nil {
		return x.AmountNanoFilEqFilter
	}
	return 0
}

func (x *ListTxnsRequest) GetMessageStateFilter() MessageState {
	if x != nil {
		return x.MessageStateFilter
	}
	return MessageState_MESSAGE_STATE_UNSPECIFIED
}

func (x *ListTxnsRequest) GetWaitingFilter() WaitingFilter {
	if x != nil {
		return x.WaitingFilter
	}
	return WaitingFilter_WAITING_FILTER_UNSPECIFIED
}

func (x *ListTxnsRequest) GetCreatedBefore() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedBefore
	}
	return nil
}

func (x *ListTxnsRequest) GetCreatedAfter() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAfter
	}
	return nil
}

func (x *ListTxnsRequest) GetUpdatedBefore() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedBefore
	}
	return nil
}

func (x *ListTxnsRequest) GetUpdatedAfter() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAfter
	}
	return nil
}

func (x *ListTxnsRequest) GetAscending() bool {
	if x != nil {
		return x.Ascending
	}
	return false
}

func (x *ListTxnsRequest) GetMoreToken() int64 {
	if x != nil {
		return x.MoreToken
	}
	return 0
}

func (x *ListTxnsRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ListTxnsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txns      []*Txn `protobuf:"bytes,1,rep,name=txns,proto3" json:"txns,omitempty"`
	More      bool   `protobuf:"varint,2,opt,name=more,proto3" json:"more,omitempty"`
	MoreToken int64  `protobuf:"varint,3,opt,name=more_token,json=moreToken,proto3" json:"more_token,omitempty"`
}

func (x *ListTxnsResponse) Reset() {
	*x = ListTxnsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sendfild_pb_sendfil_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTxnsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTxnsResponse) ProtoMessage() {}

func (x *ListTxnsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sendfild_pb_sendfil_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTxnsResponse.ProtoReflect.Descriptor instead.
func (*ListTxnsResponse) Descriptor() ([]byte, []int) {
	return file_api_sendfild_pb_sendfil_proto_rawDescGZIP(), []int{6}
}

func (x *ListTxnsResponse) GetTxns() []*Txn {
	if x != nil {
		return x.Txns
	}
	return nil
}

func (x *ListTxnsResponse) GetMore() bool {
	if x != nil {
		return x.More
	}
	return false
}

func (x *ListTxnsResponse) GetMoreToken() int64 {
	if x != nil {
		return x.MoreToken
	}
	return 0
}

type SummaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	After  *timestamp.Timestamp `protobuf:"bytes,1,opt,name=after,proto3" json:"after,omitempty"`
	Before *timestamp.Timestamp `protobuf:"bytes,2,opt,name=before,proto3" json:"before,omitempty"`
}

func (x *SummaryRequest) Reset() {
	*x = SummaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sendfild_pb_sendfil_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SummaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummaryRequest) ProtoMessage() {}

func (x *SummaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_sendfild_pb_sendfil_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummaryRequest.ProtoReflect.Descriptor instead.
func (*SummaryRequest) Descriptor() ([]byte, []int) {
	return file_api_sendfild_pb_sendfil_proto_rawDescGZIP(), []int{7}
}

func (x *SummaryRequest) GetAfter() *timestamp.Timestamp {
	if x != nil {
		return x.After
	}
	return nil
}

func (x *SummaryRequest) GetBefore() *timestamp.Timestamp {
	if x != nil {
		return x.Before
	}
	return nil
}

type SummaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CountTxns        int64   `protobuf:"varint,1,opt,name=count_txns,json=countTxns,proto3" json:"count_txns,omitempty"`
	CountPending     int64   `protobuf:"varint,2,opt,name=count_pending,json=countPending,proto3" json:"count_pending,omitempty"`
	CountActive      int64   `protobuf:"varint,3,opt,name=count_active,json=countActive,proto3" json:"count_active,omitempty"`
	CountFailed      int64   `protobuf:"varint,4,opt,name=count_failed,json=countFailed,proto3" json:"count_failed,omitempty"`
	CountWaiting     int64   `protobuf:"varint,5,opt,name=count_waiting,json=countWaiting,proto3" json:"count_waiting,omitempty"`
	CountFromAddrs   int64   `protobuf:"varint,6,opt,name=count_from_addrs,json=countFromAddrs,proto3" json:"count_from_addrs,omitempty"`
	CountToAddrs     int64   `protobuf:"varint,7,opt,name=count_to_addrs,json=countToAddrs,proto3" json:"count_to_addrs,omitempty"`
	TotalNanoFilSent int64   `protobuf:"varint,8,opt,name=total_nano_fil_sent,json=totalNanoFilSent,proto3" json:"total_nano_fil_sent,omitempty"`
	AvgNanoFilSent   float64 `protobuf:"fixed64,9,opt,name=avg_nano_fil_sent,json=avgNanoFilSent,proto3" json:"avg_nano_fil_sent,omitempty"`
	MaxNanoFilSent   int64   `protobuf:"varint,10,opt,name=max_nano_fil_sent,json=maxNanoFilSent,proto3" json:"max_nano_fil_sent,omitempty"`
	MinNanoFilSent   int64   `protobuf:"varint,11,opt,name=min_nano_fil_sent,json=minNanoFilSent,proto3" json:"min_nano_fil_sent,omitempty"`
}

func (x *SummaryResponse) Reset() {
	*x = SummaryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_sendfild_pb_sendfil_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SummaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SummaryResponse) ProtoMessage() {}

func (x *SummaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_sendfild_pb_sendfil_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SummaryResponse.ProtoReflect.Descriptor instead.
func (*SummaryResponse) Descriptor() ([]byte, []int) {
	return file_api_sendfild_pb_sendfil_proto_rawDescGZIP(), []int{8}
}

func (x *SummaryResponse) GetCountTxns() int64 {
	if x != nil {
		return x.CountTxns
	}
	return 0
}

func (x *SummaryResponse) GetCountPending() int64 {
	if x != nil {
		return x.CountPending
	}
	return 0
}

func (x *SummaryResponse) GetCountActive() int64 {
	if x != nil {
		return x.CountActive
	}
	return 0
}

func (x *SummaryResponse) GetCountFailed() int64 {
	if x != nil {
		return x.CountFailed
	}
	return 0
}

func (x *SummaryResponse) GetCountWaiting() int64 {
	if x != nil {
		return x.CountWaiting
	}
	return 0
}

func (x *SummaryResponse) GetCountFromAddrs() int64 {
	if x != nil {
		return x.CountFromAddrs
	}
	return 0
}

func (x *SummaryResponse) GetCountToAddrs() int64 {
	if x != nil {
		return x.CountToAddrs
	}
	return 0
}

func (x *SummaryResponse) GetTotalNanoFilSent() int64 {
	if x != nil {
		return x.TotalNanoFilSent
	}
	return 0
}

func (x *SummaryResponse) GetAvgNanoFilSent() float64 {
	if x != nil {
		return x.AvgNanoFilSent
	}
	return 0
}

func (x *SummaryResponse) GetMaxNanoFilSent() int64 {
	if x != nil {
		return x.MaxNanoFilSent
	}
	return 0
}

func (x *SummaryResponse) GetMinNanoFilSent() int64 {
	if x != nil {
		return x.MinNanoFilSent
	}
	return 0
}

var File_api_sendfild_pb_sendfil_proto protoreflect.FileDescriptor

var file_api_sendfild_pb_sendfil_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x65, 0x6e, 0x64, 0x66, 0x69, 0x6c, 0x64, 0x2f, 0x70,
	0x62, 0x2f, 0x73, 0x65, 0x6e, 0x64, 0x66, 0x69, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0f, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x6e, 0x64, 0x66, 0x69, 0x6c, 0x64, 0x2e, 0x70, 0x62,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xf7, 0x02, 0x0a, 0x03, 0x54, 0x78, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a,
	0x02, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x26, 0x0a,
	0x0f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6e, 0x6f, 0x5f, 0x66, 0x69, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61,
	0x6e, 0x6f, 0x46, 0x69, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x63, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x43, 0x69, 0x64, 0x12, 0x42, 0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x6e, 0x64, 0x66, 0x69, 0x6c, 0x64, 0x2e, 0x70, 0x62, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0c, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x61,
	0x69, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x77, 0x61, 0x69,
	0x74, 0x69, 0x6e, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x5f,
	0x6d, 0x73, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x61, 0x69, 0x6c, 0x75,
	0x72, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x70, 0x0a, 0x0e, 0x53,
	0x65, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74,
	0x6f, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6e, 0x6f,
	0x5f, 0x66, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x4e, 0x61, 0x6e, 0x6f, 0x46, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x61, 0x69,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x77, 0x61, 0x69, 0x74, 0x22, 0x39, 0x0a,
	0x0f, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x26, 0x0a, 0x03, 0x74, 0x78, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x6e, 0x64, 0x66, 0x69, 0x6c, 0x64, 0x2e, 0x70, 0x62, 0x2e,
	0x54, 0x78, 0x6e, 0x52, 0x03, 0x74, 0x78, 0x6e, 0x22, 0x41, 0x0a, 0x0a, 0x54, 0x78, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x43, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x77, 0x61, 0x69, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x77, 0x61, 0x69, 0x74, 0x22, 0x35, 0x0a, 0x0b, 0x54,
	0x78, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x03, 0x74, 0x78,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65,
	0x6e, 0x64, 0x66, 0x69, 0x6c, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x78, 0x6e, 0x52, 0x03, 0x74,
	0x78, 0x6e, 0x22, 0x97, 0x07, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x78, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x6f,
	0x6d, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x5f, 0x66, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x6f, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x10, 0x69, 0x6e, 0x76, 0x6f, 0x6c, 0x76, 0x69, 0x6e,
	0x67, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x69, 0x6e, 0x76, 0x6f, 0x6c, 0x76, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x38, 0x0a, 0x19, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6e, 0x6f, 0x5f, 0x66,
	0x69, 0x6c, 0x5f, 0x6c, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x15, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6e, 0x6f, 0x46, 0x69,
	0x6c, 0x4c, 0x74, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x19, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6e, 0x6f, 0x5f, 0x66, 0x69, 0x6c, 0x5f, 0x67, 0x74, 0x5f,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6e, 0x6f, 0x46, 0x69, 0x6c, 0x47, 0x74, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x1b, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61,
	0x6e, 0x6f, 0x5f, 0x66, 0x69, 0x6c, 0x5f, 0x6c, 0x74, 0x65, 0x71, 0x5f, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x17, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x4e, 0x61, 0x6e, 0x6f, 0x46, 0x69, 0x6c, 0x4c, 0x74, 0x65, 0x71, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x3c, 0x0a, 0x1b, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6e, 0x6f,
	0x5f, 0x66, 0x69, 0x6c, 0x5f, 0x67, 0x74, 0x65, 0x71, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x17, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61,
	0x6e, 0x6f, 0x46, 0x69, 0x6c, 0x47, 0x74, 0x65, 0x71, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12,
	0x38, 0x0a, 0x19, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6e, 0x6f, 0x5f, 0x66,
	0x69, 0x6c, 0x5f, 0x65, 0x71, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x15, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6e, 0x6f, 0x46, 0x69,
	0x6c, 0x45, 0x71, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x4f, 0x0a, 0x14, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65,
	0x6e, 0x64, 0x66, 0x69, 0x6c, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x12, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x45, 0x0a, 0x0e, 0x77, 0x61,
	0x69, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x6e, 0x64, 0x66, 0x69, 0x6c,
	0x64, 0x2e, 0x70, 0x62, 0x2e, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x52, 0x0d, 0x77, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x12, 0x41, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x65, 0x66,
	0x6f, 0x72, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x65,
	0x66, 0x6f, 0x72, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x66, 0x74, 0x65, 0x72, 0x12, 0x41, 0x0a, 0x0e, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x66, 0x74, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x73, 0x63,
	0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x61, 0x73,
	0x63, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x72, 0x65, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x6f, 0x72,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x6f, 0x0a, 0x10,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x78, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x28, 0x0a, 0x04, 0x74, 0x78, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x6e, 0x64, 0x66, 0x69, 0x6c, 0x64, 0x2e, 0x70, 0x62,
	0x2e, 0x54, 0x78, 0x6e, 0x52, 0x04, 0x74, 0x78, 0x6e, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f,
	0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x6d, 0x6f, 0x72, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x6d, 0x6f, 0x72, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x6d, 0x6f, 0x72, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x76, 0x0a,
	0x0e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x30, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x61, 0x66, 0x74, 0x65,
	0x72, 0x12, 0x32, 0x0a, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x62,
	0x65, 0x66, 0x6f, 0x72, 0x65, 0x22, 0xc0, 0x03, 0x0a, 0x0f, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x74, 0x78, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x54, 0x78, 0x6e, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x77, 0x61, 0x69,
	0x74, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x46, 0x72, 0x6f, 0x6d, 0x41, 0x64, 0x64,
	0x72, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x73, 0x12, 0x2d, 0x0a, 0x13, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x6e, 0x61, 0x6e, 0x6f, 0x5f, 0x66, 0x69, 0x6c, 0x5f, 0x73, 0x65, 0x6e, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x61, 0x6e, 0x6f,
	0x46, 0x69, 0x6c, 0x53, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x11, 0x61, 0x76, 0x67, 0x5f, 0x6e,
	0x61, 0x6e, 0x6f, 0x5f, 0x66, 0x69, 0x6c, 0x5f, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x0e, 0x61, 0x76, 0x67, 0x4e, 0x61, 0x6e, 0x6f, 0x46, 0x69, 0x6c, 0x53, 0x65,
	0x6e, 0x74, 0x12, 0x29, 0x0a, 0x11, 0x6d, 0x61, 0x78, 0x5f, 0x6e, 0x61, 0x6e, 0x6f, 0x5f, 0x66,
	0x69, 0x6c, 0x5f, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6d,
	0x61, 0x78, 0x4e, 0x61, 0x6e, 0x6f, 0x46, 0x69, 0x6c, 0x53, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x0a,
	0x11, 0x6d, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6e, 0x6f, 0x5f, 0x66, 0x69, 0x6c, 0x5f, 0x73, 0x65,
	0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6d, 0x69, 0x6e, 0x4e, 0x61, 0x6e,
	0x6f, 0x46, 0x69, 0x6c, 0x53, 0x65, 0x6e, 0x74, 0x2a, 0x7c, 0x0a, 0x0c, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x19, 0x4d, 0x45, 0x53, 0x53,
	0x41, 0x47, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x4d, 0x45, 0x53, 0x53, 0x41,
	0x47, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47,
	0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14,
	0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x46, 0x41,
	0x49, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x2a, 0x6b, 0x0a, 0x0d, 0x57, 0x61, 0x69, 0x74, 0x69, 0x6e,
	0x67, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x1a, 0x57, 0x41, 0x49, 0x54, 0x49,
	0x4e, 0x47, 0x5f, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x57, 0x41, 0x49, 0x54, 0x49,
	0x4e, 0x47, 0x5f, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x49, 0x4e,
	0x47, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x57, 0x41, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x46,
	0x49, 0x4c, 0x54, 0x45, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x49, 0x4e,
	0x47, 0x10, 0x02, 0x32, 0xc7, 0x02, 0x0a, 0x0e, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4e, 0x0a, 0x07, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x69,
	0x6c, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x6e, 0x64, 0x66, 0x69, 0x6c, 0x64,
	0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x6e, 0x64, 0x66, 0x69, 0x6c,
	0x64, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x03, 0x54, 0x78, 0x6e, 0x12, 0x1b, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x6e, 0x64, 0x66, 0x69, 0x6c, 0x64, 0x2e, 0x70, 0x62, 0x2e,
	0x54, 0x78, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x65, 0x6e, 0x64, 0x66, 0x69, 0x6c, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x54, 0x78, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x08, 0x4c, 0x69,
	0x73, 0x74, 0x54, 0x78, 0x6e, 0x73, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x65, 0x6e,
	0x64, 0x66, 0x69, 0x6c, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x78, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x65, 0x6e, 0x64, 0x66, 0x69, 0x6c, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54,
	0x78, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a,
	0x07, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73,
	0x65, 0x6e, 0x64, 0x66, 0x69, 0x6c, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x65, 0x6e, 0x64, 0x66, 0x69, 0x6c, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x31, 0x5a,
	0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x78, 0x74,
	0x69, 0x6c, 0x65, 0x69, 0x6f, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x69, 0x6c, 0x65, 0x2f, 0x76, 0x32,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x65, 0x6e, 0x64, 0x66, 0x69, 0x6c, 0x64, 0x2f, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_sendfild_pb_sendfil_proto_rawDescOnce sync.Once
	file_api_sendfild_pb_sendfil_proto_rawDescData = file_api_sendfild_pb_sendfil_proto_rawDesc
)

func file_api_sendfild_pb_sendfil_proto_rawDescGZIP() []byte {
	file_api_sendfild_pb_sendfil_proto_rawDescOnce.Do(func() {
		file_api_sendfild_pb_sendfil_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_sendfild_pb_sendfil_proto_rawDescData)
	})
	return file_api_sendfild_pb_sendfil_proto_rawDescData
}

var file_api_sendfild_pb_sendfil_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_sendfild_pb_sendfil_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_api_sendfild_pb_sendfil_proto_goTypes = []interface{}{
	(MessageState)(0),           // 0: api.sendfild.pb.MessageState
	(WaitingFilter)(0),          // 1: api.sendfild.pb.WaitingFilter
	(*Txn)(nil),                 // 2: api.sendfild.pb.Txn
	(*SendFilRequest)(nil),      // 3: api.sendfild.pb.SendFilRequest
	(*SendFilResponse)(nil),     // 4: api.sendfild.pb.SendFilResponse
	(*TxnRequest)(nil),          // 5: api.sendfild.pb.TxnRequest
	(*TxnResponse)(nil),         // 6: api.sendfild.pb.TxnResponse
	(*ListTxnsRequest)(nil),     // 7: api.sendfild.pb.ListTxnsRequest
	(*ListTxnsResponse)(nil),    // 8: api.sendfild.pb.ListTxnsResponse
	(*SummaryRequest)(nil),      // 9: api.sendfild.pb.SummaryRequest
	(*SummaryResponse)(nil),     // 10: api.sendfild.pb.SummaryResponse
	(*timestamp.Timestamp)(nil), // 11: google.protobuf.Timestamp
}
var file_api_sendfild_pb_sendfil_proto_depIdxs = []int32{
	0,  // 0: api.sendfild.pb.Txn.message_state:type_name -> api.sendfild.pb.MessageState
	11, // 1: api.sendfild.pb.Txn.created_at:type_name -> google.protobuf.Timestamp
	11, // 2: api.sendfild.pb.Txn.updated_at:type_name -> google.protobuf.Timestamp
	2,  // 3: api.sendfild.pb.SendFilResponse.txn:type_name -> api.sendfild.pb.Txn
	2,  // 4: api.sendfild.pb.TxnResponse.txn:type_name -> api.sendfild.pb.Txn
	0,  // 5: api.sendfild.pb.ListTxnsRequest.message_state_filter:type_name -> api.sendfild.pb.MessageState
	1,  // 6: api.sendfild.pb.ListTxnsRequest.waiting_filter:type_name -> api.sendfild.pb.WaitingFilter
	11, // 7: api.sendfild.pb.ListTxnsRequest.created_before:type_name -> google.protobuf.Timestamp
	11, // 8: api.sendfild.pb.ListTxnsRequest.created_after:type_name -> google.protobuf.Timestamp
	11, // 9: api.sendfild.pb.ListTxnsRequest.updated_before:type_name -> google.protobuf.Timestamp
	11, // 10: api.sendfild.pb.ListTxnsRequest.updated_after:type_name -> google.protobuf.Timestamp
	2,  // 11: api.sendfild.pb.ListTxnsResponse.txns:type_name -> api.sendfild.pb.Txn
	11, // 12: api.sendfild.pb.SummaryRequest.after:type_name -> google.protobuf.Timestamp
	11, // 13: api.sendfild.pb.SummaryRequest.before:type_name -> google.protobuf.Timestamp
	3,  // 14: api.sendfild.pb.SendFilService.SendFil:input_type -> api.sendfild.pb.SendFilRequest
	5,  // 15: api.sendfild.pb.SendFilService.Txn:input_type -> api.sendfild.pb.TxnRequest
	7,  // 16: api.sendfild.pb.SendFilService.ListTxns:input_type -> api.sendfild.pb.ListTxnsRequest
	9,  // 17: api.sendfild.pb.SendFilService.Summary:input_type -> api.sendfild.pb.SummaryRequest
	4,  // 18: api.sendfild.pb.SendFilService.SendFil:output_type -> api.sendfild.pb.SendFilResponse
	6,  // 19: api.sendfild.pb.SendFilService.Txn:output_type -> api.sendfild.pb.TxnResponse
	8,  // 20: api.sendfild.pb.SendFilService.ListTxns:output_type -> api.sendfild.pb.ListTxnsResponse
	10, // 21: api.sendfild.pb.SendFilService.Summary:output_type -> api.sendfild.pb.SummaryResponse
	18, // [18:22] is the sub-list for method output_type
	14, // [14:18] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_api_sendfild_pb_sendfil_proto_init() }
func file_api_sendfild_pb_sendfil_proto_init() {
	if File_api_sendfild_pb_sendfil_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_sendfild_pb_sendfil_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Txn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sendfild_pb_sendfil_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendFilRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sendfild_pb_sendfil_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendFilResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sendfild_pb_sendfil_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxnRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sendfild_pb_sendfil_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxnResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sendfild_pb_sendfil_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTxnsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sendfild_pb_sendfil_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTxnsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sendfild_pb_sendfil_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SummaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_sendfild_pb_sendfil_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SummaryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_sendfild_pb_sendfil_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_sendfild_pb_sendfil_proto_goTypes,
		DependencyIndexes: file_api_sendfild_pb_sendfil_proto_depIdxs,
		EnumInfos:         file_api_sendfild_pb_sendfil_proto_enumTypes,
		MessageInfos:      file_api_sendfild_pb_sendfil_proto_msgTypes,
	}.Build()
	File_api_sendfild_pb_sendfil_proto = out.File
	file_api_sendfild_pb_sendfil_proto_rawDesc = nil
	file_api_sendfild_pb_sendfil_proto_goTypes = nil
	file_api_sendfild_pb_sendfil_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SendFilServiceClient is the client API for SendFilService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SendFilServiceClient interface {
	SendFil(ctx context.Context, in *SendFilRequest, opts ...grpc.CallOption) (*SendFilResponse, error)
	Txn(ctx context.Context, in *TxnRequest, opts ...grpc.CallOption) (*TxnResponse, error)
	ListTxns(ctx context.Context, in *ListTxnsRequest, opts ...grpc.CallOption) (*ListTxnsResponse, error)
	Summary(ctx context.Context, in *SummaryRequest, opts ...grpc.CallOption) (*SummaryResponse, error)
}

type sendFilServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSendFilServiceClient(cc grpc.ClientConnInterface) SendFilServiceClient {
	return &sendFilServiceClient{cc}
}

func (c *sendFilServiceClient) SendFil(ctx context.Context, in *SendFilRequest, opts ...grpc.CallOption) (*SendFilResponse, error) {
	out := new(SendFilResponse)
	err := c.cc.Invoke(ctx, "/api.sendfild.pb.SendFilService/SendFil", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sendFilServiceClient) Txn(ctx context.Context, in *TxnRequest, opts ...grpc.CallOption) (*TxnResponse, error) {
	out := new(TxnResponse)
	err := c.cc.Invoke(ctx, "/api.sendfild.pb.SendFilService/Txn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sendFilServiceClient) ListTxns(ctx context.Context, in *ListTxnsRequest, opts ...grpc.CallOption) (*ListTxnsResponse, error) {
	out := new(ListTxnsResponse)
	err := c.cc.Invoke(ctx, "/api.sendfild.pb.SendFilService/ListTxns", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sendFilServiceClient) Summary(ctx context.Context, in *SummaryRequest, opts ...grpc.CallOption) (*SummaryResponse, error) {
	out := new(SummaryResponse)
	err := c.cc.Invoke(ctx, "/api.sendfild.pb.SendFilService/Summary", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SendFilServiceServer is the server API for SendFilService service.
type SendFilServiceServer interface {
	SendFil(context.Context, *SendFilRequest) (*SendFilResponse, error)
	Txn(context.Context, *TxnRequest) (*TxnResponse, error)
	ListTxns(context.Context, *ListTxnsRequest) (*ListTxnsResponse, error)
	Summary(context.Context, *SummaryRequest) (*SummaryResponse, error)
}

// UnimplementedSendFilServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSendFilServiceServer struct {
}

func (*UnimplementedSendFilServiceServer) SendFil(context.Context, *SendFilRequest) (*SendFilResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendFil not implemented")
}
func (*UnimplementedSendFilServiceServer) Txn(context.Context, *TxnRequest) (*TxnResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Txn not implemented")
}
func (*UnimplementedSendFilServiceServer) ListTxns(context.Context, *ListTxnsRequest) (*ListTxnsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListTxns not implemented")
}
func (*UnimplementedSendFilServiceServer) Summary(context.Context, *SummaryRequest) (*SummaryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Summary not implemented")
}

func RegisterSendFilServiceServer(s *grpc.Server, srv SendFilServiceServer) {
	s.RegisterService(&_SendFilService_serviceDesc, srv)
}

func _SendFilService_SendFil_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendFilRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SendFilServiceServer).SendFil(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.sendfild.pb.SendFilService/SendFil",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SendFilServiceServer).SendFil(ctx, req.(*SendFilRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SendFilService_Txn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TxnRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SendFilServiceServer).Txn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.sendfild.pb.SendFilService/Txn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SendFilServiceServer).Txn(ctx, req.(*TxnRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SendFilService_ListTxns_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListTxnsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SendFilServiceServer).ListTxns(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.sendfild.pb.SendFilService/ListTxns",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SendFilServiceServer).ListTxns(ctx, req.(*ListTxnsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SendFilService_Summary_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SummaryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SendFilServiceServer).Summary(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.sendfild.pb.SendFilService/Summary",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SendFilServiceServer).Summary(ctx, req.(*SummaryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SendFilService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.sendfild.pb.SendFilService",
	HandlerType: (*SendFilServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendFil",
			Handler:    _SendFilService_SendFil_Handler,
		},
		{
			MethodName: "Txn",
			Handler:    _SendFilService_Txn_Handler,
		},
		{
			MethodName: "ListTxns",
			Handler:    _SendFilService_ListTxns_Handler,
		},
		{
			MethodName: "Summary",
			Handler:    _SendFilService_Summary_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/sendfild/pb/sendfil.proto",
}
