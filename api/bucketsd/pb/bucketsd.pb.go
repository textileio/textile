// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.13.0
// source: api/bucketsd/pb/bucketsd.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type PathAccessRole int32

const (
	PathAccessRole_PATH_ACCESS_ROLE_UNSPECIFIED PathAccessRole = 0
	PathAccessRole_PATH_ACCESS_ROLE_READER      PathAccessRole = 1
	PathAccessRole_PATH_ACCESS_ROLE_WRITER      PathAccessRole = 2
	PathAccessRole_PATH_ACCESS_ROLE_ADMIN       PathAccessRole = 3
)

// Enum value maps for PathAccessRole.
var (
	PathAccessRole_name = map[int32]string{
		0: "PATH_ACCESS_ROLE_UNSPECIFIED",
		1: "PATH_ACCESS_ROLE_READER",
		2: "PATH_ACCESS_ROLE_WRITER",
		3: "PATH_ACCESS_ROLE_ADMIN",
	}
	PathAccessRole_value = map[string]int32{
		"PATH_ACCESS_ROLE_UNSPECIFIED": 0,
		"PATH_ACCESS_ROLE_READER":      1,
		"PATH_ACCESS_ROLE_WRITER":      2,
		"PATH_ACCESS_ROLE_ADMIN":       3,
	}
)

func (x PathAccessRole) Enum() *PathAccessRole {
	p := new(PathAccessRole)
	*p = x
	return p
}

func (x PathAccessRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PathAccessRole) Descriptor() protoreflect.EnumDescriptor {
	return file_api_bucketsd_pb_bucketsd_proto_enumTypes[0].Descriptor()
}

func (PathAccessRole) Type() protoreflect.EnumType {
	return &file_api_bucketsd_pb_bucketsd_proto_enumTypes[0]
}

func (x PathAccessRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PathAccessRole.Descriptor instead.
func (PathAccessRole) EnumDescriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{0}
}

type ArchiveStatus int32

const (
	ArchiveStatus_ARCHIVE_STATUS_UNSPECIFIED ArchiveStatus = 0
	ArchiveStatus_ARCHIVE_STATUS_QUEUED      ArchiveStatus = 1
	ArchiveStatus_ARCHIVE_STATUS_EXECUTING   ArchiveStatus = 2
	ArchiveStatus_ARCHIVE_STATUS_FAILED      ArchiveStatus = 3
	ArchiveStatus_ARCHIVE_STATUS_CANCELED    ArchiveStatus = 4
	ArchiveStatus_ARCHIVE_STATUS_SUCCESS     ArchiveStatus = 5
)

// Enum value maps for ArchiveStatus.
var (
	ArchiveStatus_name = map[int32]string{
		0: "ARCHIVE_STATUS_UNSPECIFIED",
		1: "ARCHIVE_STATUS_QUEUED",
		2: "ARCHIVE_STATUS_EXECUTING",
		3: "ARCHIVE_STATUS_FAILED",
		4: "ARCHIVE_STATUS_CANCELED",
		5: "ARCHIVE_STATUS_SUCCESS",
	}
	ArchiveStatus_value = map[string]int32{
		"ARCHIVE_STATUS_UNSPECIFIED": 0,
		"ARCHIVE_STATUS_QUEUED":      1,
		"ARCHIVE_STATUS_EXECUTING":   2,
		"ARCHIVE_STATUS_FAILED":      3,
		"ARCHIVE_STATUS_CANCELED":    4,
		"ARCHIVE_STATUS_SUCCESS":     5,
	}
)

func (x ArchiveStatus) Enum() *ArchiveStatus {
	p := new(ArchiveStatus)
	*p = x
	return p
}

func (x ArchiveStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ArchiveStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_bucketsd_pb_bucketsd_proto_enumTypes[1].Descriptor()
}

func (ArchiveStatus) Type() protoreflect.EnumType {
	return &file_api_bucketsd_pb_bucketsd_proto_enumTypes[1]
}

func (x ArchiveStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ArchiveStatus.Descriptor instead.
func (ArchiveStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{1}
}

type Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roles     map[string]PathAccessRole `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=api.bucketsd.pb.PathAccessRole"`
	UpdatedAt int64                     `protobuf:"varint,2,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{0}
}

func (x *Metadata) GetRoles() map[string]PathAccessRole {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *Metadata) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type Root struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key       string    `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Name      string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Path      string    `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	CreatedAt int64     `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt int64     `protobuf:"varint,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Thread    string    `protobuf:"bytes,6,opt,name=thread,proto3" json:"thread,omitempty"`
	Owner     string    `protobuf:"bytes,7,opt,name=owner,proto3" json:"owner,omitempty"`
	Version   int32     `protobuf:"varint,8,opt,name=version,proto3" json:"version,omitempty"`
	Metadata  *Metadata `protobuf:"bytes,9,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *Root) Reset() {
	*x = Root{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Root) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Root) ProtoMessage() {}

func (x *Root) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Root.ProtoReflect.Descriptor instead.
func (*Root) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{1}
}

func (x *Root) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Root) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Root) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Root) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Root) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Root) GetThread() string {
	if x != nil {
		return x.Thread
	}
	return ""
}

func (x *Root) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *Root) GetVersion() int32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *Root) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type ListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListRequest) Reset() {
	*x = ListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRequest) ProtoMessage() {}

func (x *ListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRequest.ProtoReflect.Descriptor instead.
func (*ListRequest) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{2}
}

type ListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roots []*Root `protobuf:"bytes,1,rep,name=roots,proto3" json:"roots,omitempty"`
}

func (x *ListResponse) Reset() {
	*x = ListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListResponse) ProtoMessage() {}

func (x *ListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListResponse.ProtoReflect.Descriptor instead.
func (*ListResponse) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{3}
}

func (x *ListResponse) GetRoots() []*Root {
	if x != nil {
		return x.Roots
	}
	return nil
}

type CreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name         string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	BootstrapCid string `protobuf:"bytes,2,opt,name=bootstrap_cid,json=bootstrapCid,proto3" json:"bootstrap_cid,omitempty"`
	Private      bool   `protobuf:"varint,3,opt,name=private,proto3" json:"private,omitempty"`
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{4}
}

func (x *CreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRequest) GetBootstrapCid() string {
	if x != nil {
		return x.BootstrapCid
	}
	return ""
}

func (x *CreateRequest) GetPrivate() bool {
	if x != nil {
		return x.Private
	}
	return false
}

type CreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Root    *Root          `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
	Links   *LinksResponse `protobuf:"bytes,2,opt,name=links,proto3" json:"links,omitempty"`
	Seed    []byte         `protobuf:"bytes,3,opt,name=seed,proto3" json:"seed,omitempty"`
	SeedCid string         `protobuf:"bytes,4,opt,name=seed_cid,json=seedCid,proto3" json:"seed_cid,omitempty"`
	Pinned  int64          `protobuf:"varint,5,opt,name=pinned,proto3" json:"pinned,omitempty"`
}

func (x *CreateResponse) Reset() {
	*x = CreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResponse) ProtoMessage() {}

func (x *CreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResponse.ProtoReflect.Descriptor instead.
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{5}
}

func (x *CreateResponse) GetRoot() *Root {
	if x != nil {
		return x.Root
	}
	return nil
}

func (x *CreateResponse) GetLinks() *LinksResponse {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *CreateResponse) GetSeed() []byte {
	if x != nil {
		return x.Seed
	}
	return nil
}

func (x *CreateResponse) GetSeedCid() string {
	if x != nil {
		return x.SeedCid
	}
	return ""
}

func (x *CreateResponse) GetPinned() int64 {
	if x != nil {
		return x.Pinned
	}
	return 0
}

type RootRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *RootRequest) Reset() {
	*x = RootRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RootRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RootRequest) ProtoMessage() {}

func (x *RootRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RootRequest.ProtoReflect.Descriptor instead.
func (*RootRequest) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{6}
}

func (x *RootRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type RootResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Root *Root `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
}

func (x *RootResponse) Reset() {
	*x = RootResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RootResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RootResponse) ProtoMessage() {}

func (x *RootResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RootResponse.ProtoReflect.Descriptor instead.
func (*RootResponse) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{7}
}

func (x *RootResponse) GetRoot() *Root {
	if x != nil {
		return x.Root
	}
	return nil
}

type LinksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key  string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *LinksRequest) Reset() {
	*x = LinksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinksRequest) ProtoMessage() {}

func (x *LinksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinksRequest.ProtoReflect.Descriptor instead.
func (*LinksRequest) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{8}
}

func (x *LinksRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *LinksRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type LinksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url  string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Www  string `protobuf:"bytes,2,opt,name=www,proto3" json:"www,omitempty"`
	Ipns string `protobuf:"bytes,3,opt,name=ipns,proto3" json:"ipns,omitempty"`
}

func (x *LinksResponse) Reset() {
	*x = LinksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LinksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LinksResponse) ProtoMessage() {}

func (x *LinksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LinksResponse.ProtoReflect.Descriptor instead.
func (*LinksResponse) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{9}
}

func (x *LinksResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *LinksResponse) GetWww() string {
	if x != nil {
		return x.Www
	}
	return ""
}

func (x *LinksResponse) GetIpns() string {
	if x != nil {
		return x.Ipns
	}
	return ""
}

type ListPathRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key  string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *ListPathRequest) Reset() {
	*x = ListPathRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPathRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPathRequest) ProtoMessage() {}

func (x *ListPathRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPathRequest.ProtoReflect.Descriptor instead.
func (*ListPathRequest) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{10}
}

func (x *ListPathRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ListPathRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type ListPathResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *PathItem `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Root *Root     `protobuf:"bytes,2,opt,name=root,proto3" json:"root,omitempty"`
}

func (x *ListPathResponse) Reset() {
	*x = ListPathResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPathResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPathResponse) ProtoMessage() {}

func (x *ListPathResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPathResponse.ProtoReflect.Descriptor instead.
func (*ListPathResponse) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{11}
}

func (x *ListPathResponse) GetItem() *PathItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *ListPathResponse) GetRoot() *Root {
	if x != nil {
		return x.Root
	}
	return nil
}

type PathItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid        string      `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	Name       string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Path       string      `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
	Size       int64       `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	IsDir      bool        `protobuf:"varint,5,opt,name=is_dir,json=isDir,proto3" json:"is_dir,omitempty"`
	Items      []*PathItem `protobuf:"bytes,6,rep,name=items,proto3" json:"items,omitempty"`
	ItemsCount int32       `protobuf:"varint,7,opt,name=items_count,json=itemsCount,proto3" json:"items_count,omitempty"`
	Metadata   *Metadata   `protobuf:"bytes,9,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *PathItem) Reset() {
	*x = PathItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PathItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PathItem) ProtoMessage() {}

func (x *PathItem) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PathItem.ProtoReflect.Descriptor instead.
func (*PathItem) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{12}
}

func (x *PathItem) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *PathItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PathItem) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *PathItem) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PathItem) GetIsDir() bool {
	if x != nil {
		return x.IsDir
	}
	return false
}

func (x *PathItem) GetItems() []*PathItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *PathItem) GetItemsCount() int32 {
	if x != nil {
		return x.ItemsCount
	}
	return 0
}

func (x *PathItem) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type ListIpfsPathRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *ListIpfsPathRequest) Reset() {
	*x = ListIpfsPathRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIpfsPathRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIpfsPathRequest) ProtoMessage() {}

func (x *ListIpfsPathRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIpfsPathRequest.ProtoReflect.Descriptor instead.
func (*ListIpfsPathRequest) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{13}
}

func (x *ListIpfsPathRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type ListIpfsPathResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *PathItem `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
}

func (x *ListIpfsPathResponse) Reset() {
	*x = ListIpfsPathResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIpfsPathResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIpfsPathResponse) ProtoMessage() {}

func (x *ListIpfsPathResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIpfsPathResponse.ProtoReflect.Descriptor instead.
func (*ListIpfsPathResponse) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{14}
}

func (x *ListIpfsPathResponse) GetItem() *PathItem {
	if x != nil {
		return x.Item
	}
	return nil
}

type PushPathRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//	*PushPathRequest_Header_
	//	*PushPathRequest_Chunk_
	//	*PushPathRequest_Footer_
	Payload isPushPathRequest_Payload `protobuf_oneof:"payload"`
}

func (x *PushPathRequest) Reset() {
	*x = PushPathRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushPathRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushPathRequest) ProtoMessage() {}

func (x *PushPathRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushPathRequest.ProtoReflect.Descriptor instead.
func (*PushPathRequest) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{15}
}

func (m *PushPathRequest) GetPayload() isPushPathRequest_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *PushPathRequest) GetHeader() *PushPathRequest_Header {
	if x, ok := x.GetPayload().(*PushPathRequest_Header_); ok {
		return x.Header
	}
	return nil
}

func (x *PushPathRequest) GetChunk() *PushPathRequest_Chunk {
	if x, ok := x.GetPayload().(*PushPathRequest_Chunk_); ok {
		return x.Chunk
	}
	return nil
}

func (x *PushPathRequest) GetFooter() *PushPathRequest_Footer {
	if x, ok := x.GetPayload().(*PushPathRequest_Footer_); ok {
		return x.Footer
	}
	return nil
}

type isPushPathRequest_Payload interface {
	isPushPathRequest_Payload()
}

type PushPathRequest_Header_ struct {
	Header *PushPathRequest_Header `protobuf:"bytes,1,opt,name=header,proto3,oneof"`
}

type PushPathRequest_Chunk_ struct {
	Chunk *PushPathRequest_Chunk `protobuf:"bytes,2,opt,name=chunk,proto3,oneof"`
}

type PushPathRequest_Footer_ struct {
	Footer *PushPathRequest_Footer `protobuf:"bytes,3,opt,name=footer,proto3,oneof"`
}

func (*PushPathRequest_Header_) isPushPathRequest_Payload() {}

func (*PushPathRequest_Chunk_) isPushPathRequest_Payload() {}

func (*PushPathRequest_Footer_) isPushPathRequest_Payload() {}

type PushPathResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event *PushPathResponse_Event `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *PushPathResponse) Reset() {
	*x = PushPathResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushPathResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushPathResponse) ProtoMessage() {}

func (x *PushPathResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushPathResponse.ProtoReflect.Descriptor instead.
func (*PushPathResponse) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{16}
}

func (x *PushPathResponse) GetEvent() *PushPathResponse_Event {
	if x != nil {
		return x.Event
	}
	return nil
}

type PullPathRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key  string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *PullPathRequest) Reset() {
	*x = PullPathRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullPathRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullPathRequest) ProtoMessage() {}

func (x *PullPathRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullPathRequest.ProtoReflect.Descriptor instead.
func (*PullPathRequest) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{17}
}

func (x *PullPathRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PullPathRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type PullPathResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chunk []byte `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
}

func (x *PullPathResponse) Reset() {
	*x = PullPathResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullPathResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullPathResponse) ProtoMessage() {}

func (x *PullPathResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullPathResponse.ProtoReflect.Descriptor instead.
func (*PullPathResponse) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{18}
}

func (x *PullPathResponse) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

type PullIpfsPathRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *PullIpfsPathRequest) Reset() {
	*x = PullIpfsPathRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullIpfsPathRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullIpfsPathRequest) ProtoMessage() {}

func (x *PullIpfsPathRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullIpfsPathRequest.ProtoReflect.Descriptor instead.
func (*PullIpfsPathRequest) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{19}
}

func (x *PullIpfsPathRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type PullIpfsPathResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chunk []byte `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
}

func (x *PullIpfsPathResponse) Reset() {
	*x = PullIpfsPathResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullIpfsPathResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullIpfsPathResponse) ProtoMessage() {}

func (x *PullIpfsPathResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullIpfsPathResponse.ProtoReflect.Descriptor instead.
func (*PullIpfsPathResponse) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{20}
}

func (x *PullIpfsPathResponse) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

type SetPathRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key  string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Cid  string `protobuf:"bytes,3,opt,name=cid,proto3" json:"cid,omitempty"`
}

func (x *SetPathRequest) Reset() {
	*x = SetPathRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPathRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPathRequest) ProtoMessage() {}

func (x *SetPathRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPathRequest.ProtoReflect.Descriptor instead.
func (*SetPathRequest) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{21}
}

func (x *SetPathRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SetPathRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SetPathRequest) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

type SetPathResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pinned int64 `protobuf:"varint,1,opt,name=pinned,proto3" json:"pinned,omitempty"`
}

func (x *SetPathResponse) Reset() {
	*x = SetPathResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPathResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPathResponse) ProtoMessage() {}

func (x *SetPathResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPathResponse.ProtoReflect.Descriptor instead.
func (*SetPathResponse) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{22}
}

func (x *SetPathResponse) GetPinned() int64 {
	if x != nil {
		return x.Pinned
	}
	return 0
}

type RemoveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *RemoveRequest) Reset() {
	*x = RemoveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRequest) ProtoMessage() {}

func (x *RemoveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRequest.ProtoReflect.Descriptor instead.
func (*RemoveRequest) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{23}
}

func (x *RemoveRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type RemoveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pinned int64 `protobuf:"varint,1,opt,name=pinned,proto3" json:"pinned,omitempty"`
}

func (x *RemoveResponse) Reset() {
	*x = RemoveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveResponse) ProtoMessage() {}

func (x *RemoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveResponse.ProtoReflect.Descriptor instead.
func (*RemoveResponse) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{24}
}

func (x *RemoveResponse) GetPinned() int64 {
	if x != nil {
		return x.Pinned
	}
	return 0
}

type RemovePathRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key  string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Root string `protobuf:"bytes,3,opt,name=root,proto3" json:"root,omitempty"`
}

func (x *RemovePathRequest) Reset() {
	*x = RemovePathRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePathRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePathRequest) ProtoMessage() {}

func (x *RemovePathRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePathRequest.ProtoReflect.Descriptor instead.
func (*RemovePathRequest) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{25}
}

func (x *RemovePathRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *RemovePathRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *RemovePathRequest) GetRoot() string {
	if x != nil {
		return x.Root
	}
	return ""
}

type RemovePathResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Root   *Root `protobuf:"bytes,1,opt,name=root,proto3" json:"root,omitempty"`
	Pinned int64 `protobuf:"varint,2,opt,name=pinned,proto3" json:"pinned,omitempty"`
}

func (x *RemovePathResponse) Reset() {
	*x = RemovePathResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemovePathResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemovePathResponse) ProtoMessage() {}

func (x *RemovePathResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemovePathResponse.ProtoReflect.Descriptor instead.
func (*RemovePathResponse) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{26}
}

func (x *RemovePathResponse) GetRoot() *Root {
	if x != nil {
		return x.Root
	}
	return nil
}

func (x *RemovePathResponse) GetPinned() int64 {
	if x != nil {
		return x.Pinned
	}
	return 0
}

type PushPathAccessRolesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string                    `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Path  string                    `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Roles map[string]PathAccessRole `protobuf:"bytes,3,rep,name=roles,proto3" json:"roles,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=api.bucketsd.pb.PathAccessRole"`
}

func (x *PushPathAccessRolesRequest) Reset() {
	*x = PushPathAccessRolesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushPathAccessRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushPathAccessRolesRequest) ProtoMessage() {}

func (x *PushPathAccessRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushPathAccessRolesRequest.ProtoReflect.Descriptor instead.
func (*PushPathAccessRolesRequest) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{27}
}

func (x *PushPathAccessRolesRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PushPathAccessRolesRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *PushPathAccessRolesRequest) GetRoles() map[string]PathAccessRole {
	if x != nil {
		return x.Roles
	}
	return nil
}

type PushPathAccessRolesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pinned int64 `protobuf:"varint,1,opt,name=pinned,proto3" json:"pinned,omitempty"`
}

func (x *PushPathAccessRolesResponse) Reset() {
	*x = PushPathAccessRolesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushPathAccessRolesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushPathAccessRolesResponse) ProtoMessage() {}

func (x *PushPathAccessRolesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushPathAccessRolesResponse.ProtoReflect.Descriptor instead.
func (*PushPathAccessRolesResponse) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{28}
}

func (x *PushPathAccessRolesResponse) GetPinned() int64 {
	if x != nil {
		return x.Pinned
	}
	return 0
}

type PullPathAccessRolesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key  string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *PullPathAccessRolesRequest) Reset() {
	*x = PullPathAccessRolesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullPathAccessRolesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullPathAccessRolesRequest) ProtoMessage() {}

func (x *PullPathAccessRolesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullPathAccessRolesRequest.ProtoReflect.Descriptor instead.
func (*PullPathAccessRolesRequest) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{29}
}

func (x *PullPathAccessRolesRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PullPathAccessRolesRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type PullPathAccessRolesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Roles map[string]PathAccessRole `protobuf:"bytes,1,rep,name=roles,proto3" json:"roles,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=api.bucketsd.pb.PathAccessRole"`
}

func (x *PullPathAccessRolesResponse) Reset() {
	*x = PullPathAccessRolesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullPathAccessRolesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullPathAccessRolesResponse) ProtoMessage() {}

func (x *PullPathAccessRolesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullPathAccessRolesResponse.ProtoReflect.Descriptor instead.
func (*PullPathAccessRolesResponse) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{30}
}

func (x *PullPathAccessRolesResponse) GetRoles() map[string]PathAccessRole {
	if x != nil {
		return x.Roles
	}
	return nil
}

type ArchiveConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RepFactor       int32         `protobuf:"varint,1,opt,name=rep_factor,json=repFactor,proto3" json:"rep_factor,omitempty"`
	DealMinDuration int64         `protobuf:"varint,2,opt,name=deal_min_duration,json=dealMinDuration,proto3" json:"deal_min_duration,omitempty"`
	ExcludedMiners  []string      `protobuf:"bytes,3,rep,name=excluded_miners,json=excludedMiners,proto3" json:"excluded_miners,omitempty"`
	TrustedMiners   []string      `protobuf:"bytes,4,rep,name=trusted_miners,json=trustedMiners,proto3" json:"trusted_miners,omitempty"`
	CountryCodes    []string      `protobuf:"bytes,5,rep,name=country_codes,json=countryCodes,proto3" json:"country_codes,omitempty"`
	Renew           *ArchiveRenew `protobuf:"bytes,6,opt,name=renew,proto3" json:"renew,omitempty"`
	MaxPrice        uint64        `protobuf:"varint,7,opt,name=max_price,json=maxPrice,proto3" json:"max_price,omitempty"`
	FastRetrieval   bool          `protobuf:"varint,8,opt,name=fast_retrieval,json=fastRetrieval,proto3" json:"fast_retrieval,omitempty"`
	DealStartOffset int64         `protobuf:"varint,9,opt,name=deal_start_offset,json=dealStartOffset,proto3" json:"deal_start_offset,omitempty"`
}

func (x *ArchiveConfig) Reset() {
	*x = ArchiveConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArchiveConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveConfig) ProtoMessage() {}

func (x *ArchiveConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchiveConfig.ProtoReflect.Descriptor instead.
func (*ArchiveConfig) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{31}
}

func (x *ArchiveConfig) GetRepFactor() int32 {
	if x != nil {
		return x.RepFactor
	}
	return 0
}

func (x *ArchiveConfig) GetDealMinDuration() int64 {
	if x != nil {
		return x.DealMinDuration
	}
	return 0
}

func (x *ArchiveConfig) GetExcludedMiners() []string {
	if x != nil {
		return x.ExcludedMiners
	}
	return nil
}

func (x *ArchiveConfig) GetTrustedMiners() []string {
	if x != nil {
		return x.TrustedMiners
	}
	return nil
}

func (x *ArchiveConfig) GetCountryCodes() []string {
	if x != nil {
		return x.CountryCodes
	}
	return nil
}

func (x *ArchiveConfig) GetRenew() *ArchiveRenew {
	if x != nil {
		return x.Renew
	}
	return nil
}

func (x *ArchiveConfig) GetMaxPrice() uint64 {
	if x != nil {
		return x.MaxPrice
	}
	return 0
}

func (x *ArchiveConfig) GetFastRetrieval() bool {
	if x != nil {
		return x.FastRetrieval
	}
	return false
}

func (x *ArchiveConfig) GetDealStartOffset() int64 {
	if x != nil {
		return x.DealStartOffset
	}
	return 0
}

type Archive struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid           string        `protobuf:"bytes,1,opt,name=cid,proto3" json:"cid,omitempty"`
	JobId         string        `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	ArchiveStatus ArchiveStatus `protobuf:"varint,3,opt,name=archive_status,json=archiveStatus,proto3,enum=api.bucketsd.pb.ArchiveStatus" json:"archive_status,omitempty"`
	Aborted       bool          `protobuf:"varint,4,opt,name=aborted,proto3" json:"aborted,omitempty"`
	AbortedMsg    string        `protobuf:"bytes,5,opt,name=aborted_msg,json=abortedMsg,proto3" json:"aborted_msg,omitempty"`
	FailureMsg    string        `protobuf:"bytes,6,opt,name=failure_msg,json=failureMsg,proto3" json:"failure_msg,omitempty"`
	CreatedAt     int64         `protobuf:"varint,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	DealInfo      []*DealInfo   `protobuf:"bytes,8,rep,name=deal_info,json=dealInfo,proto3" json:"deal_info,omitempty"`
}

func (x *Archive) Reset() {
	*x = Archive{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Archive) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Archive) ProtoMessage() {}

func (x *Archive) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Archive.ProtoReflect.Descriptor instead.
func (*Archive) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{32}
}

func (x *Archive) GetCid() string {
	if x != nil {
		return x.Cid
	}
	return ""
}

func (x *Archive) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *Archive) GetArchiveStatus() ArchiveStatus {
	if x != nil {
		return x.ArchiveStatus
	}
	return ArchiveStatus_ARCHIVE_STATUS_UNSPECIFIED
}

func (x *Archive) GetAborted() bool {
	if x != nil {
		return x.Aborted
	}
	return false
}

func (x *Archive) GetAbortedMsg() string {
	if x != nil {
		return x.AbortedMsg
	}
	return ""
}

func (x *Archive) GetFailureMsg() string {
	if x != nil {
		return x.FailureMsg
	}
	return ""
}

func (x *Archive) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Archive) GetDealInfo() []*DealInfo {
	if x != nil {
		return x.DealInfo
	}
	return nil
}

type DealInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProposalCid     string `protobuf:"bytes,1,opt,name=proposal_cid,json=proposalCid,proto3" json:"proposal_cid,omitempty"`
	StateId         uint64 `protobuf:"varint,2,opt,name=state_id,json=stateId,proto3" json:"state_id,omitempty"`
	StateName       string `protobuf:"bytes,3,opt,name=state_name,json=stateName,proto3" json:"state_name,omitempty"`
	Miner           string `protobuf:"bytes,4,opt,name=miner,proto3" json:"miner,omitempty"`
	PieceCid        string `protobuf:"bytes,5,opt,name=piece_cid,json=pieceCid,proto3" json:"piece_cid,omitempty"`
	Size            uint64 `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
	PricePerEpoch   uint64 `protobuf:"varint,7,opt,name=price_per_epoch,json=pricePerEpoch,proto3" json:"price_per_epoch,omitempty"`
	StartEpoch      uint64 `protobuf:"varint,8,opt,name=start_epoch,json=startEpoch,proto3" json:"start_epoch,omitempty"`
	Duration        uint64 `protobuf:"varint,9,opt,name=duration,proto3" json:"duration,omitempty"`
	DealId          uint64 `protobuf:"varint,10,opt,name=deal_id,json=dealId,proto3" json:"deal_id,omitempty"`
	ActivationEpoch int64  `protobuf:"varint,11,opt,name=activation_epoch,json=activationEpoch,proto3" json:"activation_epoch,omitempty"`
	Message         string `protobuf:"bytes,12,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *DealInfo) Reset() {
	*x = DealInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DealInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DealInfo) ProtoMessage() {}

func (x *DealInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DealInfo.ProtoReflect.Descriptor instead.
func (*DealInfo) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{33}
}

func (x *DealInfo) GetProposalCid() string {
	if x != nil {
		return x.ProposalCid
	}
	return ""
}

func (x *DealInfo) GetStateId() uint64 {
	if x != nil {
		return x.StateId
	}
	return 0
}

func (x *DealInfo) GetStateName() string {
	if x != nil {
		return x.StateName
	}
	return ""
}

func (x *DealInfo) GetMiner() string {
	if x != nil {
		return x.Miner
	}
	return ""
}

func (x *DealInfo) GetPieceCid() string {
	if x != nil {
		return x.PieceCid
	}
	return ""
}

func (x *DealInfo) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *DealInfo) GetPricePerEpoch() uint64 {
	if x != nil {
		return x.PricePerEpoch
	}
	return 0
}

func (x *DealInfo) GetStartEpoch() uint64 {
	if x != nil {
		return x.StartEpoch
	}
	return 0
}

func (x *DealInfo) GetDuration() uint64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *DealInfo) GetDealId() uint64 {
	if x != nil {
		return x.DealId
	}
	return 0
}

func (x *DealInfo) GetActivationEpoch() int64 {
	if x != nil {
		return x.ActivationEpoch
	}
	return 0
}

func (x *DealInfo) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ArchiveRenew struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled   bool  `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"`
	Threshold int32 `protobuf:"varint,2,opt,name=threshold,proto3" json:"threshold,omitempty"`
}

func (x *ArchiveRenew) Reset() {
	*x = ArchiveRenew{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArchiveRenew) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveRenew) ProtoMessage() {}

func (x *ArchiveRenew) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchiveRenew.ProtoReflect.Descriptor instead.
func (*ArchiveRenew) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{34}
}

func (x *ArchiveRenew) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *ArchiveRenew) GetThreshold() int32 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

type DefaultArchiveConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *DefaultArchiveConfigRequest) Reset() {
	*x = DefaultArchiveConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DefaultArchiveConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefaultArchiveConfigRequest) ProtoMessage() {}

func (x *DefaultArchiveConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefaultArchiveConfigRequest.ProtoReflect.Descriptor instead.
func (*DefaultArchiveConfigRequest) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{35}
}

func (x *DefaultArchiveConfigRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type DefaultArchiveConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArchiveConfig *ArchiveConfig `protobuf:"bytes,1,opt,name=archive_config,json=archiveConfig,proto3" json:"archive_config,omitempty"`
}

func (x *DefaultArchiveConfigResponse) Reset() {
	*x = DefaultArchiveConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DefaultArchiveConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefaultArchiveConfigResponse) ProtoMessage() {}

func (x *DefaultArchiveConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefaultArchiveConfigResponse.ProtoReflect.Descriptor instead.
func (*DefaultArchiveConfigResponse) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{36}
}

func (x *DefaultArchiveConfigResponse) GetArchiveConfig() *ArchiveConfig {
	if x != nil {
		return x.ArchiveConfig
	}
	return nil
}

type SetDefaultArchiveConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key           string         `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	ArchiveConfig *ArchiveConfig `protobuf:"bytes,2,opt,name=archive_config,json=archiveConfig,proto3" json:"archive_config,omitempty"`
}

func (x *SetDefaultArchiveConfigRequest) Reset() {
	*x = SetDefaultArchiveConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDefaultArchiveConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDefaultArchiveConfigRequest) ProtoMessage() {}

func (x *SetDefaultArchiveConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDefaultArchiveConfigRequest.ProtoReflect.Descriptor instead.
func (*SetDefaultArchiveConfigRequest) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{37}
}

func (x *SetDefaultArchiveConfigRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SetDefaultArchiveConfigRequest) GetArchiveConfig() *ArchiveConfig {
	if x != nil {
		return x.ArchiveConfig
	}
	return nil
}

type SetDefaultArchiveConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetDefaultArchiveConfigResponse) Reset() {
	*x = SetDefaultArchiveConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetDefaultArchiveConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetDefaultArchiveConfigResponse) ProtoMessage() {}

func (x *SetDefaultArchiveConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetDefaultArchiveConfigResponse.ProtoReflect.Descriptor instead.
func (*SetDefaultArchiveConfigResponse) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{38}
}

type ArchiveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key           string         `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	ArchiveConfig *ArchiveConfig `protobuf:"bytes,2,opt,name=archive_config,json=archiveConfig,proto3" json:"archive_config,omitempty"`
}

func (x *ArchiveRequest) Reset() {
	*x = ArchiveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArchiveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveRequest) ProtoMessage() {}

func (x *ArchiveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchiveRequest.ProtoReflect.Descriptor instead.
func (*ArchiveRequest) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{39}
}

func (x *ArchiveRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ArchiveRequest) GetArchiveConfig() *ArchiveConfig {
	if x != nil {
		return x.ArchiveConfig
	}
	return nil
}

type ArchiveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ArchiveResponse) Reset() {
	*x = ArchiveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArchiveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveResponse) ProtoMessage() {}

func (x *ArchiveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchiveResponse.ProtoReflect.Descriptor instead.
func (*ArchiveResponse) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{40}
}

type ArchivesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *ArchivesRequest) Reset() {
	*x = ArchivesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArchivesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchivesRequest) ProtoMessage() {}

func (x *ArchivesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchivesRequest.ProtoReflect.Descriptor instead.
func (*ArchivesRequest) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{41}
}

func (x *ArchivesRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type ArchivesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current *Archive   `protobuf:"bytes,1,opt,name=current,proto3" json:"current,omitempty"`
	History []*Archive `protobuf:"bytes,2,rep,name=history,proto3" json:"history,omitempty"`
}

func (x *ArchivesResponse) Reset() {
	*x = ArchivesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArchivesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchivesResponse) ProtoMessage() {}

func (x *ArchivesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchivesResponse.ProtoReflect.Descriptor instead.
func (*ArchivesResponse) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{42}
}

func (x *ArchivesResponse) GetCurrent() *Archive {
	if x != nil {
		return x.Current
	}
	return nil
}

func (x *ArchivesResponse) GetHistory() []*Archive {
	if x != nil {
		return x.History
	}
	return nil
}

type ArchiveWatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *ArchiveWatchRequest) Reset() {
	*x = ArchiveWatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArchiveWatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveWatchRequest) ProtoMessage() {}

func (x *ArchiveWatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchiveWatchRequest.ProtoReflect.Descriptor instead.
func (*ArchiveWatchRequest) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{43}
}

func (x *ArchiveWatchRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type ArchiveWatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg string `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ArchiveWatchResponse) Reset() {
	*x = ArchiveWatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArchiveWatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveWatchResponse) ProtoMessage() {}

func (x *ArchiveWatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchiveWatchResponse.ProtoReflect.Descriptor instead.
func (*ArchiveWatchResponse) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{44}
}

func (x *ArchiveWatchResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type PushPathRequest_Header struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key  string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Root string `protobuf:"bytes,2,opt,name=root,proto3" json:"root,omitempty"`
}

func (x *PushPathRequest_Header) Reset() {
	*x = PushPathRequest_Header{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushPathRequest_Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushPathRequest_Header) ProtoMessage() {}

func (x *PushPathRequest_Header) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushPathRequest_Header.ProtoReflect.Descriptor instead.
func (*PushPathRequest_Header) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{15, 0}
}

func (x *PushPathRequest_Header) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PushPathRequest_Header) GetRoot() string {
	if x != nil {
		return x.Root
	}
	return ""
}

type PushPathRequest_Chunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PushPathRequest_Chunk) Reset() {
	*x = PushPathRequest_Chunk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushPathRequest_Chunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushPathRequest_Chunk) ProtoMessage() {}

func (x *PushPathRequest_Chunk) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushPathRequest_Chunk.ProtoReflect.Descriptor instead.
func (*PushPathRequest_Chunk) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{15, 1}
}

func (x *PushPathRequest_Chunk) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *PushPathRequest_Chunk) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type PushPathRequest_Footer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PushPathRequest_Footer) Reset() {
	*x = PushPathRequest_Footer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushPathRequest_Footer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushPathRequest_Footer) ProtoMessage() {}

func (x *PushPathRequest_Footer) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushPathRequest_Footer.ProtoReflect.Descriptor instead.
func (*PushPathRequest_Footer) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{15, 2}
}

type PushPathResponse_Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Path   string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Bytes  int64  `protobuf:"varint,3,opt,name=bytes,proto3" json:"bytes,omitempty"`
	Size   string `protobuf:"bytes,4,opt,name=size,proto3" json:"size,omitempty"`
	Root   *Root  `protobuf:"bytes,5,opt,name=root,proto3" json:"root,omitempty"`
	Pinned int64  `protobuf:"varint,6,opt,name=pinned,proto3" json:"pinned,omitempty"`
}

func (x *PushPathResponse_Event) Reset() {
	*x = PushPathResponse_Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushPathResponse_Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushPathResponse_Event) ProtoMessage() {}

func (x *PushPathResponse_Event) ProtoReflect() protoreflect.Message {
	mi := &file_api_bucketsd_pb_bucketsd_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushPathResponse_Event.ProtoReflect.Descriptor instead.
func (*PushPathResponse_Event) Descriptor() ([]byte, []int) {
	return file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP(), []int{16, 0}
}

func (x *PushPathResponse_Event) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PushPathResponse_Event) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *PushPathResponse_Event) GetBytes() int64 {
	if x != nil {
		return x.Bytes
	}
	return 0
}

func (x *PushPathResponse_Event) GetSize() string {
	if x != nil {
		return x.Size
	}
	return ""
}

func (x *PushPathResponse_Event) GetRoot() *Root {
	if x != nil {
		return x.Root
	}
	return nil
}

func (x *PushPathResponse_Event) GetPinned() int64 {
	if x != nil {
		return x.Pinned
	}
	return 0
}

var File_api_bucketsd_pb_bucketsd_proto protoreflect.FileDescriptor

var file_api_bucketsd_pb_bucketsd_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x64, 0x2f, 0x70,
	0x62, 0x2f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0f, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x64, 0x2e, 0x70,
	0x62, 0x22, 0xc0, 0x01, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3a,
	0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x64, 0x2e, 0x70, 0x62, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x1a, 0x59, 0x0a, 0x0a, 0x52, 0x6f, 0x6c,
	0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x35, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xfd, 0x01, 0x0a, 0x04, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x64, 0x2e, 0x70,
	0x62, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x0d, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x3b, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x72, 0x6f, 0x6f, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x64, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x6f, 0x6f, 0x74, 0x52, 0x05, 0x72, 0x6f, 0x6f, 0x74, 0x73,
	0x22, 0x62, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x6f, 0x6f, 0x74, 0x73, 0x74, 0x72,
	0x61, 0x70, 0x5f, 0x63, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x6f,
	0x6f, 0x74, 0x73, 0x74, 0x72, 0x61, 0x70, 0x43, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x22, 0xb8, 0x01, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x6f, 0x6f, 0x74, 0x52, 0x04, 0x72, 0x6f,
	0x6f, 0x74, 0x12, 0x34, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x64,
	0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x65, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x73, 0x65, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x65, 0x65, 0x64, 0x5f, 0x63, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x65, 0x65, 0x64, 0x43, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x69, 0x6e, 0x6e, 0x65,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x22,
	0x1f, 0x0a, 0x0b, 0x52, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x22, 0x39, 0x0a, 0x0c, 0x52, 0x6f, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x29, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x64, 0x2e, 0x70, 0x62,
	0x2e, 0x52, 0x6f, 0x6f, 0x74, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x22, 0x34, 0x0a, 0x0c, 0x4c,
	0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x22, 0x47, 0x0a, 0x0d, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x77, 0x77, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x77, 0x77, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x70, 0x6e, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x70, 0x6e, 0x73, 0x22, 0x37, 0x0a, 0x0f, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x22, 0x6c, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x74, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x29, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x6f, 0x6f, 0x74, 0x52, 0x04, 0x72, 0x6f, 0x6f,
	0x74, 0x22, 0xf8, 0x01, 0x0a, 0x08, 0x50, 0x61, 0x74, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x10,
	0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x15, 0x0a, 0x06,
	0x69, 0x73, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73,
	0x44, 0x69, 0x72, 0x12, 0x2f, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x64, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x74, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x29, 0x0a, 0x13,
	0x4c, 0x69, 0x73, 0x74, 0x49, 0x70, 0x66, 0x73, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x45, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x70, 0x66, 0x73, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2d, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x64, 0x2e, 0x70, 0x62, 0x2e,
	0x50, 0x61, 0x74, 0x68, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0xcd,
	0x02, 0x0a, 0x0f, 0x50, 0x75, 0x73, 0x68, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x41, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x64, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x48, 0x00, 0x52, 0x06, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x50, 0x61, 0x74, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x48, 0x00, 0x52, 0x05,
	0x63, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x41, 0x0a, 0x06, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x50, 0x61, 0x74, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x46, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x48, 0x00,
	0x52, 0x06, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x1a, 0x2e, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x1a, 0x2f, 0x0a, 0x05, 0x43, 0x68, 0x75, 0x6e,
	0x6b, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x08, 0x0a, 0x06, 0x46, 0x6f, 0x6f,
	0x74, 0x65, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xf0,
	0x01, 0x0a, 0x10, 0x50, 0x75, 0x73, 0x68, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x64, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x1a, 0x9c, 0x01, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x29,
	0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x52,
	0x6f, 0x6f, 0x74, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x69, 0x6e,
	0x6e, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x69, 0x6e, 0x6e, 0x65,
	0x64, 0x22, 0x37, 0x0a, 0x0f, 0x50, 0x75, 0x6c, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x28, 0x0a, 0x10, 0x50, 0x75,
	0x6c, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x63,
	0x68, 0x75, 0x6e, 0x6b, 0x22, 0x29, 0x0a, 0x13, 0x50, 0x75, 0x6c, 0x6c, 0x49, 0x70, 0x66, 0x73,
	0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22,
	0x2c, 0x0a, 0x14, 0x50, 0x75, 0x6c, 0x6c, 0x49, 0x70, 0x66, 0x73, 0x50, 0x61, 0x74, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x22, 0x48, 0x0a,
	0x0e, 0x53, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x22, 0x29, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x50, 0x61,
	0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x69,
	0x6e, 0x6e, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x69, 0x6e, 0x6e,
	0x65, 0x64, 0x22, 0x21, 0x0a, 0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x28, 0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x69, 0x6e, 0x6e, 0x65,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x22,
	0x4d, 0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f,
	0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x22, 0x57,
	0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x64, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x6f, 0x6f, 0x74, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x70, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x22, 0xeb, 0x01, 0x0a, 0x1a, 0x50, 0x75, 0x73, 0x68,
	0x50, 0x61, 0x74, 0x68, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x4c, 0x0a, 0x05,
	0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x75,
	0x73, 0x68, 0x50, 0x61, 0x74, 0x68, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x1a, 0x59, 0x0a, 0x0a, 0x52, 0x6f,
	0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x35, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x61, 0x74, 0x68,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x35, 0x0a, 0x1b, 0x50, 0x75, 0x73, 0x68, 0x50, 0x61, 0x74,
	0x68, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x69, 0x6e, 0x6e, 0x65, 0x64, 0x22, 0x42, 0x0a, 0x1a,
	0x50, 0x75, 0x6c, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x6f,
	0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x22, 0xc7, 0x01, 0x0a, 0x1b, 0x50, 0x75, 0x6c, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4d, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x37, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x64, 0x2e, 0x70,
	0x62, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x6f,
	0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x1a,
	0x59, 0x0a, 0x0a, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x35, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x64, 0x2e, 0x70, 0x62,
	0x2e, 0x50, 0x61, 0x74, 0x68, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xf4, 0x02, 0x0a, 0x0d, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1d, 0x0a, 0x0a,
	0x72, 0x65, 0x70, 0x5f, 0x66, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x72, 0x65, 0x70, 0x46, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x64,
	0x65, 0x61, 0x6c, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x64, 0x65, 0x61, 0x6c, 0x4d, 0x69, 0x6e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78, 0x63, 0x6c, 0x75,
	0x64, 0x65, 0x64, 0x5f, 0x6d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0e, 0x65, 0x78, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x73,
	0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x6d, 0x69, 0x6e, 0x65,
	0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x75, 0x73, 0x74, 0x65,
	0x64, 0x4d, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x05,
	0x72, 0x65, 0x6e, 0x65, 0x77, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x52, 0x05, 0x72, 0x65, 0x6e, 0x65,
	0x77, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x66, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x61, 0x6c,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x66, 0x61, 0x73, 0x74, 0x52, 0x65, 0x74, 0x72,
	0x69, 0x65, 0x76, 0x61, 0x6c, 0x12, 0x2a, 0x0a, 0x11, 0x64, 0x65, 0x61, 0x6c, 0x5f, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x5f, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0f, 0x64, 0x65, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x22, 0xac, 0x02, 0x0a, 0x07, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12,
	0x15, 0x0a, 0x06, 0x6a, 0x6f, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6a, 0x6f, 0x62, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x0e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x64, 0x2e, 0x70, 0x62,
	0x2e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0d,
	0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x62, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x61, 0x62, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x62, 0x6f, 0x72, 0x74,
	0x65, 0x64, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x62,
	0x6f, 0x72, 0x74, 0x65, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x61, 0x69, 0x6c,
	0x75, 0x72, 0x65, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x36, 0x0a, 0x09, 0x64, 0x65, 0x61, 0x6c,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65,
	0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x64, 0x65, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0xf1, 0x02, 0x0a, 0x08, 0x44, 0x65, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a,
	0x0c, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x5f, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x61, 0x6c, 0x43, 0x69, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x69,
	0x6e, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x69, 0x6e, 0x65, 0x72,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x69, 0x65, 0x63, 0x65, 0x5f, 0x63, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x69, 0x65, 0x63, 0x65, 0x43, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x65,
	0x70, 0x6f, 0x63, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x50, 0x65, 0x72, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x65, 0x61, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x64, 0x65, 0x61, 0x6c, 0x49, 0x64, 0x12,
	0x29, 0x0a, 0x10, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x70,
	0x6f, 0x63, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x46, 0x0a, 0x0c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52,
	0x65, 0x6e, 0x65, 0x77, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x22, 0x2f, 0x0a, 0x1b,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x65, 0x0a,
	0x1c, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a,
	0x0e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x22, 0x79, 0x0a, 0x1e, 0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x45, 0x0a, 0x0e, 0x61, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x64, 0x2e,
	0x70, 0x62, 0x2e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x0d, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22,
	0x21, 0x0a, 0x1f, 0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x69, 0x0a, 0x0e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x45, 0x0a, 0x0e, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x64, 0x2e, 0x70, 0x62,
	0x2e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d,
	0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x11, 0x0a,
	0x0f, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x23, 0x0a, 0x0f, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x7a, 0x0a, 0x10, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x07, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x32, 0x0a,
	0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x64, 0x2e, 0x70, 0x62,
	0x2e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x22, 0x27, 0x0a, 0x13, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x57, 0x61, 0x74, 0x63,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x28, 0x0a, 0x14, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x2a, 0x88, 0x01, 0x0a, 0x0e, 0x50, 0x61, 0x74, 0x68, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x1c, 0x50, 0x41, 0x54, 0x48, 0x5f,
	0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x50, 0x41, 0x54,
	0x48, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x52, 0x45,
	0x41, 0x44, 0x45, 0x52, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x50, 0x41, 0x54, 0x48, 0x5f, 0x41,
	0x43, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x57, 0x52, 0x49, 0x54, 0x45,
	0x52, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x41, 0x54, 0x48, 0x5f, 0x41, 0x43, 0x43, 0x45,
	0x53, 0x53, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x41, 0x44, 0x4d, 0x49, 0x4e, 0x10, 0x03, 0x2a,
	0xbc, 0x01, 0x0a, 0x0d, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1e, 0x0a, 0x1a, 0x41, 0x52, 0x43, 0x48, 0x49, 0x56, 0x45, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x52, 0x43, 0x48, 0x49, 0x56, 0x45, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x51, 0x55, 0x45, 0x55, 0x45, 0x44, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18,
	0x41, 0x52, 0x43, 0x48, 0x49, 0x56, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x45,
	0x58, 0x45, 0x43, 0x55, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x41, 0x52,
	0x43, 0x48, 0x49, 0x56, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49,
	0x4c, 0x45, 0x44, 0x10, 0x03, 0x12, 0x1b, 0x0a, 0x17, 0x41, 0x52, 0x43, 0x48, 0x49, 0x56, 0x45,
	0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x45, 0x44,
	0x10, 0x04, 0x12, 0x1a, 0x0a, 0x16, 0x41, 0x52, 0x43, 0x48, 0x49, 0x56, 0x45, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x05, 0x32, 0xc9,
	0x0d, 0x0a, 0x0a, 0x41, 0x50, 0x49, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x45, 0x0a,
	0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1e,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x64, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x64, 0x2e, 0x70, 0x62,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x45, 0x0a, 0x04, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x1c, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x6f, 0x6f, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x6f, 0x6f, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x05, 0x4c, 0x69, 0x6e, 0x6b,
	0x73, 0x12, 0x1d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x64,
	0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x64, 0x2e,
	0x70, 0x62, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x51, 0x0a, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x20,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x64, 0x2e, 0x70, 0x62,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x64, 0x2e,
	0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5d, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x70, 0x66,
	0x73, 0x50, 0x61, 0x74, 0x68, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x70, 0x66, 0x73,
	0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x70, 0x66, 0x73, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x08, 0x50, 0x75, 0x73, 0x68, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x64, 0x2e,
	0x70, 0x62, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x64, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x28, 0x01, 0x30, 0x01, 0x12, 0x53, 0x0a, 0x08, 0x50,
	0x75, 0x6c, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x50, 0x61,
	0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x75, 0x6c, 0x6c,
	0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01,
	0x12, 0x5f, 0x0a, 0x0c, 0x50, 0x75, 0x6c, 0x6c, 0x49, 0x70, 0x66, 0x73, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x64, 0x2e,
	0x70, 0x62, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x49, 0x70, 0x66, 0x73, 0x50, 0x61, 0x74, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x73, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x49, 0x70, 0x66,
	0x73, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30,
	0x01, 0x12, 0x4e, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1f, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x65, 0x74, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x64, 0x2e, 0x70, 0x62, 0x2e,
	0x53, 0x65, 0x74, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x4b, 0x0a, 0x06, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x12, 0x1e, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57,
	0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x22, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x64, 0x2e,
	0x70, 0x62, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x50, 0x61, 0x74, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x72, 0x0a, 0x13, 0x50, 0x75, 0x73, 0x68, 0x50,
	0x61, 0x74, 0x68, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x2b,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x64, 0x2e, 0x70, 0x62,
	0x2e, 0x50, 0x75, 0x73, 0x68, 0x50, 0x61, 0x74, 0x68, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52,
	0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x75,
	0x73, 0x68, 0x50, 0x61, 0x74, 0x68, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x72, 0x0a, 0x13, 0x50,
	0x75, 0x6c, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x52, 0x6f, 0x6c,
	0x65, 0x73, 0x12, 0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x64, 0x2e, 0x70, 0x62, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x64, 0x2e, 0x70,
	0x62, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x52, 0x6f, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x75, 0x0a, 0x14, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7e, 0x0a, 0x17, 0x53, 0x65, 0x74, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x2f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x64,
	0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x30, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x64, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x07, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x12, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x64,
	0x2e, 0x70, 0x62, 0x2e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x64, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x08, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x73, 0x12, 0x20, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x64, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5f, 0x0a, 0x0c, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x76, 0x65, 0x57, 0x61, 0x74, 0x63, 0x68, 0x12, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x64, 0x2e, 0x70, 0x62, 0x2e, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x64, 0x2e, 0x70,
	0x62, 0x2e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x57, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x69, 0x6c, 0x65,
	0x69, 0x6f, 0x2f, 0x74, 0x65, 0x78, 0x74, 0x69, 0x6c, 0x65, 0x2f, 0x76, 0x32, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x64, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_bucketsd_pb_bucketsd_proto_rawDescOnce sync.Once
	file_api_bucketsd_pb_bucketsd_proto_rawDescData = file_api_bucketsd_pb_bucketsd_proto_rawDesc
)

func file_api_bucketsd_pb_bucketsd_proto_rawDescGZIP() []byte {
	file_api_bucketsd_pb_bucketsd_proto_rawDescOnce.Do(func() {
		file_api_bucketsd_pb_bucketsd_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_bucketsd_pb_bucketsd_proto_rawDescData)
	})
	return file_api_bucketsd_pb_bucketsd_proto_rawDescData
}

var file_api_bucketsd_pb_bucketsd_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_bucketsd_pb_bucketsd_proto_msgTypes = make([]protoimpl.MessageInfo, 52)
var file_api_bucketsd_pb_bucketsd_proto_goTypes = []interface{}{
	(PathAccessRole)(0),                     // 0: api.bucketsd.pb.PathAccessRole
	(ArchiveStatus)(0),                      // 1: api.bucketsd.pb.ArchiveStatus
	(*Metadata)(nil),                        // 2: api.bucketsd.pb.Metadata
	(*Root)(nil),                            // 3: api.bucketsd.pb.Root
	(*ListRequest)(nil),                     // 4: api.bucketsd.pb.ListRequest
	(*ListResponse)(nil),                    // 5: api.bucketsd.pb.ListResponse
	(*CreateRequest)(nil),                   // 6: api.bucketsd.pb.CreateRequest
	(*CreateResponse)(nil),                  // 7: api.bucketsd.pb.CreateResponse
	(*RootRequest)(nil),                     // 8: api.bucketsd.pb.RootRequest
	(*RootResponse)(nil),                    // 9: api.bucketsd.pb.RootResponse
	(*LinksRequest)(nil),                    // 10: api.bucketsd.pb.LinksRequest
	(*LinksResponse)(nil),                   // 11: api.bucketsd.pb.LinksResponse
	(*ListPathRequest)(nil),                 // 12: api.bucketsd.pb.ListPathRequest
	(*ListPathResponse)(nil),                // 13: api.bucketsd.pb.ListPathResponse
	(*PathItem)(nil),                        // 14: api.bucketsd.pb.PathItem
	(*ListIpfsPathRequest)(nil),             // 15: api.bucketsd.pb.ListIpfsPathRequest
	(*ListIpfsPathResponse)(nil),            // 16: api.bucketsd.pb.ListIpfsPathResponse
	(*PushPathRequest)(nil),                 // 17: api.bucketsd.pb.PushPathRequest
	(*PushPathResponse)(nil),                // 18: api.bucketsd.pb.PushPathResponse
	(*PullPathRequest)(nil),                 // 19: api.bucketsd.pb.PullPathRequest
	(*PullPathResponse)(nil),                // 20: api.bucketsd.pb.PullPathResponse
	(*PullIpfsPathRequest)(nil),             // 21: api.bucketsd.pb.PullIpfsPathRequest
	(*PullIpfsPathResponse)(nil),            // 22: api.bucketsd.pb.PullIpfsPathResponse
	(*SetPathRequest)(nil),                  // 23: api.bucketsd.pb.SetPathRequest
	(*SetPathResponse)(nil),                 // 24: api.bucketsd.pb.SetPathResponse
	(*RemoveRequest)(nil),                   // 25: api.bucketsd.pb.RemoveRequest
	(*RemoveResponse)(nil),                  // 26: api.bucketsd.pb.RemoveResponse
	(*RemovePathRequest)(nil),               // 27: api.bucketsd.pb.RemovePathRequest
	(*RemovePathResponse)(nil),              // 28: api.bucketsd.pb.RemovePathResponse
	(*PushPathAccessRolesRequest)(nil),      // 29: api.bucketsd.pb.PushPathAccessRolesRequest
	(*PushPathAccessRolesResponse)(nil),     // 30: api.bucketsd.pb.PushPathAccessRolesResponse
	(*PullPathAccessRolesRequest)(nil),      // 31: api.bucketsd.pb.PullPathAccessRolesRequest
	(*PullPathAccessRolesResponse)(nil),     // 32: api.bucketsd.pb.PullPathAccessRolesResponse
	(*ArchiveConfig)(nil),                   // 33: api.bucketsd.pb.ArchiveConfig
	(*Archive)(nil),                         // 34: api.bucketsd.pb.Archive
	(*DealInfo)(nil),                        // 35: api.bucketsd.pb.DealInfo
	(*ArchiveRenew)(nil),                    // 36: api.bucketsd.pb.ArchiveRenew
	(*DefaultArchiveConfigRequest)(nil),     // 37: api.bucketsd.pb.DefaultArchiveConfigRequest
	(*DefaultArchiveConfigResponse)(nil),    // 38: api.bucketsd.pb.DefaultArchiveConfigResponse
	(*SetDefaultArchiveConfigRequest)(nil),  // 39: api.bucketsd.pb.SetDefaultArchiveConfigRequest
	(*SetDefaultArchiveConfigResponse)(nil), // 40: api.bucketsd.pb.SetDefaultArchiveConfigResponse
	(*ArchiveRequest)(nil),                  // 41: api.bucketsd.pb.ArchiveRequest
	(*ArchiveResponse)(nil),                 // 42: api.bucketsd.pb.ArchiveResponse
	(*ArchivesRequest)(nil),                 // 43: api.bucketsd.pb.ArchivesRequest
	(*ArchivesResponse)(nil),                // 44: api.bucketsd.pb.ArchivesResponse
	(*ArchiveWatchRequest)(nil),             // 45: api.bucketsd.pb.ArchiveWatchRequest
	(*ArchiveWatchResponse)(nil),            // 46: api.bucketsd.pb.ArchiveWatchResponse
	nil,                                     // 47: api.bucketsd.pb.Metadata.RolesEntry
	(*PushPathRequest_Header)(nil),          // 48: api.bucketsd.pb.PushPathRequest.Header
	(*PushPathRequest_Chunk)(nil),           // 49: api.bucketsd.pb.PushPathRequest.Chunk
	(*PushPathRequest_Footer)(nil),          // 50: api.bucketsd.pb.PushPathRequest.Footer
	(*PushPathResponse_Event)(nil),          // 51: api.bucketsd.pb.PushPathResponse.Event
	nil,                                     // 52: api.bucketsd.pb.PushPathAccessRolesRequest.RolesEntry
	nil,                                     // 53: api.bucketsd.pb.PullPathAccessRolesResponse.RolesEntry
}
var file_api_bucketsd_pb_bucketsd_proto_depIdxs = []int32{
	47, // 0: api.bucketsd.pb.Metadata.roles:type_name -> api.bucketsd.pb.Metadata.RolesEntry
	2,  // 1: api.bucketsd.pb.Root.metadata:type_name -> api.bucketsd.pb.Metadata
	3,  // 2: api.bucketsd.pb.ListResponse.roots:type_name -> api.bucketsd.pb.Root
	3,  // 3: api.bucketsd.pb.CreateResponse.root:type_name -> api.bucketsd.pb.Root
	11, // 4: api.bucketsd.pb.CreateResponse.links:type_name -> api.bucketsd.pb.LinksResponse
	3,  // 5: api.bucketsd.pb.RootResponse.root:type_name -> api.bucketsd.pb.Root
	14, // 6: api.bucketsd.pb.ListPathResponse.item:type_name -> api.bucketsd.pb.PathItem
	3,  // 7: api.bucketsd.pb.ListPathResponse.root:type_name -> api.bucketsd.pb.Root
	14, // 8: api.bucketsd.pb.PathItem.items:type_name -> api.bucketsd.pb.PathItem
	2,  // 9: api.bucketsd.pb.PathItem.metadata:type_name -> api.bucketsd.pb.Metadata
	14, // 10: api.bucketsd.pb.ListIpfsPathResponse.item:type_name -> api.bucketsd.pb.PathItem
	48, // 11: api.bucketsd.pb.PushPathRequest.header:type_name -> api.bucketsd.pb.PushPathRequest.Header
	49, // 12: api.bucketsd.pb.PushPathRequest.chunk:type_name -> api.bucketsd.pb.PushPathRequest.Chunk
	50, // 13: api.bucketsd.pb.PushPathRequest.footer:type_name -> api.bucketsd.pb.PushPathRequest.Footer
	51, // 14: api.bucketsd.pb.PushPathResponse.event:type_name -> api.bucketsd.pb.PushPathResponse.Event
	3,  // 15: api.bucketsd.pb.RemovePathResponse.root:type_name -> api.bucketsd.pb.Root
	52, // 16: api.bucketsd.pb.PushPathAccessRolesRequest.roles:type_name -> api.bucketsd.pb.PushPathAccessRolesRequest.RolesEntry
	53, // 17: api.bucketsd.pb.PullPathAccessRolesResponse.roles:type_name -> api.bucketsd.pb.PullPathAccessRolesResponse.RolesEntry
	36, // 18: api.bucketsd.pb.ArchiveConfig.renew:type_name -> api.bucketsd.pb.ArchiveRenew
	1,  // 19: api.bucketsd.pb.Archive.archive_status:type_name -> api.bucketsd.pb.ArchiveStatus
	35, // 20: api.bucketsd.pb.Archive.deal_info:type_name -> api.bucketsd.pb.DealInfo
	33, // 21: api.bucketsd.pb.DefaultArchiveConfigResponse.archive_config:type_name -> api.bucketsd.pb.ArchiveConfig
	33, // 22: api.bucketsd.pb.SetDefaultArchiveConfigRequest.archive_config:type_name -> api.bucketsd.pb.ArchiveConfig
	33, // 23: api.bucketsd.pb.ArchiveRequest.archive_config:type_name -> api.bucketsd.pb.ArchiveConfig
	34, // 24: api.bucketsd.pb.ArchivesResponse.current:type_name -> api.bucketsd.pb.Archive
	34, // 25: api.bucketsd.pb.ArchivesResponse.history:type_name -> api.bucketsd.pb.Archive
	0,  // 26: api.bucketsd.pb.Metadata.RolesEntry.value:type_name -> api.bucketsd.pb.PathAccessRole
	3,  // 27: api.bucketsd.pb.PushPathResponse.Event.root:type_name -> api.bucketsd.pb.Root
	0,  // 28: api.bucketsd.pb.PushPathAccessRolesRequest.RolesEntry.value:type_name -> api.bucketsd.pb.PathAccessRole
	0,  // 29: api.bucketsd.pb.PullPathAccessRolesResponse.RolesEntry.value:type_name -> api.bucketsd.pb.PathAccessRole
	4,  // 30: api.bucketsd.pb.APIService.List:input_type -> api.bucketsd.pb.ListRequest
	6,  // 31: api.bucketsd.pb.APIService.Create:input_type -> api.bucketsd.pb.CreateRequest
	8,  // 32: api.bucketsd.pb.APIService.Root:input_type -> api.bucketsd.pb.RootRequest
	10, // 33: api.bucketsd.pb.APIService.Links:input_type -> api.bucketsd.pb.LinksRequest
	12, // 34: api.bucketsd.pb.APIService.ListPath:input_type -> api.bucketsd.pb.ListPathRequest
	15, // 35: api.bucketsd.pb.APIService.ListIpfsPath:input_type -> api.bucketsd.pb.ListIpfsPathRequest
	17, // 36: api.bucketsd.pb.APIService.PushPath:input_type -> api.bucketsd.pb.PushPathRequest
	19, // 37: api.bucketsd.pb.APIService.PullPath:input_type -> api.bucketsd.pb.PullPathRequest
	21, // 38: api.bucketsd.pb.APIService.PullIpfsPath:input_type -> api.bucketsd.pb.PullIpfsPathRequest
	23, // 39: api.bucketsd.pb.APIService.SetPath:input_type -> api.bucketsd.pb.SetPathRequest
	25, // 40: api.bucketsd.pb.APIService.Remove:input_type -> api.bucketsd.pb.RemoveRequest
	27, // 41: api.bucketsd.pb.APIService.RemovePath:input_type -> api.bucketsd.pb.RemovePathRequest
	29, // 42: api.bucketsd.pb.APIService.PushPathAccessRoles:input_type -> api.bucketsd.pb.PushPathAccessRolesRequest
	31, // 43: api.bucketsd.pb.APIService.PullPathAccessRoles:input_type -> api.bucketsd.pb.PullPathAccessRolesRequest
	37, // 44: api.bucketsd.pb.APIService.DefaultArchiveConfig:input_type -> api.bucketsd.pb.DefaultArchiveConfigRequest
	39, // 45: api.bucketsd.pb.APIService.SetDefaultArchiveConfig:input_type -> api.bucketsd.pb.SetDefaultArchiveConfigRequest
	41, // 46: api.bucketsd.pb.APIService.Archive:input_type -> api.bucketsd.pb.ArchiveRequest
	43, // 47: api.bucketsd.pb.APIService.Archives:input_type -> api.bucketsd.pb.ArchivesRequest
	45, // 48: api.bucketsd.pb.APIService.ArchiveWatch:input_type -> api.bucketsd.pb.ArchiveWatchRequest
	5,  // 49: api.bucketsd.pb.APIService.List:output_type -> api.bucketsd.pb.ListResponse
	7,  // 50: api.bucketsd.pb.APIService.Create:output_type -> api.bucketsd.pb.CreateResponse
	9,  // 51: api.bucketsd.pb.APIService.Root:output_type -> api.bucketsd.pb.RootResponse
	11, // 52: api.bucketsd.pb.APIService.Links:output_type -> api.bucketsd.pb.LinksResponse
	13, // 53: api.bucketsd.pb.APIService.ListPath:output_type -> api.bucketsd.pb.ListPathResponse
	16, // 54: api.bucketsd.pb.APIService.ListIpfsPath:output_type -> api.bucketsd.pb.ListIpfsPathResponse
	18, // 55: api.bucketsd.pb.APIService.PushPath:output_type -> api.bucketsd.pb.PushPathResponse
	20, // 56: api.bucketsd.pb.APIService.PullPath:output_type -> api.bucketsd.pb.PullPathResponse
	22, // 57: api.bucketsd.pb.APIService.PullIpfsPath:output_type -> api.bucketsd.pb.PullIpfsPathResponse
	24, // 58: api.bucketsd.pb.APIService.SetPath:output_type -> api.bucketsd.pb.SetPathResponse
	26, // 59: api.bucketsd.pb.APIService.Remove:output_type -> api.bucketsd.pb.RemoveResponse
	28, // 60: api.bucketsd.pb.APIService.RemovePath:output_type -> api.bucketsd.pb.RemovePathResponse
	30, // 61: api.bucketsd.pb.APIService.PushPathAccessRoles:output_type -> api.bucketsd.pb.PushPathAccessRolesResponse
	32, // 62: api.bucketsd.pb.APIService.PullPathAccessRoles:output_type -> api.bucketsd.pb.PullPathAccessRolesResponse
	38, // 63: api.bucketsd.pb.APIService.DefaultArchiveConfig:output_type -> api.bucketsd.pb.DefaultArchiveConfigResponse
	40, // 64: api.bucketsd.pb.APIService.SetDefaultArchiveConfig:output_type -> api.bucketsd.pb.SetDefaultArchiveConfigResponse
	42, // 65: api.bucketsd.pb.APIService.Archive:output_type -> api.bucketsd.pb.ArchiveResponse
	44, // 66: api.bucketsd.pb.APIService.Archives:output_type -> api.bucketsd.pb.ArchivesResponse
	46, // 67: api.bucketsd.pb.APIService.ArchiveWatch:output_type -> api.bucketsd.pb.ArchiveWatchResponse
	49, // [49:68] is the sub-list for method output_type
	30, // [30:49] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_api_bucketsd_pb_bucketsd_proto_init() }
func file_api_bucketsd_pb_bucketsd_proto_init() {
	if File_api_bucketsd_pb_bucketsd_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Root); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RootRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RootResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LinksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPathRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPathResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PathItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListIpfsPathRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListIpfsPathResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushPathRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushPathResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullPathRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullPathResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullIpfsPathRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullIpfsPathResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPathRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPathResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemovePathRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemovePathResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushPathAccessRolesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushPathAccessRolesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullPathAccessRolesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullPathAccessRolesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArchiveConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Archive); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DealInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArchiveRenew); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DefaultArchiveConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DefaultArchiveConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDefaultArchiveConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetDefaultArchiveConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArchiveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArchiveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArchivesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArchivesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArchiveWatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArchiveWatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushPathRequest_Header); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushPathRequest_Chunk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushPathRequest_Footer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_bucketsd_pb_bucketsd_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushPathResponse_Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_bucketsd_pb_bucketsd_proto_msgTypes[15].OneofWrappers = []interface{}{
		(*PushPathRequest_Header_)(nil),
		(*PushPathRequest_Chunk_)(nil),
		(*PushPathRequest_Footer_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_bucketsd_pb_bucketsd_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   52,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_bucketsd_pb_bucketsd_proto_goTypes,
		DependencyIndexes: file_api_bucketsd_pb_bucketsd_proto_depIdxs,
		EnumInfos:         file_api_bucketsd_pb_bucketsd_proto_enumTypes,
		MessageInfos:      file_api_bucketsd_pb_bucketsd_proto_msgTypes,
	}.Build()
	File_api_bucketsd_pb_bucketsd_proto = out.File
	file_api_bucketsd_pb_bucketsd_proto_rawDesc = nil
	file_api_bucketsd_pb_bucketsd_proto_goTypes = nil
	file_api_bucketsd_pb_bucketsd_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// APIServiceClient is the client API for APIService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type APIServiceClient interface {
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error)
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error)
	Root(ctx context.Context, in *RootRequest, opts ...grpc.CallOption) (*RootResponse, error)
	Links(ctx context.Context, in *LinksRequest, opts ...grpc.CallOption) (*LinksResponse, error)
	ListPath(ctx context.Context, in *ListPathRequest, opts ...grpc.CallOption) (*ListPathResponse, error)
	ListIpfsPath(ctx context.Context, in *ListIpfsPathRequest, opts ...grpc.CallOption) (*ListIpfsPathResponse, error)
	PushPath(ctx context.Context, opts ...grpc.CallOption) (APIService_PushPathClient, error)
	PullPath(ctx context.Context, in *PullPathRequest, opts ...grpc.CallOption) (APIService_PullPathClient, error)
	PullIpfsPath(ctx context.Context, in *PullIpfsPathRequest, opts ...grpc.CallOption) (APIService_PullIpfsPathClient, error)
	SetPath(ctx context.Context, in *SetPathRequest, opts ...grpc.CallOption) (*SetPathResponse, error)
	Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*RemoveResponse, error)
	RemovePath(ctx context.Context, in *RemovePathRequest, opts ...grpc.CallOption) (*RemovePathResponse, error)
	PushPathAccessRoles(ctx context.Context, in *PushPathAccessRolesRequest, opts ...grpc.CallOption) (*PushPathAccessRolesResponse, error)
	PullPathAccessRoles(ctx context.Context, in *PullPathAccessRolesRequest, opts ...grpc.CallOption) (*PullPathAccessRolesResponse, error)
	// Archive
	DefaultArchiveConfig(ctx context.Context, in *DefaultArchiveConfigRequest, opts ...grpc.CallOption) (*DefaultArchiveConfigResponse, error)
	SetDefaultArchiveConfig(ctx context.Context, in *SetDefaultArchiveConfigRequest, opts ...grpc.CallOption) (*SetDefaultArchiveConfigResponse, error)
	Archive(ctx context.Context, in *ArchiveRequest, opts ...grpc.CallOption) (*ArchiveResponse, error)
	Archives(ctx context.Context, in *ArchivesRequest, opts ...grpc.CallOption) (*ArchivesResponse, error)
	ArchiveWatch(ctx context.Context, in *ArchiveWatchRequest, opts ...grpc.CallOption) (APIService_ArchiveWatchClient, error)
}

type aPIServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewAPIServiceClient(cc grpc.ClientConnInterface) APIServiceClient {
	return &aPIServiceClient{cc}
}

func (c *aPIServiceClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := c.cc.Invoke(ctx, "/api.bucketsd.pb.APIService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIServiceClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*CreateResponse, error) {
	out := new(CreateResponse)
	err := c.cc.Invoke(ctx, "/api.bucketsd.pb.APIService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIServiceClient) Root(ctx context.Context, in *RootRequest, opts ...grpc.CallOption) (*RootResponse, error) {
	out := new(RootResponse)
	err := c.cc.Invoke(ctx, "/api.bucketsd.pb.APIService/Root", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIServiceClient) Links(ctx context.Context, in *LinksRequest, opts ...grpc.CallOption) (*LinksResponse, error) {
	out := new(LinksResponse)
	err := c.cc.Invoke(ctx, "/api.bucketsd.pb.APIService/Links", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIServiceClient) ListPath(ctx context.Context, in *ListPathRequest, opts ...grpc.CallOption) (*ListPathResponse, error) {
	out := new(ListPathResponse)
	err := c.cc.Invoke(ctx, "/api.bucketsd.pb.APIService/ListPath", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIServiceClient) ListIpfsPath(ctx context.Context, in *ListIpfsPathRequest, opts ...grpc.CallOption) (*ListIpfsPathResponse, error) {
	out := new(ListIpfsPathResponse)
	err := c.cc.Invoke(ctx, "/api.bucketsd.pb.APIService/ListIpfsPath", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIServiceClient) PushPath(ctx context.Context, opts ...grpc.CallOption) (APIService_PushPathClient, error) {
	stream, err := c.cc.NewStream(ctx, &_APIService_serviceDesc.Streams[0], "/api.bucketsd.pb.APIService/PushPath", opts...)
	if err != nil {
		return nil, err
	}
	x := &aPIServicePushPathClient{stream}
	return x, nil
}

type APIService_PushPathClient interface {
	Send(*PushPathRequest) error
	Recv() (*PushPathResponse, error)
	grpc.ClientStream
}

type aPIServicePushPathClient struct {
	grpc.ClientStream
}

func (x *aPIServicePushPathClient) Send(m *PushPathRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *aPIServicePushPathClient) Recv() (*PushPathResponse, error) {
	m := new(PushPathResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *aPIServiceClient) PullPath(ctx context.Context, in *PullPathRequest, opts ...grpc.CallOption) (APIService_PullPathClient, error) {
	stream, err := c.cc.NewStream(ctx, &_APIService_serviceDesc.Streams[1], "/api.bucketsd.pb.APIService/PullPath", opts...)
	if err != nil {
		return nil, err
	}
	x := &aPIServicePullPathClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type APIService_PullPathClient interface {
	Recv() (*PullPathResponse, error)
	grpc.ClientStream
}

type aPIServicePullPathClient struct {
	grpc.ClientStream
}

func (x *aPIServicePullPathClient) Recv() (*PullPathResponse, error) {
	m := new(PullPathResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *aPIServiceClient) PullIpfsPath(ctx context.Context, in *PullIpfsPathRequest, opts ...grpc.CallOption) (APIService_PullIpfsPathClient, error) {
	stream, err := c.cc.NewStream(ctx, &_APIService_serviceDesc.Streams[2], "/api.bucketsd.pb.APIService/PullIpfsPath", opts...)
	if err != nil {
		return nil, err
	}
	x := &aPIServicePullIpfsPathClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type APIService_PullIpfsPathClient interface {
	Recv() (*PullIpfsPathResponse, error)
	grpc.ClientStream
}

type aPIServicePullIpfsPathClient struct {
	grpc.ClientStream
}

func (x *aPIServicePullIpfsPathClient) Recv() (*PullIpfsPathResponse, error) {
	m := new(PullIpfsPathResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *aPIServiceClient) SetPath(ctx context.Context, in *SetPathRequest, opts ...grpc.CallOption) (*SetPathResponse, error) {
	out := new(SetPathResponse)
	err := c.cc.Invoke(ctx, "/api.bucketsd.pb.APIService/SetPath", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIServiceClient) Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*RemoveResponse, error) {
	out := new(RemoveResponse)
	err := c.cc.Invoke(ctx, "/api.bucketsd.pb.APIService/Remove", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIServiceClient) RemovePath(ctx context.Context, in *RemovePathRequest, opts ...grpc.CallOption) (*RemovePathResponse, error) {
	out := new(RemovePathResponse)
	err := c.cc.Invoke(ctx, "/api.bucketsd.pb.APIService/RemovePath", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIServiceClient) PushPathAccessRoles(ctx context.Context, in *PushPathAccessRolesRequest, opts ...grpc.CallOption) (*PushPathAccessRolesResponse, error) {
	out := new(PushPathAccessRolesResponse)
	err := c.cc.Invoke(ctx, "/api.bucketsd.pb.APIService/PushPathAccessRoles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIServiceClient) PullPathAccessRoles(ctx context.Context, in *PullPathAccessRolesRequest, opts ...grpc.CallOption) (*PullPathAccessRolesResponse, error) {
	out := new(PullPathAccessRolesResponse)
	err := c.cc.Invoke(ctx, "/api.bucketsd.pb.APIService/PullPathAccessRoles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIServiceClient) DefaultArchiveConfig(ctx context.Context, in *DefaultArchiveConfigRequest, opts ...grpc.CallOption) (*DefaultArchiveConfigResponse, error) {
	out := new(DefaultArchiveConfigResponse)
	err := c.cc.Invoke(ctx, "/api.bucketsd.pb.APIService/DefaultArchiveConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIServiceClient) SetDefaultArchiveConfig(ctx context.Context, in *SetDefaultArchiveConfigRequest, opts ...grpc.CallOption) (*SetDefaultArchiveConfigResponse, error) {
	out := new(SetDefaultArchiveConfigResponse)
	err := c.cc.Invoke(ctx, "/api.bucketsd.pb.APIService/SetDefaultArchiveConfig", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIServiceClient) Archive(ctx context.Context, in *ArchiveRequest, opts ...grpc.CallOption) (*ArchiveResponse, error) {
	out := new(ArchiveResponse)
	err := c.cc.Invoke(ctx, "/api.bucketsd.pb.APIService/Archive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIServiceClient) Archives(ctx context.Context, in *ArchivesRequest, opts ...grpc.CallOption) (*ArchivesResponse, error) {
	out := new(ArchivesResponse)
	err := c.cc.Invoke(ctx, "/api.bucketsd.pb.APIService/Archives", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *aPIServiceClient) ArchiveWatch(ctx context.Context, in *ArchiveWatchRequest, opts ...grpc.CallOption) (APIService_ArchiveWatchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_APIService_serviceDesc.Streams[3], "/api.bucketsd.pb.APIService/ArchiveWatch", opts...)
	if err != nil {
		return nil, err
	}
	x := &aPIServiceArchiveWatchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type APIService_ArchiveWatchClient interface {
	Recv() (*ArchiveWatchResponse, error)
	grpc.ClientStream
}

type aPIServiceArchiveWatchClient struct {
	grpc.ClientStream
}

func (x *aPIServiceArchiveWatchClient) Recv() (*ArchiveWatchResponse, error) {
	m := new(ArchiveWatchResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// APIServiceServer is the server API for APIService service.
type APIServiceServer interface {
	List(context.Context, *ListRequest) (*ListResponse, error)
	Create(context.Context, *CreateRequest) (*CreateResponse, error)
	Root(context.Context, *RootRequest) (*RootResponse, error)
	Links(context.Context, *LinksRequest) (*LinksResponse, error)
	ListPath(context.Context, *ListPathRequest) (*ListPathResponse, error)
	ListIpfsPath(context.Context, *ListIpfsPathRequest) (*ListIpfsPathResponse, error)
	PushPath(APIService_PushPathServer) error
	PullPath(*PullPathRequest, APIService_PullPathServer) error
	PullIpfsPath(*PullIpfsPathRequest, APIService_PullIpfsPathServer) error
	SetPath(context.Context, *SetPathRequest) (*SetPathResponse, error)
	Remove(context.Context, *RemoveRequest) (*RemoveResponse, error)
	RemovePath(context.Context, *RemovePathRequest) (*RemovePathResponse, error)
	PushPathAccessRoles(context.Context, *PushPathAccessRolesRequest) (*PushPathAccessRolesResponse, error)
	PullPathAccessRoles(context.Context, *PullPathAccessRolesRequest) (*PullPathAccessRolesResponse, error)
	// Archive
	DefaultArchiveConfig(context.Context, *DefaultArchiveConfigRequest) (*DefaultArchiveConfigResponse, error)
	SetDefaultArchiveConfig(context.Context, *SetDefaultArchiveConfigRequest) (*SetDefaultArchiveConfigResponse, error)
	Archive(context.Context, *ArchiveRequest) (*ArchiveResponse, error)
	Archives(context.Context, *ArchivesRequest) (*ArchivesResponse, error)
	ArchiveWatch(*ArchiveWatchRequest, APIService_ArchiveWatchServer) error
}

// UnimplementedAPIServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAPIServiceServer struct {
}

func (*UnimplementedAPIServiceServer) List(context.Context, *ListRequest) (*ListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedAPIServiceServer) Create(context.Context, *CreateRequest) (*CreateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedAPIServiceServer) Root(context.Context, *RootRequest) (*RootResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Root not implemented")
}
func (*UnimplementedAPIServiceServer) Links(context.Context, *LinksRequest) (*LinksResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Links not implemented")
}
func (*UnimplementedAPIServiceServer) ListPath(context.Context, *ListPathRequest) (*ListPathResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPath not implemented")
}
func (*UnimplementedAPIServiceServer) ListIpfsPath(context.Context, *ListIpfsPathRequest) (*ListIpfsPathResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListIpfsPath not implemented")
}
func (*UnimplementedAPIServiceServer) PushPath(APIService_PushPathServer) error {
	return status.Errorf(codes.Unimplemented, "method PushPath not implemented")
}
func (*UnimplementedAPIServiceServer) PullPath(*PullPathRequest, APIService_PullPathServer) error {
	return status.Errorf(codes.Unimplemented, "method PullPath not implemented")
}
func (*UnimplementedAPIServiceServer) PullIpfsPath(*PullIpfsPathRequest, APIService_PullIpfsPathServer) error {
	return status.Errorf(codes.Unimplemented, "method PullIpfsPath not implemented")
}
func (*UnimplementedAPIServiceServer) SetPath(context.Context, *SetPathRequest) (*SetPathResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetPath not implemented")
}
func (*UnimplementedAPIServiceServer) Remove(context.Context, *RemoveRequest) (*RemoveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Remove not implemented")
}
func (*UnimplementedAPIServiceServer) RemovePath(context.Context, *RemovePathRequest) (*RemovePathResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemovePath not implemented")
}
func (*UnimplementedAPIServiceServer) PushPathAccessRoles(context.Context, *PushPathAccessRolesRequest) (*PushPathAccessRolesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PushPathAccessRoles not implemented")
}
func (*UnimplementedAPIServiceServer) PullPathAccessRoles(context.Context, *PullPathAccessRolesRequest) (*PullPathAccessRolesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PullPathAccessRoles not implemented")
}
func (*UnimplementedAPIServiceServer) DefaultArchiveConfig(context.Context, *DefaultArchiveConfigRequest) (*DefaultArchiveConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DefaultArchiveConfig not implemented")
}
func (*UnimplementedAPIServiceServer) SetDefaultArchiveConfig(context.Context, *SetDefaultArchiveConfigRequest) (*SetDefaultArchiveConfigResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetDefaultArchiveConfig not implemented")
}
func (*UnimplementedAPIServiceServer) Archive(context.Context, *ArchiveRequest) (*ArchiveResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Archive not implemented")
}
func (*UnimplementedAPIServiceServer) Archives(context.Context, *ArchivesRequest) (*ArchivesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Archives not implemented")
}
func (*UnimplementedAPIServiceServer) ArchiveWatch(*ArchiveWatchRequest, APIService_ArchiveWatchServer) error {
	return status.Errorf(codes.Unimplemented, "method ArchiveWatch not implemented")
}

func RegisterAPIServiceServer(s *grpc.Server, srv APIServiceServer) {
	s.RegisterService(&_APIService_serviceDesc, srv)
}

func _APIService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.bucketsd.pb.APIService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServiceServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.bucketsd.pb.APIService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServiceServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIService_Root_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RootRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServiceServer).Root(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.bucketsd.pb.APIService/Root",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServiceServer).Root(ctx, req.(*RootRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIService_Links_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LinksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServiceServer).Links(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.bucketsd.pb.APIService/Links",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServiceServer).Links(ctx, req.(*LinksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIService_ListPath_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListPathRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServiceServer).ListPath(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.bucketsd.pb.APIService/ListPath",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServiceServer).ListPath(ctx, req.(*ListPathRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIService_ListIpfsPath_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListIpfsPathRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServiceServer).ListIpfsPath(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.bucketsd.pb.APIService/ListIpfsPath",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServiceServer).ListIpfsPath(ctx, req.(*ListIpfsPathRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIService_PushPath_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(APIServiceServer).PushPath(&aPIServicePushPathServer{stream})
}

type APIService_PushPathServer interface {
	Send(*PushPathResponse) error
	Recv() (*PushPathRequest, error)
	grpc.ServerStream
}

type aPIServicePushPathServer struct {
	grpc.ServerStream
}

func (x *aPIServicePushPathServer) Send(m *PushPathResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *aPIServicePushPathServer) Recv() (*PushPathRequest, error) {
	m := new(PushPathRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _APIService_PullPath_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PullPathRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(APIServiceServer).PullPath(m, &aPIServicePullPathServer{stream})
}

type APIService_PullPathServer interface {
	Send(*PullPathResponse) error
	grpc.ServerStream
}

type aPIServicePullPathServer struct {
	grpc.ServerStream
}

func (x *aPIServicePullPathServer) Send(m *PullPathResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _APIService_PullIpfsPath_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(PullIpfsPathRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(APIServiceServer).PullIpfsPath(m, &aPIServicePullIpfsPathServer{stream})
}

type APIService_PullIpfsPathServer interface {
	Send(*PullIpfsPathResponse) error
	grpc.ServerStream
}

type aPIServicePullIpfsPathServer struct {
	grpc.ServerStream
}

func (x *aPIServicePullIpfsPathServer) Send(m *PullIpfsPathResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _APIService_SetPath_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetPathRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServiceServer).SetPath(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.bucketsd.pb.APIService/SetPath",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServiceServer).SetPath(ctx, req.(*SetPathRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIService_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServiceServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.bucketsd.pb.APIService/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServiceServer).Remove(ctx, req.(*RemoveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIService_RemovePath_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemovePathRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServiceServer).RemovePath(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.bucketsd.pb.APIService/RemovePath",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServiceServer).RemovePath(ctx, req.(*RemovePathRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIService_PushPathAccessRoles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushPathAccessRolesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServiceServer).PushPathAccessRoles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.bucketsd.pb.APIService/PushPathAccessRoles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServiceServer).PushPathAccessRoles(ctx, req.(*PushPathAccessRolesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIService_PullPathAccessRoles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PullPathAccessRolesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServiceServer).PullPathAccessRoles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.bucketsd.pb.APIService/PullPathAccessRoles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServiceServer).PullPathAccessRoles(ctx, req.(*PullPathAccessRolesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIService_DefaultArchiveConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DefaultArchiveConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServiceServer).DefaultArchiveConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.bucketsd.pb.APIService/DefaultArchiveConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServiceServer).DefaultArchiveConfig(ctx, req.(*DefaultArchiveConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIService_SetDefaultArchiveConfig_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetDefaultArchiveConfigRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServiceServer).SetDefaultArchiveConfig(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.bucketsd.pb.APIService/SetDefaultArchiveConfig",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServiceServer).SetDefaultArchiveConfig(ctx, req.(*SetDefaultArchiveConfigRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIService_Archive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArchiveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServiceServer).Archive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.bucketsd.pb.APIService/Archive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServiceServer).Archive(ctx, req.(*ArchiveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIService_Archives_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ArchivesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(APIServiceServer).Archives(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.bucketsd.pb.APIService/Archives",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(APIServiceServer).Archives(ctx, req.(*ArchivesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _APIService_ArchiveWatch_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ArchiveWatchRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(APIServiceServer).ArchiveWatch(m, &aPIServiceArchiveWatchServer{stream})
}

type APIService_ArchiveWatchServer interface {
	Send(*ArchiveWatchResponse) error
	grpc.ServerStream
}

type aPIServiceArchiveWatchServer struct {
	grpc.ServerStream
}

func (x *aPIServiceArchiveWatchServer) Send(m *ArchiveWatchResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _APIService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.bucketsd.pb.APIService",
	HandlerType: (*APIServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "List",
			Handler:    _APIService_List_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _APIService_Create_Handler,
		},
		{
			MethodName: "Root",
			Handler:    _APIService_Root_Handler,
		},
		{
			MethodName: "Links",
			Handler:    _APIService_Links_Handler,
		},
		{
			MethodName: "ListPath",
			Handler:    _APIService_ListPath_Handler,
		},
		{
			MethodName: "ListIpfsPath",
			Handler:    _APIService_ListIpfsPath_Handler,
		},
		{
			MethodName: "SetPath",
			Handler:    _APIService_SetPath_Handler,
		},
		{
			MethodName: "Remove",
			Handler:    _APIService_Remove_Handler,
		},
		{
			MethodName: "RemovePath",
			Handler:    _APIService_RemovePath_Handler,
		},
		{
			MethodName: "PushPathAccessRoles",
			Handler:    _APIService_PushPathAccessRoles_Handler,
		},
		{
			MethodName: "PullPathAccessRoles",
			Handler:    _APIService_PullPathAccessRoles_Handler,
		},
		{
			MethodName: "DefaultArchiveConfig",
			Handler:    _APIService_DefaultArchiveConfig_Handler,
		},
		{
			MethodName: "SetDefaultArchiveConfig",
			Handler:    _APIService_SetDefaultArchiveConfig_Handler,
		},
		{
			MethodName: "Archive",
			Handler:    _APIService_Archive_Handler,
		},
		{
			MethodName: "Archives",
			Handler:    _APIService_Archives_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PushPath",
			Handler:       _APIService_PushPath_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "PullPath",
			Handler:       _APIService_PullPath_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "PullIpfsPath",
			Handler:       _APIService_PullIpfsPath_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ArchiveWatch",
			Handler:       _APIService_ArchiveWatch_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api/bucketsd/pb/bucketsd.proto",
}
